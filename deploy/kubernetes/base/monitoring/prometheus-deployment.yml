apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: agent-agency
  labels:
    app: prometheus
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        component: monitoring
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        ports:
        - containerPort: 9090
          name: http
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --storage.tsdb.retention.time=200h
        - --web.enable-lifecycle
        - --web.enable-admin-api
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: storage
          mountPath: /prometheus
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: prometheus-config
      - name: storage
        persistentVolumeClaim:
          claimName: prometheus-storage
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: agent-agency
  labels:
    app: prometheus
    component: monitoring
spec:
  selector:
    app: prometheus
  ports:
  - name: http
    port: 9090
    targetPort: 9090
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: agent-agency
spec:
  data:
    prometheus.yml: |
      global:
        scrape_interval: 15s
        evaluation_interval: 15s

      rule_files:
        # - "first_rules.yml"
        # - "second_rules.yml"

      scrape_configs:
        # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']

        - job_name: 'orchestrator'
          static_configs:
            - targets: ['agent-agency-orchestrator:8080']
          metrics_path: '/metrics'
          scrape_interval: 10s

        - job_name: 'council'
          static_configs:
            - targets: ['agent-agency-council:8081']
          metrics_path: '/metrics'
          scrape_interval: 10s

        - job_name: 'postgres'
          static_configs:
            - targets: ['postgres:9187']
          scrape_interval: 30s

        - job_name: 'redis'
          static_configs:
            - targets: ['redis-exporter:9121']
          scrape_interval: 30s

        - job_name: 'node'
          ec2_sd_configs:
            - region: us-east-1
              port: 9100
          relabel_configs:
            - source_labels: [__meta_ec2_tag_Name]
              regex: 'agent-agency-.*'
              action: keep
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: agent-agency
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: agent-agency
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: agent-agency
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: gp3
