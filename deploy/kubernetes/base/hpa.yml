apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: orchestrator-hpa
  namespace: agent-agency
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: orchestrator
  minReplicas: 3
  maxReplicas: 50
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: agent_agency_active_tasks
      target:
        type: AverageValue
        averageValue: 100  # Scale up when average active tasks > 100
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 5
        periodSeconds: 60
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: council-hpa
  namespace: agent-agency
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: council
  minReplicas: 2
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  - type: Pods
    pods:
      metric:
        name: agent_agency_council_evaluations_active
      target:
        type: AverageValue
        averageValue: 50  # Scale up when average active evaluations > 50
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Percent
        value: 20
        periodSeconds: 120
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
      - type: Percent
        value: 100
        periodSeconds: 120
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: postgres-hpa
  namespace: agent-agency
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: postgres
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  - type: External
    external:
      metric:
        name: pg_stat_activity_count
        selector:
          matchLabels:
            db: agent_agency
      target:
        type: AverageValue
        averageValue: 100  # Scale up when average connections > 100
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-adapter-config
  namespace: agent-agency
spec:
  data:
    config.yaml: |
      rules:
      - seriesQuery: 'agent_agency_active_tasks{kubernetes_namespace!="",kubernetes_pod_name!=""}'
        resources:
          overrides:
            kubernetes_namespace: {resource: "namespace"}
            kubernetes_pod_name: {resource: "pod"}
        name:
          matches: "^(.*)_active_tasks$"
          as: "${1}_active_tasks"
        metricsQuery: 'avg(<<.Series>>{<<.LabelMatchers>>})'

      - seriesQuery: 'agent_agency_council_evaluations_active{kubernetes_namespace!="",kubernetes_pod_name!=""}'
        resources:
          overrides:
            kubernetes_namespace: {resource: "namespace"}
            kubernetes_pod_name: {resource: "pod"}
        name:
          matches: "^(.*)_evaluations_active$"
          as: "${1}_evaluations_active"
        metricsQuery: 'avg(<<.Series>>{<<.LabelMatchers>>})'

      - seriesQuery: 'pg_stat_activity_count{datname="agent_agency"}'
        resources:
          overrides:
            datname: {resource: "datname"}
        name:
          matches: "^(.*)$"
          as: "pg_stat_activity_count"
        metricsQuery: 'avg(pg_stat_activity_count{datname="agent_agency"})'
