openapi: 3.0.3
info:
  title: Quality Gates API
  description: API for quality assurance, testing, and compliance validation
  version: 1.0.0
  contact:
    name: @darianrosebrook

servers:
  - url: http://localhost:3000/api/v1/quality
    description: Development server
  - url: https://api.agent-agency.com/v1/quality
    description: Production server

paths:
  /gates:
    get:
      summary: List all quality gates
      operationId: listGates
      tags:
        - Gate Management
      responses:
        '200':
          description: List of quality gates
          content:
            application/json:
              schema:
                type: object
                properties:
                  gates:
                    type: array
                    items:
                      $ref: '#/components/schemas/QualityGate'
                  total:
                    type: integer
        '500':
          $ref: '#/components/responses/InternalServerError'

  /gates/{gateId}:
    get:
      summary: Get gate details and status
      operationId: getGate
      tags:
        - Gate Management
      parameters:
        - name: gateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Gate details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityGate'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /gates/{gateId}/check:
    post:
      summary: Run quality gate check
      operationId: checkGate
      tags:
        - Gate Execution
      parameters:
        - name: gateId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GateCheckRequest'
      responses:
        '200':
          description: Gate check completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GateCheckResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tests/run:
    post:
      summary: Run test suite
      operationId: runTests
      tags:
        - Testing
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRunRequest'
      responses:
        '200':
          description: Test run completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRunResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /coverage/report:
    get:
      summary: Get coverage report
      operationId: getCoverage
      tags:
        - Testing
      parameters:
        - name: format
          in: query
          schema:
            type: string
            enum: [json, html, lcov, clover]
            default: json
        - name: threshold
          in: query
          schema:
            type: number
            minimum: 0
            maximum: 100
      responses:
        '200':
          description: Coverage report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverageReport'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /mutation/run:
    post:
      summary: Run mutation testing
      operationId: runMutationTests
      tags:
        - Testing
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MutationTestRequest'
      responses:
        '200':
          description: Mutation test completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutationTestResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /lint/run:
    post:
      summary: Run linting checks
      operationId: runLint
      tags:
        - Code Quality
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LintRequest'
      responses:
        '200':
          description: Linting completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LintResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /security/scan:
    post:
      summary: Run security scan
      operationId: runSecurityScan
      tags:
        - Security
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityScanRequest'
      responses:
        '200':
          description: Security scan completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScanResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /performance/benchmark:
    post:
      summary: Run performance benchmarks
      operationId: runBenchmark
      tags:
        - Performance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenchmarkRequest'
      responses:
        '200':
          description: Benchmark completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchmarkResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /contract/test:
    post:
      summary: Run contract tests
      operationId: runContractTests
      tags:
        - Contract Testing
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractTestRequest'
      responses:
        '200':
          description: Contract tests completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractTestResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /validate/spec:
    post:
      summary: Validate working specification
      operationId: validateSpec
      tags:
        - Validation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecValidationRequest'
      responses:
        '200':
          description: Specification validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecValidationResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /waivers:
    get:
      summary: List quality gate waivers
      operationId: listWaivers
      tags:
        - Waivers
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, expired, revoked, all]
            default: active
      responses:
        '200':
          description: List of waivers
          content:
            application/json:
              schema:
                type: object
                properties:
                  waivers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Waiver'
                  total:
                    type: integer
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create quality gate waiver
      operationId: createWaiver
      tags:
        - Waivers
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaiverRequest'
      responses:
        '201':
          description: Waiver created
          content:
            application/json:
              schema:
                type: object
                properties:
                  waiverId:
                    type: string
                  status:
                    type: string
                    enum: [pending, approved, rejected]
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    QualityGate:
      type: object
      required:
        - id
        - name
        - description
        - category
        - riskTier
        - criteria
        - status
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
          enum: [testing, security, performance, compliance, code_quality]
        riskTier:
          type: integer
          minimum: 1
          maximum: 3
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/GateCriterion'
        status:
          type: string
          enum: [active, disabled, deprecated]
        lastRun:
          type: string
          format: date-time
        successRate:
          type: number
          minimum: 0
          maximum: 1

    GateCriterion:
      type: object
      required:
        - name
        - type
        - threshold
      properties:
        name:
          type: string
        type:
          type: string
          enum: [coverage, mutation_score, lint_errors, security_vulns, performance, contract_compliance]
        threshold:
          type: number
        operator:
          type: string
          enum: [gte, gt, lte, lt, eq]
          default: gte

    GateCheckRequest:
      type: object
      properties:
        target:
          type: string
          description: Specific target to check (file, module, etc.)
        options:
          type: object
          additionalProperties: true

    GateCheckResult:
      type: object
      required:
        - gateId
        - status
        - score
        - criteria
      properties:
        gateId:
          type: string
        status:
          type: string
          enum: [pass, fail, warning]
        score:
          type: number
          minimum: 0
          maximum: 1
        criteria:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              status:
                type: string
                enum: [pass, fail]
              value:
                type: number
              threshold:
                type: number
        executionTime:
          type: number
        details:
          type: object
          additionalProperties: true

    TestRunRequest:
      type: object
      properties:
        suite:
          type: string
          enum: [unit, integration, e2e, all]
          default: all
        pattern:
          type: string
          description: Test file pattern to match
        parallel:
          type: boolean
          default: true
        coverage:
          type: boolean
          default: true
        timeout:
          type: integer
          default: 300000

    TestRunResult:
      type: object
      required:
        - status
        - stats
      properties:
        status:
          type: string
          enum: [success, failure, timeout]
        stats:
          type: object
          properties:
            total:
              type: integer
            passed:
              type: integer
            failed:
              type: integer
            skipped:
              type: integer
            duration:
              type: number
        failures:
          type: array
          items:
            type: object
            properties:
              test:
                type: string
              error:
                type: string
              stack:
                type: string
        coverage:
          $ref: '#/components/schemas/CoverageReport'

    CoverageReport:
      type: object
      required:
        - total
        - covered
        - percentage
      properties:
        total:
          type: integer
        covered:
          type: integer
        percentage:
          type: number
          minimum: 0
          maximum: 100
        byFile:
          type: object
          additionalProperties:
            type: object
            properties:
              total:
                type: integer
              covered:
                type: integer
              percentage:
                type: number

    MutationTestRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
        reporters:
          type: array
          items:
            type: string
          default: ["html", "json"]
        timeout:
          type: integer
          default: 600000

    MutationTestResult:
      type: object
      required:
        - score
        - totalMutants
        - killedMutants
        - survivedMutants
      properties:
        score:
          type: number
          minimum: 0
          maximum: 1
        totalMutants:
          type: integer
        killedMutants:
          type: integer
        survivedMutants:
          type: integer
        timeoutMutants:
          type: integer
        noCoverageMutants:
          type: integer
        survived:
          type: array
          items:
            type: object
            properties:
              mutatorName:
                type: string
              fileName:
                type: string
              location:
                type: object
                properties:
                  start:
                    type: object
                    properties:
                      line:
                        type: integer
                      column:
                        type: integer
                  end:
                    type: object
                    properties:
                      line:
                        type: integer
                      column:
                        type: integer

    LintRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
        fix:
          type: boolean
          default: false
        format:
          type: string
          enum: [stylish, json, compact]
          default: stylish

    LintResult:
      type: object
      required:
        - status
        - errorCount
        - warningCount
      properties:
        status:
          type: string
          enum: [success, failure]
        errorCount:
          type: integer
        warningCount:
          type: integer
        results:
          type: array
          items:
            type: object
            properties:
              filePath:
                type: string
              messages:
                type: array
                items:
                  type: object
                  properties:
                    ruleId:
                      type: string
                    severity:
                      type: integer
                    message:
                      type: string
                    line:
                      type: integer
                    column:
                      type: integer
                    source:
                      type: string

    SecurityScanRequest:
      type: object
      properties:
        scope:
          type: string
          enum: [dependencies, code, secrets, all]
          default: all
        severity:
          type: string
          enum: [low, medium, high, critical]
          default: medium

    SecurityScanResult:
      type: object
      required:
        - status
        - vulnerabilities
      properties:
        status:
          type: string
          enum: [clean, vulnerable, error]
        vulnerabilities:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              severity:
                type: string
              title:
                type: string
              description:
                type: string
              file:
                type: string
              line:
                type: integer
              cwe:
                type: string
              cvss:
                type: number
        summary:
          type: object
          properties:
            total:
              type: integer
            critical:
              type: integer
            high:
              type: integer
            medium:
              type: integer
            low:
              type: integer

    BenchmarkRequest:
      type: object
      properties:
        targets:
          type: array
          items:
            type: string
        metrics:
          type: array
          items:
            type: string
          default: ["response_time", "throughput", "memory_usage"]
        duration:
          type: integer
          default: 60000
        concurrency:
          type: integer
          default: 10

    BenchmarkResult:
      type: object
      required:
        - status
        - metrics
      properties:
        status:
          type: string
          enum: [completed, failed]
        metrics:
          type: object
          additionalProperties:
            type: object
            properties:
              value:
                type: number
              unit:
                type: string
              samples:
                type: integer
              min:
                type: number
              max:
                type: number
              avg:
                type: number
              p95:
                type: number
              p99:
                type: number
        comparisons:
          type: object
          additionalProperties:
            type: object
            properties:
              baseline:
                type: number
              current:
                type: number
              change:
                type: number
              percentage:
                type: number

    ContractTestRequest:
      type: object
      properties:
        specs:
          type: array
          items:
            type: string
        providers:
          type: array
          items:
            type: string
        consumers:
          type: array
          items:
            type: string

    ContractTestResult:
      type: object
      required:
        - status
        - contracts
      properties:
        status:
          type: string
          enum: [success, failure]
        contracts:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              provider:
                type: string
              consumer:
                type: string
              status:
                type: string
                enum: [compatible, incompatible, error]
              violations:
                type: array
                items:
                  type: string
              version:
                type: string

    SpecValidationRequest:
      type: object
      required:
        - spec
      properties:
        spec:
          type: object
          additionalProperties: true
        strict:
          type: boolean
          default: true
        suggestions:
          type: boolean
          default: false

    SpecValidationResult:
      type: object
      required:
        - valid
        - score
        - errors
        - warnings
      properties:
        valid:
          type: boolean
        score:
          type: number
          minimum: 0
          maximum: 100
        errors:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        suggestions:
          type: array
          items:
            type: string

    Waiver:
      type: object
      required:
        - id
        - title
        - reason
        - gates
        - createdAt
        - expiresAt
        - status
      properties:
        id:
          type: string
        title:
          type: string
        reason:
          type: string
        description:
          type: string
        gates:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        approvedBy:
          type: string
        status:
          type: string
          enum: [active, expired, revoked]

    WaiverRequest:
      type: object
      required:
        - title
        - reason
        - description
        - gates
        - expiresAt
        - approvedBy
        - impactLevel
        - mitigationPlan
      properties:
        title:
          type: string
        reason:
          type: string
          enum: [emergency_hotfix, legacy_integration, experimental_feature, third_party_constraint, performance_critical, security_patch, infrastructure_limitation, other]
        description:
          type: string
        gates:
          type: array
          items:
            type: string
        expiresAt:
          type: string
          format: date-time
        approvedBy:
          type: string
        impactLevel:
          type: string
          enum: [low, medium, high, critical]
        mitigationPlan:
          type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
              details:
                type: object
                additionalProperties: true

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
              requestId:
                type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Gate Management
    description: Quality gate configuration and monitoring
  - name: Gate Execution
    description: Running quality gate checks
  - name: Testing
    description: Test execution and coverage analysis
  - name: Code Quality
    description: Linting and static analysis
  - name: Security
    description: Security scanning and vulnerability assessment
  - name: Performance
    description: Performance benchmarking and monitoring
  - name: Contract Testing
    description: API contract compatibility testing
  - name: Validation
    description: Specification and configuration validation
  - name: Waivers
    description: Quality gate waiver management
