{
  "files": {
    "src/resources/AdaptiveResourceManager.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "21",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 117
            },
            "start": {
              "column": 25,
              "line": 114
            }
          }
        },
        {
          "id": "26",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 122
            },
            "start": {
              "column": 31,
              "line": 119
            }
          }
        },
        {
          "id": "32",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 134
            },
            "start": {
              "column": 60,
              "line": 128
            }
          }
        },
        {
          "id": "33",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 10,
              "line": 131
            },
            "start": {
              "column": 13,
              "line": 129
            }
          }
        },
        {
          "id": "34",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 10,
              "line": 133
            },
            "start": {
              "column": 25,
              "line": 131
            }
          }
        },
        {
          "id": "36",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 66,
              "line": 132
            },
            "start": {
              "column": 57,
              "line": 132
            }
          }
        },
        {
          "id": "55",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 180
            },
            "start": {
              "column": 65,
              "line": 175
            }
          }
        },
        {
          "id": "57",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 10,
              "line": 179
            },
            "start": {
              "column": 67,
              "line": 176
            }
          }
        },
        {
          "id": "58",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 190
            },
            "start": {
              "column": 21,
              "line": 183
            }
          }
        },
        {
          "id": "60",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 187
            },
            "start": {
              "column": 55,
              "line": 184
            }
          }
        },
        {
          "id": "67",
          "mutatorName": "ArithmeticOperator",
          "replacement": "poolStats.usedCpuCapacity / poolStats.totalCpuCapacity / 100",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 73,
              "line": 213
            },
            "start": {
              "column": 11,
              "line": 213
            }
          }
        },
        {
          "id": "68",
          "mutatorName": "ArithmeticOperator",
          "replacement": "poolStats.usedCpuCapacity * poolStats.totalCpuCapacity",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 66,
              "line": 213
            },
            "start": {
              "column": 12,
              "line": 213
            }
          }
        },
        {
          "id": "73",
          "mutatorName": "ArithmeticOperator",
          "replacement": "poolStats.usedMemoryCapacity / poolStats.totalMemoryCapacity / 100",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 79,
              "line": 218
            },
            "start": {
              "column": 11,
              "line": 218
            }
          }
        },
        {
          "id": "74",
          "mutatorName": "ArithmeticOperator",
          "replacement": "poolStats.usedMemoryCapacity * poolStats.totalMemoryCapacity",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 72,
              "line": 218
            },
            "start": {
              "column": 12,
              "line": 218
            }
          }
        },
        {
          "id": "81",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 232
            },
            "start": {
              "column": 35,
              "line": 227
            }
          }
        },
        {
          "id": "91",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 242
            },
            "start": {
              "column": 12,
              "line": 237
            }
          }
        },
        {
          "id": "108",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 306
            },
            "start": {
              "column": 21,
              "line": 304
            }
          }
        },
        {
          "id": "112",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 314
            },
            "start": {
              "column": 39,
              "line": 312
            }
          }
        },
        {
          "id": "115",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 327
            },
            "start": {
              "column": 28,
              "line": 316
            }
          }
        },
        {
          "id": "116",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 326
            },
            "start": {
              "column": 41,
              "line": 317
            }
          }
        },
        {
          "id": "117",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 10,
              "line": 321
            },
            "start": {
              "column": 24,
              "line": 318
            }
          }
        },
        {
          "id": "118",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 10,
              "line": 325
            },
            "start": {
              "column": 27,
              "line": 322
            }
          }
        },
        {
          "id": "122",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 332
            },
            "start": {
              "column": 44,
              "line": 330
            }
          }
        },
        {
          "id": "131",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 371
            },
            "start": {
              "column": 42,
              "line": 369
            }
          }
        },
        {
          "id": "144",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 402
            },
            "start": {
              "column": 45,
              "line": 400
            }
          }
        },
        {
          "id": "147",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 431
            },
            "start": {
              "column": 21,
              "line": 411
            }
          }
        },
        {
          "id": "148",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 421
            },
            "start": {
              "column": 44,
              "line": 412
            }
          }
        },
        {
          "id": "149",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + startTime",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 43,
              "line": 418
            },
            "start": {
              "column": 21,
              "line": 418
            }
          }
        },
        {
          "id": "151",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 23,
              "line": 420
            },
            "start": {
              "column": 18,
              "line": 420
            }
          }
        },
        {
          "id": "153",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 428
            },
            "start": {
              "column": 50,
              "line": 425
            }
          }
        },
        {
          "id": "7",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 47,
              "line": 65
            },
            "start": {
              "column": 45,
              "line": 65
            }
          }
        },
        {
          "id": "9",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 55,
              "line": 68
            },
            "start": {
              "column": 30,
              "line": 68
            }
          }
        },
        {
          "id": "16",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 61,
              "line": 102
            },
            "start": {
              "column": 22,
              "line": 102
            }
          }
        },
        {
          "id": "22",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 58,
              "line": 115
            },
            "start": {
              "column": 24,
              "line": 115
            }
          }
        },
        {
          "id": "27",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 65,
              "line": 120
            },
            "start": {
              "column": 24,
              "line": 120
            }
          }
        },
        {
          "id": "35",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 55,
              "line": 132
            },
            "start": {
              "column": 29,
              "line": 132
            }
          }
        },
        {
          "id": "37",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 57,
              "line": 137
            },
            "start": {
              "column": 22,
              "line": 137
            }
          }
        },
        {
          "id": "47",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 57,
              "line": 156
            },
            "start": {
              "column": 22,
              "line": 156
            }
          }
        },
        {
          "id": "56",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 65,
              "line": 176
            },
            "start": {
              "column": 26,
              "line": 176
            }
          }
        },
        {
          "id": "59",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 53,
              "line": 184
            },
            "start": {
              "column": 25,
              "line": 184
            }
          }
        },
        {
          "id": "82",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 41,
              "line": 228
            },
            "start": {
              "column": 31,
              "line": 228
            }
          }
        },
        {
          "id": "83",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 34,
              "line": 231
            },
            "start": {
              "column": 33,
              "line": 229
            }
          }
        },
        {
          "id": "89",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 43,
              "line": 233
            },
            "start": {
              "column": 31,
              "line": 233
            }
          }
        },
        {
          "id": "90",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 35,
              "line": 236
            },
            "start": {
              "column": 33,
              "line": 234
            }
          }
        },
        {
          "id": "92",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 41,
              "line": 238
            },
            "start": {
              "column": 31,
              "line": 238
            }
          }
        },
        {
          "id": "93",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 41,
              "line": 241
            },
            "start": {
              "column": 33,
              "line": 239
            }
          }
        },
        {
          "id": "100",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 52,
              "line": 269
            },
            "start": {
              "column": 23,
              "line": 269
            }
          }
        },
        {
          "id": "123",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 45,
              "line": 334
            },
            "start": {
              "column": 22,
              "line": 334
            }
          }
        },
        {
          "id": "132",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 50,
              "line": 370
            },
            "start": {
              "column": 23,
              "line": 370
            }
          }
        },
        {
          "id": "133",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 49,
              "line": 373
            },
            "start": {
              "column": 22,
              "line": 373
            }
          }
        },
        {
          "id": "138",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 51,
              "line": 393
            },
            "start": {
              "column": 24,
              "line": 393
            }
          }
        },
        {
          "id": "145",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 50,
              "line": 404
            },
            "start": {
              "column": 24,
              "line": 404
            }
          }
        },
        {
          "id": "150",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 80,
              "line": 419
            },
            "start": {
              "column": 65,
              "line": 419
            }
          }
        },
        {
          "id": "152",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 48,
              "line": 425
            },
            "start": {
              "column": 25,
              "line": 425
            }
          }
        },
        {
          "id": "11",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 82
            },
            "start": {
              "column": 48,
              "line": 72
            }
          }
        },
        {
          "id": "6",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 62
            },
            "start": {
              "column": 23,
              "line": 62
            }
          }
        },
        {
          "id": "8",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'stop')\n    at AdaptiveResourceManager.initialize (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/AdaptiveResourceManager.ts:142:34)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/performance/resources/AdaptiveResourceManager.performance.test.ts:31:27)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "killedBy": [
            "0"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 92
            },
            "start": {
              "column": 68,
              "line": 67
            }
          }
        },
        {
          "id": "10",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'cpuWarning')\n    at new AdaptiveResourceManager (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/AdaptiveResourceManager.ts:118:43)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/performance/resources/AdaptiveResourceManager.performance.test.ts:22:23)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "killedBy": [
            "0"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 69
            },
            "start": {
              "column": 19,
              "line": 69
            }
          }
        },
        {
          "id": "12",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 77
            },
            "start": {
              "column": 22,
              "line": 74
            }
          }
        },
        {
          "id": "13",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 81
            },
            "start": {
              "column": 25,
              "line": 78
            }
          }
        },
        {
          "id": "15",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 27,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 108
            },
            "start": {
              "column": 37,
              "line": 97
            }
          }
        },
        {
          "id": "14",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 91
            },
            "start": {
              "column": 71,
              "line": 89
            }
          }
        },
        {
          "id": "17",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 27,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 107
            },
            "start": {
              "column": 63,
              "line": 102
            }
          }
        },
        {
          "id": "19",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:40:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 114
            },
            "start": {
              "column": 9,
              "line": 114
            }
          }
        },
        {
          "id": "20",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 114
            },
            "start": {
              "column": 9,
              "line": 114
            }
          }
        },
        {
          "id": "18",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:40:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 138
            },
            "start": {
              "column": 32,
              "line": 113
            }
          }
        },
        {
          "id": "23",
          "mutatorName": "BooleanLiteral",
          "replacement": "this.config.enabled",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:40:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 119
            },
            "start": {
              "column": 9,
              "line": 119
            }
          }
        },
        {
          "id": "25",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 119
            },
            "start": {
              "column": 9,
              "line": 119
            }
          }
        },
        {
          "id": "28",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:40:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 124
            },
            "start": {
              "column": 22,
              "line": 124
            }
          }
        },
        {
          "id": "24",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:40:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 119
            },
            "start": {
              "column": 9,
              "line": 119
            }
          }
        },
        {
          "id": "29",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 127
            },
            "start": {
              "column": 9,
              "line": 127
            }
          }
        },
        {
          "id": "31",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 135
            },
            "start": {
              "column": 45,
              "line": 127
            }
          }
        },
        {
          "id": "30",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 127
            },
            "start": {
              "column": 9,
              "line": 127
            }
          }
        },
        {
          "id": "38",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:45:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 157
            },
            "start": {
              "column": 31,
              "line": 143
            }
          }
        },
        {
          "id": "39",
          "mutatorName": "BooleanLiteral",
          "replacement": "this.isRunning",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:45:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 144
            },
            "start": {
              "column": 9,
              "line": 144
            }
          }
        },
        {
          "id": "42",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 146
            },
            "start": {
              "column": 26,
              "line": 144
            }
          }
        },
        {
          "id": "40",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:45:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 144
            },
            "start": {
              "column": 9,
              "line": 144
            }
          }
        },
        {
          "id": "41",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 144
            },
            "start": {
              "column": 9,
              "line": 144
            }
          }
        },
        {
          "id": "43",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 148
            },
            "start": {
              "column": 9,
              "line": 148
            }
          }
        },
        {
          "id": "44",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 148
            },
            "start": {
              "column": 9,
              "line": 148
            }
          }
        },
        {
          "id": "45",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 151
            },
            "start": {
              "column": 37,
              "line": 148
            }
          }
        },
        {
          "id": "46",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:45:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "52"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 154
            },
            "start": {
              "column": 22,
              "line": 154
            }
          }
        },
        {
          "id": "48",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'requestId')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:67:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 12,
          "killedBy": [
            "53"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 191
            },
            "start": {
              "column": 40,
              "line": 167
            }
          }
        },
        {
          "id": "49",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'requestId')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:67:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 12,
          "killedBy": [
            "53"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 183
            },
            "start": {
              "column": 9,
              "line": 170
            }
          }
        },
        {
          "id": "50",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + startTime",
          "status": "Survived",
          "static": false,
          "testsCompleted": 12,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 174
            },
            "start": {
              "column": 30,
              "line": 174
            }
          }
        },
        {
          "id": "51",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 12,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 175
            },
            "start": {
              "column": 11,
              "line": 175
            }
          }
        },
        {
          "id": "52",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 12,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 175
            },
            "start": {
              "column": 11,
              "line": 175
            }
          }
        },
        {
          "id": "53",
          "mutatorName": "EqualityOperator",
          "replacement": "allocationTime >= this.config.maxAllocationDecisionMs",
          "status": "Survived",
          "static": false,
          "testsCompleted": 12,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 175
            },
            "start": {
              "column": 11,
              "line": 175
            }
          }
        },
        {
          "id": "54",
          "mutatorName": "EqualityOperator",
          "replacement": "allocationTime <= this.config.maxAllocationDecisionMs",
          "status": "Survived",
          "static": false,
          "testsCompleted": 12,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 175
            },
            "start": {
              "column": 11,
              "line": 175
            }
          }
        },
        {
          "id": "61",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 10,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "11",
            "12",
            "15",
            "17",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 200
            },
            "start": {
              "column": 60,
              "line": 198
            }
          }
        },
        {
          "id": "63",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 0\nReceived:    NaN\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:97:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 212
            },
            "start": {
              "column": 7,
              "line": 212
            }
          }
        },
        {
          "id": "62",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'timestamp')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:96:23)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 275
            },
            "start": {
              "column": 54,
              "line": 207
            }
          }
        },
        {
          "id": "64",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 212
            },
            "start": {
              "column": 7,
              "line": 212
            }
          }
        },
        {
          "id": "65",
          "mutatorName": "EqualityOperator",
          "replacement": "poolStats.totalCpuCapacity >= 0",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 0\nReceived:    NaN\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:97:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 212
            },
            "start": {
              "column": 7,
              "line": 212
            }
          }
        },
        {
          "id": "66",
          "mutatorName": "EqualityOperator",
          "replacement": "poolStats.totalCpuCapacity <= 0",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 0\nReceived:    NaN\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:97:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 212
            },
            "start": {
              "column": 7,
              "line": 212
            }
          }
        },
        {
          "id": "69",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 0\nReceived:    NaN\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:97:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 217
            },
            "start": {
              "column": 7,
              "line": 217
            }
          }
        },
        {
          "id": "70",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 217
            },
            "start": {
              "column": 7,
              "line": 217
            }
          }
        },
        {
          "id": "71",
          "mutatorName": "EqualityOperator",
          "replacement": "poolStats.totalMemoryCapacity >= 0",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 0\nReceived:    NaN\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:97:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 217
            },
            "start": {
              "column": 7,
              "line": 217
            }
          }
        },
        {
          "id": "75",
          "mutatorName": "ArithmeticOperator",
          "replacement": "(cpuUtilization + memoryUtilization) * 2",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 221
            },
            "start": {
              "column": 32,
              "line": 221
            }
          }
        },
        {
          "id": "72",
          "mutatorName": "EqualityOperator",
          "replacement": "poolStats.totalMemoryCapacity <= 0",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 0\nReceived:    NaN\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:97:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 217
            },
            "start": {
              "column": 7,
              "line": 217
            }
          }
        },
        {
          "id": "76",
          "mutatorName": "ArithmeticOperator",
          "replacement": "cpuUtilization - memoryUtilization",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 221
            },
            "start": {
              "column": 33,
              "line": 221
            }
          }
        },
        {
          "id": "77",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 227
            },
            "start": {
              "column": 9,
              "line": 227
            }
          }
        },
        {
          "id": "78",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 227
            },
            "start": {
              "column": 9,
              "line": 227
            }
          }
        },
        {
          "id": "79",
          "mutatorName": "EqualityOperator",
          "replacement": "utilizationPercent > 80",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 227
            },
            "start": {
              "column": 9,
              "line": 227
            }
          }
        },
        {
          "id": "80",
          "mutatorName": "EqualityOperator",
          "replacement": "utilizationPercent < 80",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 227
            },
            "start": {
              "column": 9,
              "line": 227
            }
          }
        },
        {
          "id": "84",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 232
            },
            "start": {
              "column": 16,
              "line": 232
            }
          }
        },
        {
          "id": "85",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 232
            },
            "start": {
              "column": 16,
              "line": 232
            }
          }
        },
        {
          "id": "86",
          "mutatorName": "EqualityOperator",
          "replacement": "utilizationPercent < 30",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 232
            },
            "start": {
              "column": 16,
              "line": 232
            }
          }
        },
        {
          "id": "87",
          "mutatorName": "EqualityOperator",
          "replacement": "utilizationPercent > 30",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 232
            },
            "start": {
              "column": 16,
              "line": 232
            }
          }
        },
        {
          "id": "88",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:98:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 237
            },
            "start": {
              "column": 42,
              "line": 232
            }
          }
        },
        {
          "id": "95",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 251
            },
            "start": {
              "column": 22,
              "line": 247
            }
          }
        },
        {
          "id": "94",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor: Date\n\nReceived value has no prototype\nReceived value: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:96:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 265
            },
            "start": {
              "column": 40,
              "line": 244
            }
          }
        },
        {
          "id": "96",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 256
            },
            "start": {
              "column": 21,
              "line": 252
            }
          }
        },
        {
          "id": "97",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 261
            },
            "start": {
              "column": 26,
              "line": 257
            }
          }
        },
        {
          "id": "98",
          "mutatorName": "ArithmeticOperator",
          "replacement": "poolStats.totalCpuCapacity + poolStats.usedCpuCapacity",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 75,
              "line": 258
            },
            "start": {
              "column": 21,
              "line": 258
            }
          }
        },
        {
          "id": "99",
          "mutatorName": "ArithmeticOperator",
          "replacement": "poolStats.totalMemoryCapacity + poolStats.usedMemoryCapacity",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 259
            },
            "start": {
              "column": 19,
              "line": 259
            }
          }
        },
        {
          "id": "102",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'totalAgents')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:108:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "56"
          ],
          "coveredBy": [
            "56"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 284
            },
            "start": {
              "column": 57,
              "line": 282
            }
          }
        },
        {
          "id": "103",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'enabled')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:124:21)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "58"
          ],
          "coveredBy": [
            "58",
            "59"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 293
            },
            "start": {
              "column": 46,
              "line": 291
            }
          }
        },
        {
          "id": "104",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:124:30)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "58"
          ],
          "coveredBy": [
            "58",
            "59"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 292
            },
            "start": {
              "column": 12,
              "line": 292
            }
          }
        },
        {
          "id": "105",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 10000\nReceived: 5000\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:134:43)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 335
            },
            "start": {
              "column": 70,
              "line": 300
            }
          }
        },
        {
          "id": "101",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "5",
            "6",
            "13",
            "55"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 272
            },
            "start": {
              "column": 54,
              "line": 269
            }
          }
        },
        {
          "id": "106",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 304
            },
            "start": {
              "column": 9,
              "line": 304
            }
          }
        },
        {
          "id": "107",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 304
            },
            "start": {
              "column": 9,
              "line": 304
            }
          }
        },
        {
          "id": "109",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 10000\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:134:43)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 309
            },
            "start": {
              "column": 19,
              "line": 309
            }
          }
        },
        {
          "id": "110",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 312
            },
            "start": {
              "column": 9,
              "line": 312
            }
          }
        },
        {
          "id": "111",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 312
            },
            "start": {
              "column": 9,
              "line": 312
            }
          }
        },
        {
          "id": "113",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'cpuWarning')\n    at AdaptiveResourceManager.updateConfig (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/AdaptiveResourceManager.ts:461:42)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:129:15)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 316
            },
            "start": {
              "column": 9,
              "line": 316
            }
          }
        },
        {
          "id": "114",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 316
            },
            "start": {
              "column": 9,
              "line": 316
            }
          }
        },
        {
          "id": "119",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 330
            },
            "start": {
              "column": 9,
              "line": 330
            }
          }
        },
        {
          "id": "120",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 330
            },
            "start": {
              "column": 9,
              "line": 330
            }
          }
        },
        {
          "id": "121",
          "mutatorName": "LogicalOperator",
          "replacement": "wasRunning || this.config.enabled",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "59"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 330
            },
            "start": {
              "column": 9,
              "line": 330
            }
          }
        },
        {
          "id": "124",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:32:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "51"
          ],
          "coveredBy": [
            "51",
            "52"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 354
            },
            "start": {
              "column": 5,
              "line": 347
            }
          }
        },
        {
          "id": "125",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:40:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "52"
          ],
          "coveredBy": [
            "51",
            "52"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 353
            },
            "start": {
              "column": 12,
              "line": 348
            }
          }
        },
        {
          "id": "126",
          "mutatorName": "OptionalChaining",
          "replacement": "this.lastCapacityAnalysis.timestamp",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'timestamp')\n    at AdaptiveResourceManager.getHealthStatus (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/AdaptiveResourceManager.ts:502:81)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:31:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "51"
          ],
          "coveredBy": [
            "51",
            "52"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 350
            },
            "start": {
              "column": 27,
              "line": 350
            }
          }
        },
        {
          "id": "127",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'eventId')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:144:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "60"
          ],
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 432
            },
            "start": {
              "column": 29,
              "line": 366
            }
          }
        },
        {
          "id": "128",
          "mutatorName": "BooleanLiteral",
          "replacement": "this.config.enableAutoFailover",
          "statusReason": "Error: Auto-failover is disabled\n    at AdaptiveResourceManager.handleFailover (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/AdaptiveResourceManager.ts:527:17)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:142:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "60"
          ],
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 369
            },
            "start": {
              "column": 9,
              "line": 369
            }
          }
        },
        {
          "id": "129",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: Auto-failover is disabled\n    at AdaptiveResourceManager.handleFailover (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/AdaptiveResourceManager.ts:527:17)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:142:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "60"
          ],
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 369
            },
            "start": {
              "column": 9,
              "line": 369
            }
          }
        },
        {
          "id": "130",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 5,
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 369
            },
            "start": {
              "column": 9,
              "line": 369
            }
          }
        },
        {
          "id": "134",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 5,
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 376
            },
            "start": {
              "column": 51,
              "line": 373
            }
          }
        },
        {
          "id": "135",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'eventId')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:144:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "60"
          ],
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 411
            },
            "start": {
              "column": 9,
              "line": 378
            }
          }
        },
        {
          "id": "136",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeTruthy()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:144:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "60"
          ],
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 395
            },
            "start": {
              "column": 44,
              "line": 386
            }
          }
        },
        {
          "id": "137",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + startTime",
          "status": "Survived",
          "static": false,
          "testsCompleted": 5,
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 392
            },
            "start": {
              "column": 21,
              "line": 392
            }
          }
        },
        {
          "id": "139",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/performance/resources/AdaptiveResourceManager.performance.test.ts:302:38)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 394
            },
            "start": {
              "column": 18,
              "line": 394
            }
          }
        },
        {
          "id": "140",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 1\nReceived:    0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:155:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "61"
          ],
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 400
            },
            "start": {
              "column": 11,
              "line": 400
            }
          }
        },
        {
          "id": "141",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 5,
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 400
            },
            "start": {
              "column": 11,
              "line": 400
            }
          }
        },
        {
          "id": "142",
          "mutatorName": "EqualityOperator",
          "replacement": "this.failoverEvents.length >= 100",
          "status": "Survived",
          "static": false,
          "testsCompleted": 5,
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 400
            },
            "start": {
              "column": 11,
              "line": 400
            }
          }
        },
        {
          "id": "154",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:155:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "61"
          ],
          "coveredBy": [
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 442
            },
            "start": {
              "column": 59,
              "line": 440
            }
          }
        },
        {
          "id": "155",
          "mutatorName": "MethodExpression",
          "replacement": "this.failoverEvents",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "61"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 441
            },
            "start": {
              "column": 12,
              "line": 441
            }
          }
        },
        {
          "id": "143",
          "mutatorName": "EqualityOperator",
          "replacement": "this.failoverEvents.length <= 100",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 1\nReceived:    0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:155:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "61"
          ],
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 400
            },
            "start": {
              "column": 11,
              "line": 400
            }
          }
        },
        {
          "id": "146",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 5,
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 408
            },
            "start": {
              "column": 52,
              "line": 404
            }
          }
        },
        {
          "id": "156",
          "mutatorName": "UnaryOperator",
          "replacement": "+count",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 1\nReceived:    0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:155:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "61"
          ],
          "coveredBy": [
            "61"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 441
            },
            "start": {
              "column": 38,
              "line": 441
            }
          }
        },
        {
          "id": "157",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'totalRequests')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:116:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "57"
          ],
          "coveredBy": [
            "57"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 451
            },
            "start": {
              "column": 29,
              "line": 449
            }
          }
        },
        {
          "id": "158",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/integration/resources/AdaptiveResourceManager.integration.test.ts:196:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "16"
          ],
          "coveredBy": [
            "16"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 460
            },
            "start": {
              "column": 61,
              "line": 458
            }
          }
        },
        {
          "id": "0",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'cpuWarning')\n    at new AdaptiveResourceManager (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/AdaptiveResourceManager.ts:118:43)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:20:15)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34), TypeError: Cannot read properties of undefined (reading 'stop')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:24:19)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": true,
          "testsCompleted": 29,
          "killedBy": [
            "51"
          ],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 44
            },
            "start": {
              "column": 55,
              "line": 29
            }
          }
        },
        {
          "id": "1",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:40:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": true,
          "testsCompleted": 29,
          "killedBy": [
            "52"
          ],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 16,
              "line": 30
            },
            "start": {
              "column": 12,
              "line": 30
            }
          }
        },
        {
          "id": "2",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "status": "Survived",
          "static": true,
          "testsCompleted": 29,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 34,
              "line": 33
            },
            "start": {
              "column": 30,
              "line": 33
            }
          }
        },
        {
          "id": "3",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Error: Auto-failover is disabled\n    at AdaptiveResourceManager.handleFailover (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/AdaptiveResourceManager.ts:527:17)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:142:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": true,
          "testsCompleted": 29,
          "killedBy": [
            "60"
          ],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 27,
              "line": 34
            },
            "start": {
              "column": 23,
              "line": 34
            }
          }
        },
        {
          "id": "4",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": true,
          "testsCompleted": 29,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 40
            },
            "start": {
              "column": 15,
              "line": 35
            }
          }
        },
        {
          "id": "5",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "status": "Survived",
          "static": true,
          "testsCompleted": 29,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 31,
              "line": 42
            },
            "start": {
              "column": 27,
              "line": 42
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Adaptive Resource Manager - Main Resource Management Component\n *\n * Coordinates resource monitoring, load balancing, and allocation.\n * Provides dynamic resource management with failover capabilities.\n *\n * @author @darianrosebrook\n */\n\nimport { Logger } from \"@/observability/Logger\";\nimport {\n  LoadBalancingStrategy,\n  type AdaptiveResourceManagerConfig,\n  type CapacityAnalysis,\n  type FailoverEvent,\n  type IAdaptiveResourceManager,\n  type ResourceAllocationRequest,\n  type ResourceAllocationResult,\n  type ResourcePoolStats,\n} from \"@/types/resource-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { LoadBalancer } from \"./LoadBalancer\";\nimport { ResourceAllocator } from \"./ResourceAllocator\";\nimport { ResourceMonitor } from \"./ResourceMonitor\";\n\n/**\n * Default configuration\n */\nconst DEFAULT_CONFIG: AdaptiveResourceManagerConfig = {\n  enabled: true,\n  monitoringIntervalMs: 5000,\n  loadBalancingStrategy: LoadBalancingStrategy.LEAST_LOADED,\n  enableDynamicRateLimiting: true,\n  enableAutoFailover: true,\n  thresholds: {\n    cpuWarning: 70,\n    cpuCritical: 85,\n    memoryWarning: 75,\n    memoryCritical: 90,\n  },\n  maxAllocationDecisionMs: 50,\n  enableCapacityPlanning: true,\n  capacityAnalysisIntervalMs: 300000, // 5 minutes\n};\n\n/**\n * Adaptive Resource Manager\n *\n * Main resource management component that:\n * - Monitors resource usage across agents\n * - Balances load dynamically\n * - Allocates resources efficiently\n * - Handles failovers automatically\n * - Analyzes capacity needs\n */\nexport class AdaptiveResourceManager implements IAdaptiveResourceManager {\n  private logger: Logger;\n  private config: AdaptiveResourceManagerConfig;\n  private resourceMonitor: ResourceMonitor;\n  private loadBalancer: LoadBalancer;\n  private resourceAllocator: ResourceAllocator;\n  private isRunning = false;\n  private capacityAnalysisTimer?: ReturnType<typeof setInterval>;\n  private lastCapacityAnalysis?: CapacityAnalysis;\n  private failoverEvents: FailoverEvent[] = [];\n\n  constructor(config: Partial<AdaptiveResourceManagerConfig> = {}) {\n    this.logger = new Logger(\"AdaptiveResourceManager\");\n    this.config = { ...DEFAULT_CONFIG, ...config };\n\n    // Initialize sub-components\n    this.resourceMonitor = new ResourceMonitor({\n      intervalMs: this.config.monitoringIntervalMs,\n      cpuThresholds: {\n        warning: this.config.thresholds.cpuWarning,\n        critical: this.config.thresholds.cpuCritical,\n      },\n      memoryThresholds: {\n        warning: this.config.thresholds.memoryWarning,\n        critical: this.config.thresholds.memoryCritical,\n      },\n    });\n\n    this.loadBalancer = new LoadBalancer(\n      this.resourceMonitor,\n      this.config.loadBalancingStrategy\n    );\n\n    this.resourceAllocator = new ResourceAllocator(this.loadBalancer, {\n      dynamicAdjustment: this.config.enableDynamicRateLimiting,\n    });\n  }\n\n  /**\n   * Initialize the resource manager\n   */\n  async initialize(): Promise<void> {\n    // Stop monitor first to prevent multiple timers\n    await this.resourceMonitor.stop();\n    await this.resourceMonitor.start();\n\n    this.logger.info(\"Adaptive resource manager initialized\", {\n      enabled: this.config.enabled,\n      strategy: this.config.loadBalancingStrategy,\n      enableFailover: this.config.enableAutoFailover,\n      enableCapacityPlanning: this.config.enableCapacityPlanning,\n    });\n  }\n\n  /**\n   * Start resource management\n   */\n  async start(): Promise<void> {\n    if (this.isRunning) {\n      this.logger.warn(\"Resource manager already running\");\n      return;\n    }\n\n    if (!this.config.enabled) {\n      this.logger.info(\"Resource manager disabled, not starting\");\n      return;\n    }\n\n    this.isRunning = true;\n\n    // Start capacity analysis if enabled\n    if (this.config.enableCapacityPlanning) {\n      this.capacityAnalysisTimer = setInterval(async () => {\n        try {\n          await this.analyzeCapacity();\n        } catch (error) {\n          this.logger.error(\"Capacity analysis failed\", { error });\n        }\n      }, this.config.capacityAnalysisIntervalMs);\n    }\n\n    this.logger.info(\"Adaptive resource manager started\");\n  }\n\n  /**\n   * Stop resource management\n   */\n  async stop(): Promise<void> {\n    if (!this.isRunning) {\n      return;\n    }\n\n    if (this.capacityAnalysisTimer) {\n      clearInterval(this.capacityAnalysisTimer);\n      this.capacityAnalysisTimer = undefined;\n    }\n\n    await this.resourceMonitor.stop();\n    this.isRunning = false;\n\n    this.logger.info(\"Adaptive resource manager stopped\");\n  }\n\n  /**\n   * Allocate resources for a task\n   *\n   * @param request Resource allocation request\n   * @returns Allocation result\n   */\n  async allocateResources(\n    request: ResourceAllocationRequest\n  ): Promise<ResourceAllocationResult> {\n    const startTime = Date.now();\n\n    try {\n      const result = await this.resourceAllocator.allocate(request);\n\n      // Check if allocation took too long\n      const allocationTime = Date.now() - startTime;\n      if (allocationTime > this.config.maxAllocationDecisionMs) {\n        this.logger.warn(\"Allocation decision exceeded max time\", {\n          allocationTime,\n          maxAllocationTime: this.config.maxAllocationDecisionMs,\n        });\n      }\n\n      return result;\n    } catch (error) {\n      this.logger.error(\"Resource allocation failed\", {\n        requestId: request.requestId,\n        error,\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Release resources for a completed task\n   *\n   * @param requestId Request identifier\n   */\n  async releaseResources(requestId: string): Promise<void> {\n    await this.resourceAllocator.release(requestId);\n  }\n\n  /**\n   * Perform capacity analysis\n   *\n   * @returns Capacity analysis result\n   */\n  async analyzeCapacity(): Promise<CapacityAnalysis> {\n    const poolStats = await this.resourceMonitor.getPoolStats();\n\n    // Calculate utilization\n    const cpuUtilization =\n      poolStats.totalCpuCapacity > 0\n        ? (poolStats.usedCpuCapacity / poolStats.totalCpuCapacity) * 100\n        : 0;\n\n    const memoryUtilization =\n      poolStats.totalMemoryCapacity > 0\n        ? (poolStats.usedMemoryCapacity / poolStats.totalMemoryCapacity) * 100\n        : 0;\n\n    const utilizationPercent = (cpuUtilization + memoryUtilization) / 2;\n\n    // Determine scaling recommendation\n    let scalingRecommendation: \"scale_up\" | \"scale_down\" | \"maintain\";\n    let recommendationRationale: string;\n\n    if (utilizationPercent >= 80) {\n      scalingRecommendation = \"scale_up\";\n      recommendationRationale = `High utilization (${utilizationPercent.toFixed(\n        1\n      )}%), recommend scaling up`;\n    } else if (utilizationPercent <= 30) {\n      scalingRecommendation = \"scale_down\";\n      recommendationRationale = `Low utilization (${utilizationPercent.toFixed(\n        1\n      )}%), consider scaling down`;\n    } else {\n      scalingRecommendation = \"maintain\";\n      recommendationRationale = `Utilization at ${utilizationPercent.toFixed(\n        1\n      )}%, current capacity is adequate`;\n    }\n\n    const analysis: CapacityAnalysis = {\n      timestamp: new Date(),\n      windowMs: this.config.capacityAnalysisIntervalMs,\n      totalCapacity: {\n        cpuPercent: poolStats.totalCpuCapacity,\n        memoryMb: poolStats.totalMemoryCapacity,\n        agentCount: poolStats.totalAgents,\n      },\n      usedCapacity: {\n        cpuPercent: poolStats.usedCpuCapacity,\n        memoryMb: poolStats.usedMemoryCapacity,\n        activeAgents: poolStats.activeAgents,\n      },\n      availableCapacity: {\n        cpuPercent: poolStats.totalCpuCapacity - poolStats.usedCpuCapacity,\n        memoryMb: poolStats.totalMemoryCapacity - poolStats.usedMemoryCapacity,\n        idleAgents: poolStats.idleAgents,\n      },\n      utilizationPercent,\n      scalingRecommendation,\n      recommendationRationale,\n    };\n\n    this.lastCapacityAnalysis = analysis;\n\n    this.logger.debug(\"Capacity analysis completed\", {\n      utilization: utilizationPercent.toFixed(1),\n      recommendation: scalingRecommendation,\n    });\n\n    return analysis;\n  }\n\n  /**\n   * Get resource pool statistics\n   *\n   * @returns Resource pool statistics\n   */\n  async getPoolStatistics(): Promise<ResourcePoolStats> {\n    return this.resourceMonitor.getPoolStats();\n  }\n\n  /**\n   * Get current configuration\n   *\n   * @returns Current configuration\n   */\n  getConfig(): AdaptiveResourceManagerConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Update configuration\n   *\n   * @param config Partial configuration update\n   */\n  updateConfig(config: Partial<AdaptiveResourceManagerConfig>): void {\n    const wasRunning = this.isRunning;\n\n    // Stop if running\n    if (wasRunning) {\n      this.stop();\n    }\n\n    // Update config\n    this.config = { ...this.config, ...config };\n\n    // Update sub-components\n    if (config.loadBalancingStrategy) {\n      this.loadBalancer.setStrategy(config.loadBalancingStrategy);\n    }\n\n    if (config.thresholds) {\n      this.resourceMonitor.updateConfig({\n        cpuThresholds: {\n          warning: config.thresholds.cpuWarning,\n          critical: config.thresholds.cpuCritical,\n        },\n        memoryThresholds: {\n          warning: config.thresholds.memoryWarning,\n          critical: config.thresholds.memoryCritical,\n        },\n      });\n    }\n\n    // Restart if was running\n    if (wasRunning && this.config.enabled) {\n      this.start();\n    }\n\n    this.logger.info(\"Configuration updated\", this.config);\n  }\n\n  /**\n   * Get health status\n   *\n   * @returns Health status\n   */\n  getHealthStatus(): {\n    isRunning: boolean;\n    lastMonitoringTime?: Date;\n    activeAllocations: number;\n    failoverEvents: number;\n  } {\n    return {\n      isRunning: this.isRunning,\n      lastMonitoringTime: this.lastCapacityAnalysis?.timestamp,\n      activeAllocations: this.resourceAllocator.getActiveAllocationCount(),\n      failoverEvents: this.failoverEvents.length,\n    };\n  }\n\n  /**\n   * Handle agent failover\n   *\n   * @param failedAgentId Failed agent identifier\n   * @param backupAgentId Backup agent identifier\n   * @returns Failover event\n   */\n  async handleFailover(\n    failedAgentId: string,\n    backupAgentId: string\n  ): Promise<FailoverEvent> {\n    const startTime = Date.now();\n\n    if (!this.config.enableAutoFailover) {\n      throw new Error(\"Auto-failover is disabled\");\n    }\n\n    this.logger.info(\"Initiating agent failover\", {\n      failedAgent: failedAgentId,\n      backupAgent: backupAgentId,\n    });\n\n    try {\n      // Get task count for failed agent\n      const tasksTransferred =\n        this.resourceAllocator.getAgentAllocationCount(failedAgentId);\n\n      // In real implementation, would transfer tasks to backup agent\n      // For now, just record the event\n\n      const failoverEvent: FailoverEvent = {\n        eventId: uuidv4(),\n        failedAgentId,\n        backupAgentId,\n        tasksTransferred,\n        timestamp: new Date(),\n        durationMs: Date.now() - startTime,\n        failureReason: \"Agent health check failed\",\n        success: true,\n      };\n\n      this.failoverEvents.push(failoverEvent);\n\n      // Keep only last 100 failover events\n      if (this.failoverEvents.length > 100) {\n        this.failoverEvents.shift();\n      }\n\n      this.logger.info(\"Agent failover completed\", {\n        eventId: failoverEvent.eventId,\n        tasksTransferred,\n        durationMs: failoverEvent.durationMs,\n      });\n\n      return failoverEvent;\n    } catch (error) {\n      const failoverEvent: FailoverEvent = {\n        eventId: uuidv4(),\n        failedAgentId,\n        backupAgentId,\n        tasksTransferred: 0,\n        timestamp: new Date(),\n        durationMs: Date.now() - startTime,\n        failureReason: error instanceof Error ? error.message : \"Unknown error\",\n        success: false,\n      };\n\n      this.failoverEvents.push(failoverEvent);\n\n      this.logger.error(\"Agent failover failed\", {\n        eventId: failoverEvent.eventId,\n        error,\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Get failover event history\n   *\n   * @param count Number of events to retrieve\n   * @returns Recent failover events\n   */\n  getFailoverHistory(count: number = 10): FailoverEvent[] {\n    return this.failoverEvents.slice(-count);\n  }\n\n  /**\n   * Get allocation statistics\n   *\n   * @returns Allocation statistics\n   */\n  getAllocationStatistics() {\n    return this.resourceAllocator.getAllocationStats();\n  }\n\n  /**\n   * Get load distribution\n   *\n   * @returns Load distribution across agents\n   */\n  async getLoadDistribution(): Promise<Map<string, number>> {\n    return this.loadBalancer.getLoadDistribution();\n  }\n}\n"
    },
    "src/resources/LoadBalancer.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "228",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 235
            },
            "start": {
              "column": 37,
              "line": 233
            }
          }
        },
        {
          "id": "250",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 283
            },
            "start": {
              "column": 37,
              "line": 281
            }
          }
        },
        {
          "id": "265",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 294
            },
            "start": {
              "column": 37,
              "line": 291
            }
          }
        },
        {
          "id": "278",
          "mutatorName": "ArithmeticOperator",
          "replacement": "b.resourceAvailability + a.resourceAvailability",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 56,
              "line": 309
            },
            "start": {
              "column": 9,
              "line": 309
            }
          }
        },
        {
          "id": "160",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 44,
              "line": 40
            },
            "start": {
              "column": 30,
              "line": 40
            }
          }
        },
        {
          "id": "166",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 64,
              "line": 59
            },
            "start": {
              "column": 23,
              "line": 59
            }
          }
        },
        {
          "id": "167",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 46,
              "line": 68
            },
            "start": {
              "column": 44,
              "line": 68
            }
          }
        },
        {
          "id": "174",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 76,
              "line": 97
            },
            "start": {
              "column": 25,
              "line": 97
            }
          }
        },
        {
          "id": "185",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 53,
              "line": 122
            },
            "start": {
              "column": 23,
              "line": 122
            }
          }
        },
        {
          "id": "188",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 55,
              "line": 139
            },
            "start": {
              "column": 22,
              "line": 139
            }
          }
        },
        {
          "id": "193",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 58,
              "line": 165
            },
            "start": {
              "column": 22,
              "line": 165
            }
          }
        },
        {
          "id": "198",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 41,
              "line": 182
            },
            "start": {
              "column": 18,
              "line": 182
            }
          }
        },
        {
          "id": "209",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 66,
              "line": 200
            },
            "start": {
              "column": 23,
              "line": 200
            }
          }
        },
        {
          "id": "223",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 79,
              "line": 219
            },
            "start": {
              "column": 18,
              "line": 219
            }
          }
        },
        {
          "id": "229",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 66,
              "line": 234
            },
            "start": {
              "column": 23,
              "line": 234
            }
          }
        },
        {
          "id": "245",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 11,
              "line": 264
            },
            "start": {
              "column": 18,
              "line": 262
            }
          }
        },
        {
          "id": "251",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 66,
              "line": 282
            },
            "start": {
              "column": 23,
              "line": 282
            }
          }
        },
        {
          "id": "261",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 67,
              "line": 288
            },
            "start": {
              "column": 58,
              "line": 288
            }
          }
        },
        {
          "id": "282",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 82,
              "line": 319
            },
            "start": {
              "column": 18,
              "line": 319
            }
          }
        },
        {
          "id": "286",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 36,
              "line": 337
            },
            "start": {
              "column": 18,
              "line": 337
            }
          }
        },
        {
          "id": "293",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 48,
              "line": 350
            },
            "start": {
              "column": 46,
              "line": 350
            }
          }
        },
        {
          "id": "163",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 25,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 58
            },
            "start": {
              "column": 9,
              "line": 58
            }
          }
        },
        {
          "id": "162",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 25,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 58
            },
            "start": {
              "column": 9,
              "line": 58
            }
          }
        },
        {
          "id": "161",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 25,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 130
            },
            "start": {
              "column": 37,
              "line": 55
            }
          }
        },
        {
          "id": "159",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 51,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 43
            },
            "start": {
              "column": 5,
              "line": 39
            }
          }
        },
        {
          "id": "165",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "35"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 60
            },
            "start": {
              "column": 39,
              "line": 58
            }
          }
        },
        {
          "id": "168",
          "mutatorName": "ConditionalExpression",
          "replacement": "case LoadBalancingStrategy.ROUND_ROBIN:",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 74
            },
            "start": {
              "column": 7,
              "line": 71
            }
          }
        },
        {
          "id": "170",
          "mutatorName": "ConditionalExpression",
          "replacement": "case LoadBalancingStrategy.WEIGHTED:",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 84
            },
            "start": {
              "column": 7,
              "line": 81
            }
          }
        },
        {
          "id": "171",
          "mutatorName": "ConditionalExpression",
          "replacement": "case LoadBalancingStrategy.PRIORITY_BASED:",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 89
            },
            "start": {
              "column": 7,
              "line": 86
            }
          }
        },
        {
          "id": "164",
          "mutatorName": "EqualityOperator",
          "replacement": "availableAgents.length !== 0",
          "statusReason": "Error: No available agents for task assignment\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:104:17)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:71:39)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 25,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 58
            },
            "start": {
              "column": 9,
              "line": 58
            }
          }
        },
        {
          "id": "173",
          "mutatorName": "ConditionalExpression",
          "replacement": "default:",
          "statusReason": "Error: expect(received).rejects.toThrow()\n\nReceived promise resolved instead of rejected\nResolved to value: {\"agentLoad\": 0, \"alternativesConsidered\": [], \"decisionDurationMs\": 0, \"rationale\": undefined, \"selectedAgentId\": undefined, \"strategy\": \"INVALID_STRATEGY\", \"timestamp\": 2025-10-15T08:03:57.045Z}\n    at expect (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/expect/build/index.js:113:15)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:182:19)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "34"
          ],
          "location": {
            "end": {
              "column": 78,
              "line": 97
            },
            "start": {
              "column": 7,
              "line": 96
            }
          }
        },
        {
          "id": "169",
          "mutatorName": "ConditionalExpression",
          "replacement": "case LoadBalancingStrategy.LEAST_LOADED:",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 79
            },
            "start": {
              "column": 7,
              "line": 76
            }
          }
        },
        {
          "id": "172",
          "mutatorName": "ConditionalExpression",
          "replacement": "case LoadBalancingStrategy.RANDOM:",
          "statusReason": "Error: Unknown load balancing strategy: random\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:169:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:159:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "33"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 94
            },
            "start": {
              "column": 7,
              "line": 91
            }
          }
        },
        {
          "id": "175",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 102
            },
            "start": {
              "column": 7,
              "line": 102
            }
          }
        },
        {
          "id": "176",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 102
            },
            "start": {
              "column": 14,
              "line": 102
            }
          }
        },
        {
          "id": "177",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 102
            },
            "start": {
              "column": 14,
              "line": 102
            }
          }
        },
        {
          "id": "178",
          "mutatorName": "EqualityOperator",
          "replacement": "p.agentId !== selectedAgentId",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 102
            },
            "start": {
              "column": 14,
              "line": 102
            }
          }
        },
        {
          "id": "179",
          "mutatorName": "ArithmeticOperator",
          "replacement": "agentProfile.currentTaskCount / agentProfile.maxTaskCapacity / 100",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 105
            },
            "start": {
              "column": 9,
              "line": 105
            }
          }
        },
        {
          "id": "180",
          "mutatorName": "ArithmeticOperator",
          "replacement": "agentProfile.currentTaskCount * agentProfile.maxTaskCapacity",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 105
            },
            "start": {
              "column": 10,
              "line": 105
            }
          }
        },
        {
          "id": "181",
          "mutatorName": "LogicalOperator",
          "replacement": "this.loadDistribution.get(selectedAgentId) && 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 109
            },
            "start": {
              "column": 25,
              "line": 109
            }
          }
        },
        {
          "id": "182",
          "mutatorName": "ArithmeticOperator",
          "replacement": "currentLoad - 1",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 110
            },
            "start": {
              "column": 48,
              "line": 110
            }
          }
        },
        {
          "id": "183",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeTruthy()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:76:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 11,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 120
            },
            "start": {
              "column": 45,
              "line": 112
            }
          }
        },
        {
          "id": "187",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"round_robin\"\nReceived: \"least_loaded\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:99:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 6,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "30",
            "31",
            "32",
            "33",
            "34",
            "37"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 140
            },
            "start": {
              "column": 54,
              "line": 137
            }
          }
        },
        {
          "id": "186",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 127
            },
            "start": {
              "column": 55,
              "line": 122
            }
          }
        },
        {
          "id": "184",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + startTime",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 119
            },
            "start": {
              "column": 27,
              "line": 119
            }
          }
        },
        {
          "id": "189",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 6,
          "coveredBy": [
            "30",
            "31",
            "32",
            "33",
            "34",
            "37"
          ],
          "location": {
            "end": {
              "column": 69,
              "line": 139
            },
            "start": {
              "column": 57,
              "line": 139
            }
          }
        },
        {
          "id": "190",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"least_loaded\"\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:202:24)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "36"
          ],
          "coveredBy": [
            "36",
            "37"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 149
            },
            "start": {
              "column": 40,
              "line": 147
            }
          }
        },
        {
          "id": "192",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: 1\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:242:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "39"
          ],
          "coveredBy": [
            "39"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 166
            },
            "start": {
              "column": 33,
              "line": 163
            }
          }
        },
        {
          "id": "194",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot destructure property 'selectedAgentId' of 'this.selectRoundRobin(...)' as it is undefined.\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:120:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:93:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 187
            },
            "start": {
              "column": 5,
              "line": 175
            }
          }
        },
        {
          "id": "191",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/integration/resources/AdaptiveResourceManager.integration.test.ts:196:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "killedBy": [
            "16"
          ],
          "coveredBy": [
            "16",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 158
            },
            "start": {
              "column": 61,
              "line": 156
            }
          }
        },
        {
          "id": "195",
          "mutatorName": "ArithmeticOperator",
          "replacement": "this.roundRobinIndex * availableAgents.length",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 176
            },
            "start": {
              "column": 28,
              "line": 176
            }
          }
        },
        {
          "id": "196",
          "mutatorName": "UpdateOperator",
          "replacement": "this.roundRobinIndex--",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 178
            },
            "start": {
              "column": 5,
              "line": 178
            }
          }
        },
        {
          "id": "197",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeTruthy()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:98:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 186
            },
            "start": {
              "column": 12,
              "line": 180
            }
          }
        },
        {
          "id": "200",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 184
            },
            "start": {
              "column": 9,
              "line": 184
            }
          }
        },
        {
          "id": "199",
          "mutatorName": "MethodExpression",
          "replacement": "availableAgents",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 185
            },
            "start": {
              "column": 31,
              "line": 183
            }
          }
        },
        {
          "id": "201",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 184
            },
            "start": {
              "column": 17,
              "line": 184
            }
          }
        },
        {
          "id": "202",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 184
            },
            "start": {
              "column": 17,
              "line": 184
            }
          }
        },
        {
          "id": "203",
          "mutatorName": "EqualityOperator",
          "replacement": "id === selectedAgentId",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "30"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 184
            },
            "start": {
              "column": 17,
              "line": 184
            }
          }
        },
        {
          "id": "204",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot destructure property 'selectedAgentId' of '(intermediate value)' as it is undefined.\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:130:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:71:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 222
            },
            "start": {
              "column": 6,
              "line": 198
            }
          }
        },
        {
          "id": "205",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 199
            },
            "start": {
              "column": 9,
              "line": 199
            }
          }
        },
        {
          "id": "206",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 199
            },
            "start": {
              "column": 9,
              "line": 199
            }
          }
        },
        {
          "id": "207",
          "mutatorName": "EqualityOperator",
          "replacement": "agentProfiles.length !== 0",
          "statusReason": "Error: No agent profiles available for selection\n    at LoadBalancer.selectLeastLoaded (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:297:17)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:133:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:71:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 199
            },
            "start": {
              "column": 9,
              "line": 199
            }
          }
        },
        {
          "id": "210",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'agentId')\n    at LoadBalancer.selectLeastLoaded (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:309:45)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:133:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:71:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 7,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 7,
              "line": 209
            },
            "start": {
              "column": 42,
              "line": 204
            }
          }
        },
        {
          "id": "208",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 12,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 201
            },
            "start": {
              "column": 37,
              "line": 199
            }
          }
        },
        {
          "id": "211",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 7,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 209
            },
            "start": {
              "column": 56,
              "line": 204
            }
          }
        },
        {
          "id": "212",
          "mutatorName": "ArithmeticOperator",
          "replacement": "profile.currentTaskCount / profile.maxTaskCapacity * 100 - (profile.cpuUsage.usagePercent + profile.memoryUsage.usagePercent) / 2",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 208
            },
            "start": {
              "column": 9,
              "line": 207
            }
          }
        },
        {
          "id": "213",
          "mutatorName": "ArithmeticOperator",
          "replacement": "profile.currentTaskCount / profile.maxTaskCapacity / 100",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 207
            },
            "start": {
              "column": 9,
              "line": 207
            }
          }
        },
        {
          "id": "214",
          "mutatorName": "ArithmeticOperator",
          "replacement": "profile.currentTaskCount * profile.maxTaskCapacity",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 207
            },
            "start": {
              "column": 10,
              "line": 207
            }
          }
        },
        {
          "id": "215",
          "mutatorName": "ArithmeticOperator",
          "replacement": "(profile.cpuUsage.usagePercent + profile.memoryUsage.usagePercent) * 2",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 208
            },
            "start": {
              "column": 9,
              "line": 208
            }
          }
        },
        {
          "id": "216",
          "mutatorName": "ArithmeticOperator",
          "replacement": "profile.cpuUsage.usagePercent - profile.memoryUsage.usagePercent",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 208
            },
            "start": {
              "column": 10,
              "line": 208
            }
          }
        },
        {
          "id": "217",
          "mutatorName": "MethodExpression",
          "replacement": "agentLoads",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 212
            },
            "start": {
              "column": 5,
              "line": 212
            }
          }
        },
        {
          "id": "218",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 212
            },
            "start": {
              "column": 21,
              "line": 212
            }
          }
        },
        {
          "id": "219",
          "mutatorName": "ArithmeticOperator",
          "replacement": "a.load + b.load",
          "status": "Survived",
          "static": false,
          "testsCompleted": 6,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 212
            },
            "start": {
              "column": 31,
              "line": 212
            }
          }
        },
        {
          "id": "220",
          "mutatorName": "MethodExpression",
          "replacement": "agentLoads",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 215
            },
            "start": {
              "column": 36,
              "line": 215
            }
          }
        },
        {
          "id": "221",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 215
            },
            "start": {
              "column": 63,
              "line": 215
            }
          }
        },
        {
          "id": "222",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeTruthy()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:76:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 7,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 221
            },
            "start": {
              "column": 12,
              "line": 217
            }
          }
        },
        {
          "id": "225",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: No agent profiles available for selection\n    at LoadBalancer.selectWeighted (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:337:17)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:143:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:115:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 233
            },
            "start": {
              "column": 9,
              "line": 233
            }
          }
        },
        {
          "id": "224",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot destructure property 'selectedAgentId' of '(intermediate value)' as it is undefined.\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:140:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:115:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 267
            },
            "start": {
              "column": 6,
              "line": 232
            }
          }
        },
        {
          "id": "226",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 233
            },
            "start": {
              "column": 9,
              "line": 233
            }
          }
        },
        {
          "id": "227",
          "mutatorName": "EqualityOperator",
          "replacement": "agentProfiles.length !== 0",
          "statusReason": "Error: No agent profiles available for selection\n    at LoadBalancer.selectWeighted (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:337:17)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:143:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:115:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 233
            },
            "start": {
              "column": 9,
              "line": 233
            }
          }
        },
        {
          "id": "230",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'agentId')\n    at LoadBalancer.selectWeighted (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:360:46)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:143:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:115:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 250
            },
            "start": {
              "column": 56,
              "line": 238
            }
          }
        },
        {
          "id": "231",
          "mutatorName": "ArithmeticOperator",
          "replacement": "profile.currentTaskCount / profile.maxTaskCapacity / 100",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 240
            },
            "start": {
              "column": 9,
              "line": 240
            }
          }
        },
        {
          "id": "232",
          "mutatorName": "ArithmeticOperator",
          "replacement": "profile.currentTaskCount * profile.maxTaskCapacity",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 240
            },
            "start": {
              "column": 10,
              "line": 240
            }
          }
        },
        {
          "id": "233",
          "mutatorName": "ArithmeticOperator",
          "replacement": "taskLoad * 0.5 + cpuLoad * 0.3 - memoryLoad * 0.2",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 244
            },
            "start": {
              "column": 21,
              "line": 244
            }
          }
        },
        {
          "id": "234",
          "mutatorName": "ArithmeticOperator",
          "replacement": "taskLoad * 0.5 - cpuLoad * 0.3",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 244
            },
            "start": {
              "column": 21,
              "line": 244
            }
          }
        },
        {
          "id": "235",
          "mutatorName": "ArithmeticOperator",
          "replacement": "taskLoad / 0.5",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 244
            },
            "start": {
              "column": 21,
              "line": 244
            }
          }
        },
        {
          "id": "236",
          "mutatorName": "ArithmeticOperator",
          "replacement": "cpuLoad / 0.3",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 244
            },
            "start": {
              "column": 38,
              "line": 244
            }
          }
        },
        {
          "id": "237",
          "mutatorName": "ArithmeticOperator",
          "replacement": "memoryLoad / 0.2",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 244
            },
            "start": {
              "column": 54,
              "line": 244
            }
          }
        },
        {
          "id": "239",
          "mutatorName": "MethodExpression",
          "replacement": "agentScores",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 253
            },
            "start": {
              "column": 5,
              "line": 253
            }
          }
        },
        {
          "id": "238",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'toFixed')\n    at LoadBalancer.selectWeighted (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:364:71)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:143:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:115:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 249
            },
            "start": {
              "column": 14,
              "line": 246
            }
          }
        },
        {
          "id": "240",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 253
            },
            "start": {
              "column": 22,
              "line": 253
            }
          }
        },
        {
          "id": "241",
          "mutatorName": "ArithmeticOperator",
          "replacement": "a.score + b.score",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 253
            },
            "start": {
              "column": 32,
              "line": 253
            }
          }
        },
        {
          "id": "242",
          "mutatorName": "MethodExpression",
          "replacement": "agentScores",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 257
            },
            "start": {
              "column": 36,
              "line": 256
            }
          }
        },
        {
          "id": "243",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 258
            },
            "start": {
              "column": 12,
              "line": 258
            }
          }
        },
        {
          "id": "244",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeTruthy()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:120:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "31"
          ],
          "coveredBy": [
            "31"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 266
            },
            "start": {
              "column": 12,
              "line": 260
            }
          }
        },
        {
          "id": "248",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 281
            },
            "start": {
              "column": 9,
              "line": 281
            }
          }
        },
        {
          "id": "246",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot destructure property 'selectedAgentId' of '(intermediate value)' as it is undefined.\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:150:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:137:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "32"
          ],
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 322
            },
            "start": {
              "column": 6,
              "line": 280
            }
          }
        },
        {
          "id": "247",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: No agent profiles available for selection\n    at LoadBalancer.selectPriorityBased (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:388:17)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:153:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:137:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "32"
          ],
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 281
            },
            "start": {
              "column": 9,
              "line": 281
            }
          }
        },
        {
          "id": "249",
          "mutatorName": "EqualityOperator",
          "replacement": "agentProfiles.length !== 0",
          "statusReason": "Error: No agent profiles available for selection\n    at LoadBalancer.selectPriorityBased (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:388:17)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:153:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:137:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "32"
          ],
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 281
            },
            "start": {
              "column": 9,
              "line": 281
            }
          }
        },
        {
          "id": "252",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 287
            },
            "start": {
              "column": 7,
              "line": 287
            }
          }
        },
        {
          "id": "253",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 287
            },
            "start": {
              "column": 7,
              "line": 287
            }
          }
        },
        {
          "id": "254",
          "mutatorName": "EqualityOperator",
          "replacement": "request.priority > 75",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 287
            },
            "start": {
              "column": 7,
              "line": 287
            }
          }
        },
        {
          "id": "255",
          "mutatorName": "EqualityOperator",
          "replacement": "request.priority < 75",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 287
            },
            "start": {
              "column": 7,
              "line": 287
            }
          }
        },
        {
          "id": "257",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 288
            },
            "start": {
              "column": 32,
              "line": 288
            }
          }
        },
        {
          "id": "256",
          "mutatorName": "MethodExpression",
          "replacement": "agentProfiles",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 288
            },
            "start": {
              "column": 11,
              "line": 288
            }
          }
        },
        {
          "id": "258",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 288
            },
            "start": {
              "column": 39,
              "line": 288
            }
          }
        },
        {
          "id": "259",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 288
            },
            "start": {
              "column": 39,
              "line": 288
            }
          }
        },
        {
          "id": "260",
          "mutatorName": "EqualityOperator",
          "replacement": "p.healthStatus !== \"healthy\"",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 288
            },
            "start": {
              "column": 39,
              "line": 288
            }
          }
        },
        {
          "id": "262",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 291
            },
            "start": {
              "column": 9,
              "line": 291
            }
          }
        },
        {
          "id": "263",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 291
            },
            "start": {
              "column": 9,
              "line": 291
            }
          }
        },
        {
          "id": "264",
          "mutatorName": "EqualityOperator",
          "replacement": "healthyAgents.length !== 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 291
            },
            "start": {
              "column": 9,
              "line": 291
            }
          }
        },
        {
          "id": "267",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeTruthy()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:142:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "32"
          ],
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 303
            },
            "start": {
              "column": 61,
              "line": 297
            }
          }
        },
        {
          "id": "269",
          "mutatorName": "ArithmeticOperator",
          "replacement": "100 + (profile.cpuUsage.usagePercent + profile.memoryUsage.usagePercent) / 2",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 302
            },
            "start": {
              "column": 9,
              "line": 301
            }
          }
        },
        {
          "id": "268",
          "mutatorName": "ArithmeticOperator",
          "replacement": "profile.maxTaskCapacity + profile.currentTaskCount",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 299
            },
            "start": {
              "column": 26,
              "line": 299
            }
          }
        },
        {
          "id": "266",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'agentId')\n    at LoadBalancer.selectPriorityBased (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:413:50)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:153:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:137:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "32"
          ],
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 7,
              "line": 303
            },
            "start": {
              "column": 47,
              "line": 297
            }
          }
        },
        {
          "id": "270",
          "mutatorName": "ArithmeticOperator",
          "replacement": "(profile.cpuUsage.usagePercent + profile.memoryUsage.usagePercent) * 2",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 302
            },
            "start": {
              "column": 9,
              "line": 302
            }
          }
        },
        {
          "id": "271",
          "mutatorName": "ArithmeticOperator",
          "replacement": "profile.cpuUsage.usagePercent - profile.memoryUsage.usagePercent",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 302
            },
            "start": {
              "column": 10,
              "line": 302
            }
          }
        },
        {
          "id": "273",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 309
            },
            "start": {
              "column": 7,
              "line": 307
            }
          }
        },
        {
          "id": "272",
          "mutatorName": "MethodExpression",
          "replacement": "agentCapacities",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 310
            },
            "start": {
              "column": 5,
              "line": 306
            }
          }
        },
        {
          "id": "274",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 309
            },
            "start": {
              "column": 9,
              "line": 308
            }
          }
        },
        {
          "id": "275",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 309
            },
            "start": {
              "column": 9,
              "line": 308
            }
          }
        },
        {
          "id": "276",
          "mutatorName": "LogicalOperator",
          "replacement": "b.availableCapacity - a.availableCapacity && b.resourceAvailability - a.resourceAvailability",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 309
            },
            "start": {
              "column": 9,
              "line": 308
            }
          }
        },
        {
          "id": "277",
          "mutatorName": "ArithmeticOperator",
          "replacement": "b.availableCapacity + a.availableCapacity",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 308
            },
            "start": {
              "column": 9,
              "line": 308
            }
          }
        },
        {
          "id": "279",
          "mutatorName": "MethodExpression",
          "replacement": "agentCapacities",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 314
            },
            "start": {
              "column": 36,
              "line": 313
            }
          }
        },
        {
          "id": "281",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeTruthy()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:142:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "32"
          ],
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 321
            },
            "start": {
              "column": 12,
              "line": 317
            }
          }
        },
        {
          "id": "280",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "32"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 315
            },
            "start": {
              "column": 12,
              "line": 315
            }
          }
        },
        {
          "id": "283",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot destructure property 'selectedAgentId' of 'this.selectRandom(...)' as it is undefined.\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:160:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:159:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "33"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 342
            },
            "start": {
              "column": 5,
              "line": 331
            }
          }
        },
        {
          "id": "284",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Math.random() / availableAgents.length",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "33"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 332
            },
            "start": {
              "column": 36,
              "line": 332
            }
          }
        },
        {
          "id": "285",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeTruthy()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:164:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "33"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 341
            },
            "start": {
              "column": 12,
              "line": 335
            }
          }
        },
        {
          "id": "287",
          "mutatorName": "MethodExpression",
          "replacement": "availableAgents",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "33"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 340
            },
            "start": {
              "column": 31,
              "line": 338
            }
          }
        },
        {
          "id": "288",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "33"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 339
            },
            "start": {
              "column": 9,
              "line": 339
            }
          }
        },
        {
          "id": "289",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "33"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 339
            },
            "start": {
              "column": 17,
              "line": 339
            }
          }
        },
        {
          "id": "291",
          "mutatorName": "EqualityOperator",
          "replacement": "id === selectedAgentId",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "33"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 339
            },
            "start": {
              "column": 17,
              "line": 339
            }
          }
        },
        {
          "id": "290",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "33"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 339
            },
            "start": {
              "column": 17,
              "line": 339
            }
          }
        },
        {
          "id": "292",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 360
            },
            "start": {
              "column": 38,
              "line": 349
            }
          }
        },
        {
          "id": "294",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 357
            },
            "start": {
              "column": 37,
              "line": 352
            }
          }
        },
        {
          "id": "296",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 354
            },
            "start": {
              "column": 11,
              "line": 354
            }
          }
        },
        {
          "id": "295",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "38",
            "39",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 354
            },
            "start": {
              "column": 11,
              "line": 354
            }
          }
        },
        {
          "id": "297",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 12,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 356
            },
            "start": {
              "column": 20,
              "line": 354
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Load Balancer for Adaptive Resource Manager\n *\n * Distributes tasks across agents using configurable strategies.\n * Supports round-robin, least-loaded, weighted, and priority-based balancing.\n *\n * @author @darianrosebrook\n */\n\nimport { Logger } from \"@/observability/Logger\";\nimport {\n  LoadBalancingStrategy,\n  type AgentResourceProfile,\n  type ILoadBalancer,\n  type LoadBalancingDecision,\n  type ResourceAllocationRequest,\n} from \"@/types/resource-types\";\nimport { ResourceMonitor } from \"./ResourceMonitor\";\n\n/**\n * Load Balancer\n *\n * Selects optimal agents for task assignment using:\n * - Multiple balancing strategies\n * - Resource-aware decision making\n * - Load distribution tracking\n * - Fast decision times (<50ms)\n */\nexport class LoadBalancer implements ILoadBalancer {\n  private logger: Logger;\n  private strategy: LoadBalancingStrategy;\n  private resourceMonitor: ResourceMonitor;\n  private roundRobinIndex = 0;\n  private loadDistribution: Map<string, number> = new Map();\n\n  constructor(\n    resourceMonitor: ResourceMonitor,\n    strategy: LoadBalancingStrategy = LoadBalancingStrategy.LEAST_LOADED\n  ) {\n    this.logger = new Logger(\"LoadBalancer\");\n    this.resourceMonitor = resourceMonitor;\n    this.strategy = strategy;\n  }\n\n  /**\n   * Select agent for task assignment\n   *\n   * @param request Resource allocation request\n   * @param availableAgents List of available agent IDs\n   * @returns Load balancing decision\n   */\n  async selectAgent(\n    request: ResourceAllocationRequest,\n    availableAgents: string[]\n  ): Promise<LoadBalancingDecision> {\n    const startTime = Date.now();\n\n    if (availableAgents.length === 0) {\n      throw new Error(\"No available agents for task assignment\");\n    }\n\n    // Get agent resource profiles\n    const agentProfiles = await this.getAgentProfiles(availableAgents);\n\n    // Select agent based on strategy\n    let selectedAgentId: string;\n    let rationale: string;\n    let alternativesConsidered: string[] = [];\n\n    switch (this.strategy) {\n      case LoadBalancingStrategy.ROUND_ROBIN:\n        ({ selectedAgentId, rationale, alternativesConsidered } =\n          this.selectRoundRobin(availableAgents));\n        break;\n\n      case LoadBalancingStrategy.LEAST_LOADED:\n        ({ selectedAgentId, rationale, alternativesConsidered } =\n          await this.selectLeastLoaded(agentProfiles));\n        break;\n\n      case LoadBalancingStrategy.WEIGHTED:\n        ({ selectedAgentId, rationale, alternativesConsidered } =\n          await this.selectWeighted(agentProfiles));\n        break;\n\n      case LoadBalancingStrategy.PRIORITY_BASED:\n        ({ selectedAgentId, rationale, alternativesConsidered } =\n          await this.selectPriorityBased(request, agentProfiles));\n        break;\n\n      case LoadBalancingStrategy.RANDOM:\n        ({ selectedAgentId, rationale, alternativesConsidered } =\n          this.selectRandom(availableAgents));\n        break;\n\n      default:\n        throw new Error(`Unknown load balancing strategy: ${this.strategy}`);\n    }\n\n    // Get agent load\n    const agentProfile = agentProfiles.find(\n      (p) => p.agentId === selectedAgentId\n    );\n    const agentLoad = agentProfile\n      ? (agentProfile.currentTaskCount / agentProfile.maxTaskCapacity) * 100\n      : 0;\n\n    // Update load distribution\n    const currentLoad = this.loadDistribution.get(selectedAgentId) ?? 0;\n    this.loadDistribution.set(selectedAgentId, currentLoad + 1);\n\n    const decision: LoadBalancingDecision = {\n      selectedAgentId,\n      strategy: this.strategy,\n      agentLoad,\n      timestamp: new Date(),\n      rationale,\n      alternativesConsidered,\n      decisionDurationMs: Date.now() - startTime,\n    };\n\n    this.logger.debug(\"Load balancing decision made\", {\n      selectedAgent: selectedAgentId,\n      strategy: this.strategy,\n      load: agentLoad,\n      decisionTimeMs: decision.decisionDurationMs,\n    });\n\n    return decision;\n  }\n\n  /**\n   * Update load balancing strategy\n   *\n   * @param strategy New strategy\n   */\n  setStrategy(strategy: LoadBalancingStrategy): void {\n    this.strategy = strategy;\n    this.logger.info(\"Load balancing strategy updated\", { strategy });\n  }\n\n  /**\n   * Get current strategy\n   *\n   * @returns Current strategy\n   */\n  getStrategy(): LoadBalancingStrategy {\n    return this.strategy;\n  }\n\n  /**\n   * Get load distribution statistics\n   *\n   * @returns Map of agent ID to task count\n   */\n  async getLoadDistribution(): Promise<Map<string, number>> {\n    return new Map(this.loadDistribution);\n  }\n\n  /**\n   * Reset load distribution statistics\n   */\n  resetLoadDistribution(): void {\n    this.loadDistribution.clear();\n    this.logger.info(\"Load distribution statistics reset\");\n  }\n\n  /**\n   * Select agent using round-robin strategy\n   */\n  private selectRoundRobin(availableAgents: string[]): {\n    selectedAgentId: string;\n    rationale: string;\n    alternativesConsidered: string[];\n  } {\n    this.roundRobinIndex = this.roundRobinIndex % availableAgents.length;\n    const selectedAgentId = availableAgents[this.roundRobinIndex];\n    this.roundRobinIndex++;\n\n    return {\n      selectedAgentId,\n      rationale: \"Round-robin selection\",\n      alternativesConsidered: availableAgents.filter(\n        (id) => id !== selectedAgentId\n      ),\n    };\n  }\n\n  /**\n   * Select agent with least load\n   */\n  private async selectLeastLoaded(\n    agentProfiles: AgentResourceProfile[]\n  ): Promise<{\n    selectedAgentId: string;\n    rationale: string;\n    alternativesConsidered: string[];\n  }> {\n    if (agentProfiles.length === 0) {\n      throw new Error(\"No agent profiles available for selection\");\n    }\n\n    // Calculate load score for each agent\n    const agentLoads = agentProfiles.map((profile) => ({\n      agentId: profile.agentId,\n      load:\n        (profile.currentTaskCount / profile.maxTaskCapacity) * 100 +\n        (profile.cpuUsage.usagePercent + profile.memoryUsage.usagePercent) / 2,\n    }));\n\n    // Sort by load (ascending)\n    agentLoads.sort((a, b) => a.load - b.load);\n\n    const selectedAgentId = agentLoads[0].agentId;\n    const alternativesConsidered = agentLoads.slice(1, 4).map((a) => a.agentId);\n\n    return {\n      selectedAgentId,\n      rationale: `Least loaded agent (${agentLoads[0].load.toFixed(1)}% load)`,\n      alternativesConsidered,\n    };\n  }\n\n  /**\n   * Select agent using weighted strategy\n   * Weights: 50% task capacity, 30% CPU, 20% memory\n   */\n  private async selectWeighted(agentProfiles: AgentResourceProfile[]): Promise<{\n    selectedAgentId: string;\n    rationale: string;\n    alternativesConsidered: string[];\n  }> {\n    if (agentProfiles.length === 0) {\n      throw new Error(\"No agent profiles available for selection\");\n    }\n\n    // Calculate weighted score for each agent (lower is better)\n    const agentScores = agentProfiles.map((profile) => {\n      const taskLoad =\n        (profile.currentTaskCount / profile.maxTaskCapacity) * 100;\n      const cpuLoad = profile.cpuUsage.usagePercent;\n      const memoryLoad = profile.memoryUsage.usagePercent;\n\n      const score = taskLoad * 0.5 + cpuLoad * 0.3 + memoryLoad * 0.2;\n\n      return {\n        agentId: profile.agentId,\n        score,\n      };\n    });\n\n    // Sort by score (ascending)\n    agentScores.sort((a, b) => a.score - b.score);\n\n    const selectedAgentId = agentScores[0].agentId;\n    const alternativesConsidered = agentScores\n      .slice(1, 4)\n      .map((a) => a.agentId);\n\n    return {\n      selectedAgentId,\n      rationale: `Weighted selection (score: ${agentScores[0].score.toFixed(\n        1\n      )})`,\n      alternativesConsidered,\n    };\n  }\n\n  /**\n   * Select agent using priority-based strategy\n   * High priority tasks get the best available agents\n   */\n  private async selectPriorityBased(\n    request: ResourceAllocationRequest,\n    agentProfiles: AgentResourceProfile[]\n  ): Promise<{\n    selectedAgentId: string;\n    rationale: string;\n    alternativesConsidered: string[];\n  }> {\n    if (agentProfiles.length === 0) {\n      throw new Error(\"No agent profiles available for selection\");\n    }\n\n    // Filter healthy agents for high priority tasks\n    const healthyAgents =\n      request.priority >= 75\n        ? agentProfiles.filter((p) => p.healthStatus === \"healthy\")\n        : agentProfiles;\n\n    if (healthyAgents.length === 0) {\n      // Fall back to all agents if no healthy ones\n      return this.selectLeastLoaded(agentProfiles);\n    }\n\n    // For high priority, select agent with most available capacity\n    const agentCapacities = healthyAgents.map((profile) => ({\n      agentId: profile.agentId,\n      availableCapacity: profile.maxTaskCapacity - profile.currentTaskCount,\n      resourceAvailability:\n        100 -\n        (profile.cpuUsage.usagePercent + profile.memoryUsage.usagePercent) / 2,\n    }));\n\n    // Sort by available capacity and resource availability\n    agentCapacities.sort(\n      (a, b) =>\n        b.availableCapacity - a.availableCapacity ||\n        b.resourceAvailability - a.resourceAvailability\n    );\n\n    const selectedAgentId = agentCapacities[0].agentId;\n    const alternativesConsidered = agentCapacities\n      .slice(1, 4)\n      .map((a) => a.agentId);\n\n    return {\n      selectedAgentId,\n      rationale: `Priority-based selection for ${request.priority} priority task`,\n      alternativesConsidered,\n    };\n  }\n\n  /**\n   * Select agent randomly\n   */\n  private selectRandom(availableAgents: string[]): {\n    selectedAgentId: string;\n    rationale: string;\n    alternativesConsidered: string[];\n  } {\n    const randomIndex = Math.floor(Math.random() * availableAgents.length);\n    const selectedAgentId = availableAgents[randomIndex];\n\n    return {\n      selectedAgentId,\n      rationale: \"Random selection\",\n      alternativesConsidered: availableAgents.filter(\n        (id) => id !== selectedAgentId\n      ),\n    };\n  }\n\n  /**\n   * Get agent profiles for available agents\n   */\n  private async getAgentProfiles(\n    agentIds: string[]\n  ): Promise<AgentResourceProfile[]> {\n    const profiles: AgentResourceProfile[] = [];\n\n    for (const agentId of agentIds) {\n      const profile = await this.resourceMonitor.getAgentResources(agentId);\n      if (profile) {\n        profiles.push(profile);\n      }\n    }\n\n    return profiles;\n  }\n}\n"
    },
    "src/resources/ResourceAllocator.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "358",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 226
            },
            "start": {
              "column": 51,
              "line": 223
            }
          }
        },
        {
          "id": "359",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 41,
              "line": 224
            },
            "start": {
              "column": 28,
              "line": 224
            }
          }
        },
        {
          "id": "365",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 35,
              "line": 245
            },
            "start": {
              "column": 14,
              "line": 245
            }
          }
        },
        {
          "id": "366",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 35,
              "line": 245
            },
            "start": {
              "column": 14,
              "line": 245
            }
          }
        },
        {
          "id": "367",
          "mutatorName": "EqualityOperator",
          "replacement": "a.agentId !== agentId",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 35,
              "line": 245
            },
            "start": {
              "column": 14,
              "line": 245
            }
          }
        },
        {
          "id": "368",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 260
            },
            "start": {
              "column": 22,
              "line": 252
            }
          }
        },
        {
          "id": "369",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 258
            },
            "start": {
              "column": 28,
              "line": 253
            }
          }
        },
        {
          "id": "377",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 277
            },
            "start": {
              "column": 57,
              "line": 273
            }
          }
        },
        {
          "id": "378",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 18,
              "line": 276
            },
            "start": {
              "column": 14,
              "line": 276
            }
          }
        },
        {
          "id": "300",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 49,
              "line": 58
            },
            "start": {
              "column": 30,
              "line": 58
            }
          }
        },
        {
          "id": "310",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 32,
              "line": 87
            },
            "start": {
              "column": 11,
              "line": 87
            }
          }
        },
        {
          "id": "317",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 67,
              "line": 95
            },
            "start": {
              "column": 50,
              "line": 95
            }
          }
        },
        {
          "id": "322",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 32,
              "line": 103
            },
            "start": {
              "column": 11,
              "line": 103
            }
          }
        },
        {
          "id": "332",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 57,
              "line": 139
            },
            "start": {
              "column": 25,
              "line": 139
            }
          }
        },
        {
          "id": "338",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 53,
              "line": 156
            },
            "start": {
              "column": 25,
              "line": 156
            }
          }
        },
        {
          "id": "340",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 65,
              "line": 163
            },
            "start": {
              "column": 50,
              "line": 163
            }
          }
        },
        {
          "id": "346",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 65,
              "line": 178
            },
            "start": {
              "column": 24,
              "line": 178
            }
          }
        },
        {
          "id": "348",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 43,
              "line": 186
            },
            "start": {
              "column": 23,
              "line": 186
            }
          }
        },
        {
          "id": "360",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 43,
              "line": 225
            },
            "start": {
              "column": 22,
              "line": 225
            }
          }
        },
        {
          "id": "370",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 51,
              "line": 259
            },
            "start": {
              "column": 22,
              "line": 259
            }
          }
        },
        {
          "id": "384",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 45,
              "line": 292
            },
            "start": {
              "column": 12,
              "line": 292
            }
          }
        },
        {
          "id": "385",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 22,
              "line": 292
            },
            "start": {
              "column": 13,
              "line": 292
            }
          }
        },
        {
          "id": "386",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 33,
              "line": 292
            },
            "start": {
              "column": 24,
              "line": 292
            }
          }
        },
        {
          "id": "387",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 44,
              "line": 292
            },
            "start": {
              "column": 35,
              "line": 292
            }
          }
        },
        {
          "id": "301",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 40,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 67
            },
            "start": {
              "column": 28,
              "line": 60
            }
          }
        },
        {
          "id": "298",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: NaN\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:201:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 40,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 52
            },
            "start": {
              "column": 29,
              "line": 47
            }
          }
        },
        {
          "id": "299",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'error')\n    at ResourceAllocator.allocate (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/ResourceAllocator.ts:210:23)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:75:38)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 40,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 68
            },
            "start": {
              "column": 5,
              "line": 57
            }
          }
        },
        {
          "id": "302",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 40,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 65
            },
            "start": {
              "column": 26,
              "line": 65
            }
          }
        },
        {
          "id": "303",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'success')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 21,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 167
            },
            "start": {
              "column": 40,
              "line": 78
            }
          }
        },
        {
          "id": "304",
          "mutatorName": "UpdateOperator",
          "replacement": "this.allocationStats.totalRequests--",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: -1\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:201:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 21,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 80
            },
            "start": {
              "column": 5,
              "line": 80
            }
          }
        },
        {
          "id": "305",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'success')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 21,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 155
            },
            "start": {
              "column": 9,
              "line": 82
            }
          }
        },
        {
          "id": "306",
          "mutatorName": "BooleanLiteral",
          "replacement": "this.checkRateLimit()",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 21,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 84
            },
            "start": {
              "column": 11,
              "line": 84
            }
          }
        },
        {
          "id": "309",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:98:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "19",
            "26",
            "28"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 90
            },
            "start": {
              "column": 35,
              "line": 84
            }
          }
        },
        {
          "id": "308",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:98:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 21,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 84
            },
            "start": {
              "column": 11,
              "line": 84
            }
          }
        },
        {
          "id": "307",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 21,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 84
            },
            "start": {
              "column": 11,
              "line": 84
            }
          }
        },
        {
          "id": "311",
          "mutatorName": "ArithmeticOperator",
          "replacement": "request.requestedAt.getTime() - request.timeoutMs",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 93
            },
            "start": {
              "column": 27,
              "line": 93
            }
          }
        },
        {
          "id": "312",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 94
            },
            "start": {
              "column": 11,
              "line": 94
            }
          }
        },
        {
          "id": "316",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:115:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "20"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 96
            },
            "start": {
              "column": 37,
              "line": 94
            }
          }
        },
        {
          "id": "313",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:115:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 94
            },
            "start": {
              "column": 11,
              "line": 94
            }
          }
        },
        {
          "id": "314",
          "mutatorName": "EqualityOperator",
          "replacement": "Date.now() >= timeoutTime",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 94
            },
            "start": {
              "column": 11,
              "line": 94
            }
          }
        },
        {
          "id": "315",
          "mutatorName": "EqualityOperator",
          "replacement": "Date.now() <= timeoutTime",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 94
            },
            "start": {
              "column": 11,
              "line": 94
            }
          }
        },
        {
          "id": "321",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"No available agents\"\nReceived: \"No available agents for task assignment\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:136:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "21"
          ],
          "coveredBy": [
            "21"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 106
            },
            "start": {
              "column": 41,
              "line": 100
            }
          }
        },
        {
          "id": "318",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "21",
            "22",
            "23",
            "25",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 100
            },
            "start": {
              "column": 11,
              "line": 100
            }
          }
        },
        {
          "id": "323",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 119
            },
            "start": {
              "column": 34,
              "line": 115
            }
          }
        },
        {
          "id": "320",
          "mutatorName": "EqualityOperator",
          "replacement": "availableAgents.length !== 0",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "21",
            "22",
            "23",
            "25",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 100
            },
            "start": {
              "column": 11,
              "line": 100
            }
          }
        },
        {
          "id": "319",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"No available agents\"\nReceived: \"No available agents for task assignment\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:136:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "killedBy": [
            "21"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "21",
            "22",
            "23",
            "25",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 100
            },
            "start": {
              "column": 11,
              "line": 100
            }
          }
        },
        {
          "id": "324",
          "mutatorName": "LogicalOperator",
          "replacement": "request.requiredResources.cpuPercent && 10",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 116
            },
            "start": {
              "column": 21,
              "line": 116
            }
          }
        },
        {
          "id": "325",
          "mutatorName": "LogicalOperator",
          "replacement": "request.requiredResources.memoryMb && 128",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 117
            },
            "start": {
              "column": 19,
              "line": 117
            }
          }
        },
        {
          "id": "327",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'getTime')\n    at ResourceAllocator.release (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/ResourceAllocator.ts:246:154)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:177:23)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 127
            },
            "start": {
              "column": 50,
              "line": 122
            }
          }
        },
        {
          "id": "326",
          "mutatorName": "LogicalOperator",
          "replacement": "request.requiredResources.networkMbps && 10",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 118
            },
            "start": {
              "column": 22,
              "line": 118
            }
          }
        },
        {
          "id": "328",
          "mutatorName": "UpdateOperator",
          "replacement": "this.allocationStats.successfulAllocations--",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: -1\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:202:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 132
            },
            "start": {
              "column": 7,
              "line": 132
            }
          }
        },
        {
          "id": "329",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + startTime",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 133
            },
            "start": {
              "column": 30,
              "line": 133
            }
          }
        },
        {
          "id": "330",
          "mutatorName": "AssignmentOperator",
          "replacement": "this.allocationStats.totalAllocationTimeMs -= allocationTime",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 134
            },
            "start": {
              "column": 7,
              "line": 134
            }
          }
        },
        {
          "id": "331",
          "mutatorName": "UpdateOperator",
          "replacement": "this.rateLimitConfig.currentCount--",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:273:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "28"
          ],
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 137
            },
            "start": {
              "column": 7,
              "line": 137
            }
          }
        },
        {
          "id": "333",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 145
            },
            "start": {
              "column": 59,
              "line": 139
            }
          }
        },
        {
          "id": "334",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 154
            },
            "start": {
              "column": 14,
              "line": 147
            }
          }
        },
        {
          "id": "335",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 149
            },
            "start": {
              "column": 18,
              "line": 149
            }
          }
        },
        {
          "id": "336",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + request.requestedAt.getTime()",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "18",
            "23",
            "25",
            "28"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 153
            },
            "start": {
              "column": 21,
              "line": 153
            }
          }
        },
        {
          "id": "337",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'success')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:155:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "22",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 166
            },
            "start": {
              "column": 21,
              "line": 155
            }
          }
        },
        {
          "id": "339",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 13,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "22",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 159
            },
            "start": {
              "column": 55,
              "line": 156
            }
          }
        },
        {
          "id": "341",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 12,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "11",
            "12",
            "15",
            "17",
            "23",
            "24",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 191
            },
            "start": {
              "column": 51,
              "line": 174
            }
          }
        },
        {
          "id": "342",
          "mutatorName": "BooleanLiteral",
          "replacement": "allocation",
          "statusReason": "Error: expect(received).resolves.not.toThrow()\n\nReceived promise rejected instead of resolved\nRejected to value: [TypeError: Cannot read properties of undefined (reading 'agentId')]\n    at expect (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/expect/build/index.js:113:15)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:183:19)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 12,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "11",
            "12",
            "15",
            "17",
            "23",
            "24",
            "54"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 177
            },
            "start": {
              "column": 9,
              "line": 177
            }
          }
        },
        {
          "id": "343",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 12,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "11",
            "12",
            "15",
            "17",
            "23",
            "24",
            "54"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 177
            },
            "start": {
              "column": 9,
              "line": 177
            }
          }
        },
        {
          "id": "344",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).resolves.not.toThrow()\n\nReceived promise rejected instead of resolved\nRejected to value: [TypeError: Cannot read properties of undefined (reading 'agentId')]\n    at expect (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/expect/build/index.js:113:15)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:183:19)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 12,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "11",
            "12",
            "15",
            "17",
            "23",
            "24",
            "54"
          ],
          "location": {
            "end": {
              "column": 20,
              "line": 177
            },
            "start": {
              "column": 9,
              "line": 177
            }
          }
        },
        {
          "id": "349",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "23"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 190
            },
            "start": {
              "column": 45,
              "line": 186
            }
          }
        },
        {
          "id": "347",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 11,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "11",
            "12",
            "15",
            "17",
            "24",
            "54"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 180
            },
            "start": {
              "column": 67,
              "line": 178
            }
          }
        },
        {
          "id": "345",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).resolves.not.toThrow()\n\nReceived promise rejected instead of resolved\nRejected to value: [TypeError: Cannot read properties of undefined (reading 'agentId')]\n    at expect (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/expect/build/index.js:113:15)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:183:19)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 11,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "11",
            "12",
            "15",
            "17",
            "24",
            "54"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 182
            },
            "start": {
              "column": 22,
              "line": 177
            }
          }
        },
        {
          "id": "350",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + allocation.allocatedAt.getTime()",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "23"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 189
            },
            "start": {
              "column": 19,
              "line": 189
            }
          }
        },
        {
          "id": "351",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'totalRequests')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:201:20)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "57"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 216
            },
            "start": {
              "column": 5,
              "line": 203
            }
          }
        },
        {
          "id": "352",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "25",
            "26",
            "27",
            "57"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 205
            },
            "start": {
              "column": 7,
              "line": 205
            }
          }
        },
        {
          "id": "353",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "25",
            "26",
            "27",
            "57"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 205
            },
            "start": {
              "column": 7,
              "line": 205
            }
          }
        },
        {
          "id": "354",
          "mutatorName": "EqualityOperator",
          "replacement": "this.allocationStats.successfulAllocations >= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "25",
            "26",
            "27",
            "57"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 205
            },
            "start": {
              "column": 7,
              "line": 205
            }
          }
        },
        {
          "id": "356",
          "mutatorName": "ArithmeticOperator",
          "replacement": "this.allocationStats.totalAllocationTimeMs * this.allocationStats.successfulAllocations",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "25"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 207
            },
            "start": {
              "column": 11,
              "line": 206
            }
          }
        },
        {
          "id": "361",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "51",
            "52"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 235
            },
            "start": {
              "column": 38,
              "line": 233
            }
          }
        },
        {
          "id": "355",
          "mutatorName": "EqualityOperator",
          "replacement": "this.allocationStats.successfulAllocations <= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "coveredBy": [
            "25",
            "26",
            "27",
            "57"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 205
            },
            "start": {
              "column": 7,
              "line": 205
            }
          }
        },
        {
          "id": "357",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:201:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "57"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 215
            },
            "start": {
              "column": 12,
              "line": 210
            }
          }
        },
        {
          "id": "362",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nMatcher error: received value must be a number or bigint\n\nReceived has value: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/integration/resources/AdaptiveResourceManager.integration.test.ts:161:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "killedBy": [
            "14"
          ],
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 247
            },
            "start": {
              "column": 52,
              "line": 243
            }
          }
        },
        {
          "id": "364",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 5,
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 245
            },
            "start": {
              "column": 7,
              "line": 245
            }
          }
        },
        {
          "id": "363",
          "mutatorName": "MethodExpression",
          "replacement": "Array.from(this.activeAllocations.values())",
          "status": "Survived",
          "static": false,
          "testsCompleted": 5,
          "coveredBy": [
            "7",
            "8",
            "14",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 246
            },
            "start": {
              "column": 12,
              "line": 244
            }
          }
        },
        {
          "id": "371",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 281
            },
            "start": {
              "column": 37,
              "line": 267
            }
          }
        },
        {
          "id": "372",
          "mutatorName": "ArithmeticOperator",
          "replacement": "now.getTime() + this.rateLimitConfig.windowStart.getTime()",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: 1\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:226:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 270
            },
            "start": {
              "column": 7,
              "line": 270
            }
          }
        },
        {
          "id": "373",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: 1\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:226:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 273
            },
            "start": {
              "column": 9,
              "line": 273
            }
          }
        },
        {
          "id": "374",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 20,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 273
            },
            "start": {
              "column": 9,
              "line": 273
            }
          }
        },
        {
          "id": "375",
          "mutatorName": "EqualityOperator",
          "replacement": "windowElapsed > this.rateLimitConfig.windowMs",
          "status": "Survived",
          "static": false,
          "testsCompleted": 20,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 273
            },
            "start": {
              "column": 9,
              "line": 273
            }
          }
        },
        {
          "id": "376",
          "mutatorName": "EqualityOperator",
          "replacement": "windowElapsed < this.rateLimitConfig.windowMs",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: 1\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:226:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 273
            },
            "start": {
              "column": 9,
              "line": 273
            }
          }
        },
        {
          "id": "379",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: 1\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:226:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 280
            },
            "start": {
              "column": 12,
              "line": 280
            }
          }
        },
        {
          "id": "380",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 280
            },
            "start": {
              "column": 12,
              "line": 280
            }
          }
        },
        {
          "id": "381",
          "mutatorName": "EqualityOperator",
          "replacement": "this.rateLimitConfig.currentCount <= this.rateLimitConfig.maxRequests",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: 1\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:226:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 280
            },
            "start": {
              "column": 12,
              "line": 280
            }
          }
        },
        {
          "id": "382",
          "mutatorName": "EqualityOperator",
          "replacement": "this.rateLimitConfig.currentCount >= this.rateLimitConfig.maxRequests",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "20",
            "21",
            "22",
            "23",
            "25",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 280
            },
            "start": {
              "column": 12,
              "line": 280
            }
          }
        },
        {
          "id": "383",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 17,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "22",
            "23",
            "25",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 293
            },
            "start": {
              "column": 57,
              "line": 289
            }
          }
        },
        {
          "id": "388",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'success')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:98:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "19",
            "20",
            "21",
            "22",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 310
            },
            "start": {
              "column": 31,
              "line": 302
            }
          }
        },
        {
          "id": "389",
          "mutatorName": "UpdateOperator",
          "replacement": "this.allocationStats.failedAllocations--",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: -1\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:227:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "killedBy": [
            "26"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "19",
            "20",
            "21",
            "22",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 303
            },
            "start": {
              "column": 5,
              "line": 303
            }
          }
        },
        {
          "id": "390",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:98:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "19",
            "20",
            "21",
            "22",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 309
            },
            "start": {
              "column": 12,
              "line": 304
            }
          }
        },
        {
          "id": "391",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:98:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "19",
            "20",
            "21",
            "22",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 306
            },
            "start": {
              "column": 16,
              "line": 306
            }
          }
        },
        {
          "id": "392",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + startTime",
          "status": "Survived",
          "static": false,
          "testsCompleted": 18,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "19",
            "20",
            "21",
            "22",
            "26",
            "28",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 308
            },
            "start": {
              "column": 19,
              "line": 308
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Resource Allocator for Adaptive Resource Manager\n *\n * Manages resource allocation with priority queuing and rate limiting.\n * Ensures fair distribution and prevents resource exhaustion.\n *\n * @author @darianrosebrook\n */\n\nimport { Logger } from \"@/observability/Logger\";\nimport {\n  type IResourceAllocator,\n  type RateLimitConfig,\n  type ResourceAllocationRequest,\n  type ResourceAllocationResult,\n} from \"@/types/resource-types\";\nimport { LoadBalancer } from \"./LoadBalancer\";\n\n/**\n * Allocation record for tracking\n */\ninterface AllocationRecord {\n  requestId: string;\n  agentId: string;\n  allocatedAt: Date;\n  resources: {\n    cpuPercent: number;\n    memoryMb: number;\n    networkMbps: number;\n  };\n}\n\n/**\n * Resource Allocator\n *\n * Manages resource allocation:\n * - Priority-based allocation\n * - Rate limiting\n * - Resource tracking\n * - Fast allocation decisions\n */\nexport class ResourceAllocator implements IResourceAllocator {\n  private logger: Logger;\n  private loadBalancer: LoadBalancer;\n  private activeAllocations: Map<string, AllocationRecord> = new Map();\n  private rateLimitConfig: RateLimitConfig;\n  private allocationStats = {\n    totalRequests: 0,\n    successfulAllocations: 0,\n    failedAllocations: 0,\n    totalAllocationTimeMs: 0,\n  };\n\n  constructor(\n    loadBalancer: LoadBalancer,\n    rateLimitConfig?: Partial<RateLimitConfig>\n  ) {\n    this.logger = new Logger(\"ResourceAllocator\");\n    this.loadBalancer = loadBalancer;\n    this.rateLimitConfig = {\n      maxRequests: 1000,\n      windowMs: 60000, // 1 minute\n      currentCount: 0,\n      windowStart: new Date(),\n      dynamicAdjustment: true,\n      ...rateLimitConfig,\n    };\n  }\n\n  /**\n   * Allocate resources for a task\n   *\n   * @param request Resource allocation request\n   * @returns Allocation result\n   */\n  async allocate(\n    request: ResourceAllocationRequest\n  ): Promise<ResourceAllocationResult> {\n    const startTime = Date.now();\n    this.allocationStats.totalRequests++;\n\n    try {\n      // Check rate limit\n      if (!this.checkRateLimit()) {\n        return this.createFailureResult(\n          request,\n          \"Rate limit exceeded\",\n          startTime\n        );\n      }\n\n      // Check timeout\n      const timeoutTime = request.requestedAt.getTime() + request.timeoutMs;\n      if (Date.now() > timeoutTime) {\n        return this.createFailureResult(request, \"Request timeout\", startTime);\n      }\n\n      // Get available agents\n      const availableAgents = await this.getAvailableAgents();\n      if (availableAgents.length === 0) {\n        return this.createFailureResult(\n          request,\n          \"No available agents\",\n          startTime\n        );\n      }\n\n      // Select agent using load balancer\n      const decision = await this.loadBalancer.selectAgent(\n        request,\n        availableAgents\n      );\n\n      // Allocate resources\n      const allocatedResources = {\n        cpuPercent: request.requiredResources.cpuPercent ?? 10,\n        memoryMb: request.requiredResources.memoryMb ?? 128,\n        networkMbps: request.requiredResources.networkMbps ?? 10,\n      };\n\n      // Record allocation\n      const allocationRecord: AllocationRecord = {\n        requestId: request.requestId,\n        agentId: decision.selectedAgentId,\n        allocatedAt: new Date(),\n        resources: allocatedResources,\n      };\n\n      this.activeAllocations.set(request.requestId, allocationRecord);\n\n      // Update stats\n      this.allocationStats.successfulAllocations++;\n      const allocationTime = Date.now() - startTime;\n      this.allocationStats.totalAllocationTimeMs += allocationTime;\n\n      // Increment rate limit counter\n      this.rateLimitConfig.currentCount++;\n\n      this.logger.debug(\"Resource allocation successful\", {\n        requestId: request.requestId,\n        taskId: request.taskId,\n        agentId: decision.selectedAgentId,\n        priority: request.priority,\n        allocationTimeMs: allocationTime,\n      });\n\n      return {\n        requestId: request.requestId,\n        success: true,\n        assignedAgentId: decision.selectedAgentId,\n        allocatedResources,\n        allocatedAt: new Date(),\n        waitTimeMs: Date.now() - request.requestedAt.getTime(),\n      };\n    } catch (error) {\n      this.logger.error(\"Resource allocation failed\", {\n        requestId: request.requestId,\n        error,\n      });\n\n      return this.createFailureResult(\n        request,\n        error instanceof Error ? error.message : \"Unknown error\",\n        startTime\n      );\n    }\n  }\n\n  /**\n   * Release allocated resources\n   *\n   * @param requestId Request identifier\n   */\n  async release(requestId: string): Promise<void> {\n    const allocation = this.activeAllocations.get(requestId);\n\n    if (!allocation) {\n      this.logger.warn(\"Attempted to release unknown allocation\", {\n        requestId,\n      });\n      return;\n    }\n\n    this.activeAllocations.delete(requestId);\n\n    this.logger.debug(\"Resources released\", {\n      requestId,\n      agentId: allocation.agentId,\n      durationMs: Date.now() - allocation.allocatedAt.getTime(),\n    });\n  }\n\n  /**\n   * Get allocation statistics\n   *\n   * @returns Allocation statistics\n   */\n  getAllocationStats(): {\n    totalRequests: number;\n    successfulAllocations: number;\n    failedAllocations: number;\n    avgAllocationTimeMs: number;\n  } {\n    const avgAllocationTimeMs =\n      this.allocationStats.successfulAllocations > 0\n        ? this.allocationStats.totalAllocationTimeMs /\n          this.allocationStats.successfulAllocations\n        : 0;\n\n    return {\n      totalRequests: this.allocationStats.totalRequests,\n      successfulAllocations: this.allocationStats.successfulAllocations,\n      failedAllocations: this.allocationStats.failedAllocations,\n      avgAllocationTimeMs,\n    };\n  }\n\n  /**\n   * Update rate limits\n   *\n   * @param config New rate limit configuration\n   */\n  updateRateLimits(config: RateLimitConfig): void {\n    this.rateLimitConfig = { ...config };\n    this.logger.info(\"Rate limits updated\", config);\n  }\n\n  /**\n   * Get active allocations\n   *\n   * @returns Active allocation count\n   */\n  getActiveAllocationCount(): number {\n    return this.activeAllocations.size;\n  }\n\n  /**\n   * Get active allocations for an agent\n   *\n   * @param agentId Agent identifier\n   * @returns Allocation count for agent\n   */\n  getAgentAllocationCount(agentId: string): number {\n    return Array.from(this.activeAllocations.values()).filter(\n      (a) => a.agentId === agentId\n    ).length;\n  }\n\n  /**\n   * Reset statistics\n   */\n  resetStats(): void {\n    this.allocationStats = {\n      totalRequests: 0,\n      successfulAllocations: 0,\n      failedAllocations: 0,\n      totalAllocationTimeMs: 0,\n    };\n    this.logger.info(\"Allocation statistics reset\");\n  }\n\n  /**\n   * Check rate limit\n   *\n   * @returns True if within rate limit\n   */\n  private checkRateLimit(): boolean {\n    const now = new Date();\n    const windowElapsed =\n      now.getTime() - this.rateLimitConfig.windowStart.getTime();\n\n    // Reset window if expired\n    if (windowElapsed >= this.rateLimitConfig.windowMs) {\n      this.rateLimitConfig.currentCount = 0;\n      this.rateLimitConfig.windowStart = now;\n      return true;\n    }\n\n    // Check if within limit\n    return this.rateLimitConfig.currentCount < this.rateLimitConfig.maxRequests;\n  }\n\n  /**\n   * Get available agents\n   * In a real implementation, this would query the agent registry\n   *\n   * @returns List of available agent IDs\n   */\n  private async getAvailableAgents(): Promise<string[]> {\n    // Placeholder: return mock agents\n    // In real implementation, query agent registry for healthy agents\n    return [\"agent-1\", \"agent-2\", \"agent-3\"];\n  }\n\n  /**\n   * Create failure result\n   */\n  private createFailureResult(\n    request: ResourceAllocationRequest,\n    reason: string,\n    startTime: number\n  ): ResourceAllocationResult {\n    this.allocationStats.failedAllocations++;\n    return {\n      requestId: request.requestId,\n      success: false,\n      failureReason: reason,\n      waitTimeMs: Date.now() - startTime,\n    };\n  }\n}\n"
    },
    "src/resources/ResourceMonitor.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "404",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 90
            },
            "start": {
              "column": 25,
              "line": 87
            }
          }
        },
        {
          "id": "409",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 98
            },
            "start": {
              "column": 31,
              "line": 95
            }
          }
        },
        {
          "id": "413",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 104
            },
            "start": {
              "column": 54,
              "line": 102
            }
          }
        },
        {
          "id": "436",
          "mutatorName": "ConditionalExpression",
          "replacement": "case ResourceType.NETWORK:",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 15,
              "line": 176
            },
            "start": {
              "column": 7,
              "line": 174
            }
          }
        },
        {
          "id": "474",
          "mutatorName": "ArithmeticOperator",
          "replacement": "completionTimes.reduce((sum, t) => sum + t, 0) * completionTimes.length",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 33,
              "line": 238
            },
            "start": {
              "column": 11,
              "line": 237
            }
          }
        },
        {
          "id": "475",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 53,
              "line": 237
            },
            "start": {
              "column": 34,
              "line": 237
            }
          }
        },
        {
          "id": "476",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - t",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 53,
              "line": 237
            },
            "start": {
              "column": 46,
              "line": 237
            }
          }
        },
        {
          "id": "482",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 285
            },
            "start": {
              "column": 20,
              "line": 279
            }
          }
        },
        {
          "id": "483",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 16,
              "line": 281
            },
            "start": {
              "column": 9,
              "line": 281
            }
          }
        },
        {
          "id": "484",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 16,
              "line": 281
            },
            "start": {
              "column": 9,
              "line": 281
            }
          }
        },
        {
          "id": "485",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 284
            },
            "start": {
              "column": 18,
              "line": 281
            }
          }
        },
        {
          "id": "489",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 302
            },
            "start": {
              "column": 38,
              "line": 300
            }
          }
        },
        {
          "id": "490",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 30,
              "line": 301
            },
            "start": {
              "column": 12,
              "line": 301
            }
          }
        },
        {
          "id": "491",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 310
            },
            "start": {
              "column": 62,
              "line": 307
            }
          }
        },
        {
          "id": "492",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 48,
              "line": 308
            },
            "start": {
              "column": 19,
              "line": 308
            }
          }
        },
        {
          "id": "527",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 387
            },
            "start": {
              "column": 52,
              "line": 383
            }
          }
        },
        {
          "id": "528",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 386
            },
            "start": {
              "column": 56,
              "line": 384
            }
          }
        },
        {
          "id": "399",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 47,
              "line": 79
            },
            "start": {
              "column": 30,
              "line": 79
            }
          }
        },
        {
          "id": "405",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 58,
              "line": 88
            },
            "start": {
              "column": 24,
              "line": 88
            }
          }
        },
        {
          "id": "414",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 48,
              "line": 107
            },
            "start": {
              "column": 22,
              "line": 107
            }
          }
        },
        {
          "id": "425",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 48,
              "line": 127
            },
            "start": {
              "column": 22,
              "line": 127
            }
          }
        },
        {
          "id": "440",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 48,
              "line": 186
            },
            "start": {
              "column": 23,
              "line": 186
            }
          }
        },
        {
          "id": "459",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 44,
              "line": 209
            },
            "start": {
              "column": 33,
              "line": 209
            }
          }
        },
        {
          "id": "487",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 53,
              "line": 294
            },
            "start": {
              "column": 22,
              "line": 294
            }
          }
        },
        {
          "id": "493",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 45,
              "line": 309
            },
            "start": {
              "column": 22,
              "line": 309
            }
          }
        },
        {
          "id": "497",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 18,
              "line": 323
            },
            "start": {
              "column": 15,
              "line": 323
            }
          }
        },
        {
          "id": "499",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 19,
              "line": 332
            },
            "start": {
              "column": 15,
              "line": 332
            }
          }
        },
        {
          "id": "501",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 21,
              "line": 341
            },
            "start": {
              "column": 15,
              "line": 341
            }
          }
        },
        {
          "id": "502",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 30,
              "line": 347
            },
            "start": {
              "column": 21,
              "line": 347
            }
          }
        },
        {
          "id": "514",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 25,
              "line": 366
            },
            "start": {
              "column": 14,
              "line": 366
            }
          }
        },
        {
          "id": "525",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 24,
              "line": 374
            },
            "start": {
              "column": 14,
              "line": 374
            }
          }
        },
        {
          "id": "526",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 21,
              "line": 377
            },
            "start": {
              "column": 12,
              "line": 377
            }
          }
        },
        {
          "id": "397",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 62,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 75
            },
            "start": {
              "column": 23,
              "line": 75
            }
          }
        },
        {
          "id": "401",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 28,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 111
            },
            "start": {
              "column": 32,
              "line": 86
            }
          }
        },
        {
          "id": "398",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'defaultMaxTaskCapacity')\n    at ResourceMonitor.createInitialProfile (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/ResourceMonitor.ts:477:38)\n    at ResourceMonitor.recordUsage (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/ResourceMonitor.ts:261:26)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceAllocator.test.ts:52:19)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 62,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 81
            },
            "start": {
              "column": 60,
              "line": 78
            }
          }
        },
        {
          "id": "400",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"degraded\"\nReceived: \"healthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:115:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 62,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 80
            },
            "start": {
              "column": 19,
              "line": 80
            }
          }
        },
        {
          "id": "402",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 28,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 87
            },
            "start": {
              "column": 9,
              "line": 87
            }
          }
        },
        {
          "id": "403",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 28,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 87
            },
            "start": {
              "column": 9,
              "line": 87
            }
          }
        },
        {
          "id": "406",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 28,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 92
            },
            "start": {
              "column": 22,
              "line": 92
            }
          }
        },
        {
          "id": "407",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 28,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 95
            },
            "start": {
              "column": 9,
              "line": 95
            }
          }
        },
        {
          "id": "408",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 28,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 95
            },
            "start": {
              "column": 9,
              "line": 95
            }
          }
        },
        {
          "id": "410",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 28,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 101
            },
            "start": {
              "column": 9,
              "line": 101
            }
          }
        },
        {
          "id": "411",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 28,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 101
            },
            "start": {
              "column": 9,
              "line": 101
            }
          }
        },
        {
          "id": "412",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 28,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 105
            },
            "start": {
              "column": 43,
              "line": 101
            }
          }
        },
        {
          "id": "415",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 28,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 110
            },
            "start": {
              "column": 50,
              "line": 107
            }
          }
        },
        {
          "id": "416",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 38,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 128
            },
            "start": {
              "column": 31,
              "line": 116
            }
          }
        },
        {
          "id": "418",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 38,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 117
            },
            "start": {
              "column": 9,
              "line": 117
            }
          }
        },
        {
          "id": "417",
          "mutatorName": "BooleanLiteral",
          "replacement": "this.isRunning",
          "status": "Survived",
          "static": false,
          "testsCompleted": 38,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 117
            },
            "start": {
              "column": 9,
              "line": 117
            }
          }
        },
        {
          "id": "419",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 38,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 117
            },
            "start": {
              "column": 9,
              "line": 117
            }
          }
        },
        {
          "id": "420",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 38,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "60",
            "61"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 119
            },
            "start": {
              "column": 26,
              "line": 117
            }
          }
        },
        {
          "id": "422",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 20,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "52"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 121
            },
            "start": {
              "column": 9,
              "line": 121
            }
          }
        },
        {
          "id": "421",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 20,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "52"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 121
            },
            "start": {
              "column": 9,
              "line": 121
            }
          }
        },
        {
          "id": "423",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 20,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "52"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 124
            },
            "start": {
              "column": 31,
              "line": 121
            }
          }
        },
        {
          "id": "424",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 20,
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "50",
            "52"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 126
            },
            "start": {
              "column": 22,
              "line": 126
            }
          }
        },
        {
          "id": "428",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nMatcher error: received value must have a length property whose value must be a number\n\nReceived has value: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:212:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "49"
          ],
          "coveredBy": [
            "49"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 149
            },
            "start": {
              "column": 65,
              "line": 147
            }
          }
        },
        {
          "id": "427",
          "mutatorName": "LogicalOperator",
          "replacement": "this.agentProfiles.get(agentId) && null",
          "statusReason": "Error: No agent profiles available for selection\n    at LoadBalancer.selectLeastLoaded (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:297:17)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:133:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:71:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "48",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 139
            },
            "start": {
              "column": 12,
              "line": 139
            }
          }
        },
        {
          "id": "426",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: No agent profiles available for selection\n    at LoadBalancer.selectLeastLoaded (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:297:17)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:133:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:71:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "10",
            "11",
            "12",
            "15",
            "17",
            "18",
            "23",
            "25",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "48",
            "53",
            "54"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 140
            },
            "start": {
              "column": 43,
              "line": 138
            }
          }
        },
        {
          "id": "429",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: No agent profiles available for selection\n    at LoadBalancer.selectLeastLoaded (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:297:17)\n    at LoadBalancer.selectAgent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/LoadBalancer.ts:133:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:71:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 192
            },
            "start": {
              "column": 75,
              "line": 157
            }
          }
        },
        {
          "id": "430",
          "mutatorName": "BooleanLiteral",
          "replacement": "profile",
          "statusReason": "TypeError: Cannot set properties of undefined (setting 'cpuUsage')\n    at ResourceMonitor.recordUsage (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/ResourceMonitor.ts:271:29)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:36:21)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "40"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 160
            },
            "start": {
              "column": 9,
              "line": 160
            }
          }
        },
        {
          "id": "431",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 50\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:65:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "41"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 160
            },
            "start": {
              "column": 9,
              "line": 160
            }
          }
        },
        {
          "id": "432",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "TypeError: Cannot set properties of undefined (setting 'cpuUsage')\n    at ResourceMonitor.recordUsage (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/ResourceMonitor.ts:271:29)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:48:19)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 160
            },
            "start": {
              "column": 9,
              "line": 160
            }
          }
        },
        {
          "id": "433",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot set properties of undefined (setting 'cpuUsage')\n    at ResourceMonitor.recordUsage (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/ResourceMonitor.ts:271:29)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/LoadBalancer.test.ts:48:19)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "29"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 164
            },
            "start": {
              "column": 19,
              "line": 160
            }
          }
        },
        {
          "id": "434",
          "mutatorName": "ConditionalExpression",
          "replacement": "case ResourceType.CPU:",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 50\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:40:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "40"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 170
            },
            "start": {
              "column": 7,
              "line": 168
            }
          }
        },
        {
          "id": "435",
          "mutatorName": "ConditionalExpression",
          "replacement": "case ResourceType.MEMORY:",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 50\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:66:49)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "41"
          ],
          "coveredBy": [
            "41"
          ],
          "location": {
            "end": {
              "column": 15,
              "line": 173
            },
            "start": {
              "column": 7,
              "line": 171
            }
          }
        },
        {
          "id": "437",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 32,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 182
            },
            "start": {
              "column": 9,
              "line": 182
            }
          }
        },
        {
          "id": "438",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"degraded\"\nReceived: \"healthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:115:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 182
            },
            "start": {
              "column": 9,
              "line": 182
            }
          }
        },
        {
          "id": "439",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"degraded\"\nReceived: \"healthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:115:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 184
            },
            "start": {
              "column": 43,
              "line": 182
            }
          }
        },
        {
          "id": "441",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 32,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 191
            },
            "start": {
              "column": 50,
              "line": 186
            }
          }
        },
        {
          "id": "445",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 203
            },
            "start": {
              "column": 14,
              "line": 203
            }
          }
        },
        {
          "id": "442",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'totalCpuCapacity')\n    at AdaptiveResourceManager.analyzeCapacity (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/AdaptiveResourceManager.ts:324:264)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/integration/resources/AdaptiveResourceManager.integration.test.ts:149:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 7,
          "killedBy": [
            "13"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 254
            },
            "start": {
              "column": 52,
              "line": 199
            }
          }
        },
        {
          "id": "443",
          "mutatorName": "MethodExpression",
          "replacement": "allProfiles",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 204
            },
            "start": {
              "column": 26,
              "line": 202
            }
          }
        },
        {
          "id": "446",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:150:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "46"
          ],
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 203
            },
            "start": {
              "column": 14,
              "line": 203
            }
          }
        },
        {
          "id": "444",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:150:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 7,
          "killedBy": [
            "46"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 203
            },
            "start": {
              "column": 7,
              "line": 203
            }
          }
        },
        {
          "id": "447",
          "mutatorName": "EqualityOperator",
          "replacement": "p.currentTaskCount >= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 203
            },
            "start": {
              "column": 14,
              "line": 203
            }
          }
        },
        {
          "id": "448",
          "mutatorName": "EqualityOperator",
          "replacement": "p.currentTaskCount <= 0",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:150:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "46"
          ],
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 203
            },
            "start": {
              "column": 14,
              "line": 203
            }
          }
        },
        {
          "id": "451",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 206
            },
            "start": {
              "column": 14,
              "line": 206
            }
          }
        },
        {
          "id": "452",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:168:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "47"
          ],
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 206
            },
            "start": {
              "column": 14,
              "line": 206
            }
          }
        },
        {
          "id": "453",
          "mutatorName": "EqualityOperator",
          "replacement": "p.currentTaskCount !== 0",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:168:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "47"
          ],
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 206
            },
            "start": {
              "column": 14,
              "line": 206
            }
          }
        },
        {
          "id": "450",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:168:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 7,
          "killedBy": [
            "47"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 206
            },
            "start": {
              "column": 7,
              "line": 206
            }
          }
        },
        {
          "id": "449",
          "mutatorName": "MethodExpression",
          "replacement": "allProfiles",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 207
            },
            "start": {
              "column": 24,
              "line": 205
            }
          }
        },
        {
          "id": "457",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 209
            },
            "start": {
              "column": 14,
              "line": 209
            }
          }
        },
        {
          "id": "456",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 209
            },
            "start": {
              "column": 14,
              "line": 209
            }
          }
        },
        {
          "id": "454",
          "mutatorName": "MethodExpression",
          "replacement": "allProfiles",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 210
            },
            "start": {
              "column": 29,
              "line": 208
            }
          }
        },
        {
          "id": "458",
          "mutatorName": "EqualityOperator",
          "replacement": "p.healthStatus !== \"unhealthy\"",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 209
            },
            "start": {
              "column": 14,
              "line": 209
            }
          }
        },
        {
          "id": "455",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 209
            },
            "start": {
              "column": 7,
              "line": 209
            }
          }
        },
        {
          "id": "461",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - p.cpuUsage.maximum",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 213
            },
            "start": {
              "column": 19,
              "line": 213
            }
          }
        },
        {
          "id": "460",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 213
            },
            "start": {
              "column": 7,
              "line": 213
            }
          }
        },
        {
          "id": "463",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - p.cpuUsage.current",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 216
            },
            "start": {
              "column": 52,
              "line": 216
            }
          }
        },
        {
          "id": "462",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 216
            },
            "start": {
              "column": 40,
              "line": 216
            }
          }
        },
        {
          "id": "465",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - p.memoryUsage.maximum",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 219
            },
            "start": {
              "column": 19,
              "line": 219
            }
          }
        },
        {
          "id": "467",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - p.memoryUsage.current",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 223
            },
            "start": {
              "column": 19,
              "line": 223
            }
          }
        },
        {
          "id": "464",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 219
            },
            "start": {
              "column": 7,
              "line": 219
            }
          }
        },
        {
          "id": "466",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 223
            },
            "start": {
              "column": 7,
              "line": 223
            }
          }
        },
        {
          "id": "469",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - p.currentTaskCount",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 3\nReceived: -3\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:151:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "killedBy": [
            "46"
          ],
          "coveredBy": [
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 228
            },
            "start": {
              "column": 19,
              "line": 228
            }
          }
        },
        {
          "id": "468",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 3\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:151:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 7,
          "killedBy": [
            "46"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 228
            },
            "start": {
              "column": 7,
              "line": 228
            }
          }
        },
        {
          "id": "470",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 236
            },
            "start": {
              "column": 7,
              "line": 236
            }
          }
        },
        {
          "id": "471",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 236
            },
            "start": {
              "column": 7,
              "line": 236
            }
          }
        },
        {
          "id": "472",
          "mutatorName": "EqualityOperator",
          "replacement": "completionTimes.length >= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 236
            },
            "start": {
              "column": 7,
              "line": 236
            }
          }
        },
        {
          "id": "473",
          "mutatorName": "EqualityOperator",
          "replacement": "completionTimes.length <= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 7,
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 236
            },
            "start": {
              "column": 7,
              "line": 236
            }
          }
        },
        {
          "id": "478",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 5\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:83:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 25,
          "killedBy": [
            "42"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 268
            },
            "start": {
              "column": 76,
              "line": 262
            }
          }
        },
        {
          "id": "477",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nMatcher error: received value must be a number or bigint\n\nReceived has value: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/AdaptiveResourceManager.test.ts:108:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 7,
          "killedBy": [
            "56"
          ],
          "coveredBy": [
            "5",
            "6",
            "13",
            "46",
            "47",
            "55",
            "56"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 253
            },
            "start": {
              "column": 12,
              "line": 241
            }
          }
        },
        {
          "id": "479",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 25,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 264
            },
            "start": {
              "column": 9,
              "line": 264
            }
          }
        },
        {
          "id": "480",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 5\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:83:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 25,
          "killedBy": [
            "42"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 264
            },
            "start": {
              "column": 9,
              "line": 264
            }
          }
        },
        {
          "id": "486",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeNull()\n\nReceived: {\"agentId\": \"agent-1\", \"cpuUsage\": {\"current\": 50, \"maximum\": 100, \"source\": \"agent-1\", \"timestamp\": 2025-10-15T08:04:33.344Z, \"type\": \"cpu\", \"unit\": \"%\", \"usagePercent\": 50}, \"currentTaskCount\": 0, \"healthStatus\": \"healthy\", \"lastUpdated\": 2025-10-15T08:04:33.344Z, \"maxTaskCapacity\": 10, \"memoryUsage\": {\"current\": 0, \"maximum\": 1024, \"source\": \"agent-1\", \"timestamp\": 2025-10-15T08:04:33.344Z, \"type\": \"memory\", \"unit\": \"MB\", \"usagePercent\": 0}, \"networkUsage\": {\"current\": 0, \"maximum\": 1000, \"source\": \"agent-1\", \"timestamp\": 2025-10-15T08:04:33.344Z, \"type\": \"network\", \"unit\": \"Mbps\", \"usagePercent\": 0}}\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:187:23)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "48"
          ],
          "coveredBy": [
            "48"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 295
            },
            "start": {
              "column": 53,
              "line": 292
            }
          }
        },
        {
          "id": "481",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 5\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:83:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 25,
          "killedBy": [
            "42"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "46",
            "47"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 267
            },
            "start": {
              "column": 18,
              "line": 264
            }
          }
        },
        {
          "id": "488",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "coveredBy": [
            "48"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 294
            },
            "start": {
              "column": 55,
              "line": 294
            }
          }
        },
        {
          "id": "494",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot set properties of undefined (setting 'cpuUsage')\n    at ResourceMonitor.recordUsage (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/ResourceMonitor.ts:271:29)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:36:21)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "40"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 350
            },
            "start": {
              "column": 71,
              "line": 315
            }
          }
        },
        {
          "id": "495",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'usagePercent')\n    at ResourceMonitor.computeHealthStatus (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/ResourceMonitor.ts:493:49)\n    at ResourceMonitor.recordUsage (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/src/resources/ResourceMonitor.ts:295:39)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:36:21)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "40"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 349
            },
            "start": {
              "column": 12,
              "line": 316
            }
          }
        },
        {
          "id": "496",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 32,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 326
            },
            "start": {
              "column": 17,
              "line": 318
            }
          }
        },
        {
          "id": "498",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 32,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 335
            },
            "start": {
              "column": 20,
              "line": 327
            }
          }
        },
        {
          "id": "500",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 32,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 344
            },
            "start": {
              "column": 21,
              "line": 336
            }
          }
        },
        {
          "id": "503",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"healthy\"\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:100:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 378
            },
            "start": {
              "column": 43,
              "line": 357
            }
          }
        },
        {
          "id": "504",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"healthy\"\nReceived: \"unhealthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:100:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 364
            },
            "start": {
              "column": 7,
              "line": 363
            }
          }
        },
        {
          "id": "505",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"unhealthy\"\nReceived: \"degraded\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:130:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 364
            },
            "start": {
              "column": 7,
              "line": 363
            }
          }
        },
        {
          "id": "506",
          "mutatorName": "LogicalOperator",
          "replacement": "cpuPercent >= this.config.cpuThresholds.critical && memoryPercent >= this.config.memoryThresholds.critical",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"unhealthy\"\nReceived: \"degraded\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:130:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 364
            },
            "start": {
              "column": 7,
              "line": 363
            }
          }
        },
        {
          "id": "507",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"unhealthy\"\nReceived: \"degraded\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:130:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 363
            },
            "start": {
              "column": 7,
              "line": 363
            }
          }
        },
        {
          "id": "508",
          "mutatorName": "EqualityOperator",
          "replacement": "cpuPercent > this.config.cpuThresholds.critical",
          "status": "Survived",
          "static": false,
          "testsCompleted": 32,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 363
            },
            "start": {
              "column": 7,
              "line": 363
            }
          }
        },
        {
          "id": "509",
          "mutatorName": "EqualityOperator",
          "replacement": "cpuPercent < this.config.cpuThresholds.critical",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"healthy\"\nReceived: \"unhealthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:100:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 32,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 363
            },
            "start": {
              "column": 7,
              "line": 363
            }
          }
        },
        {
          "id": "510",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 31,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 364
            },
            "start": {
              "column": 7,
              "line": 364
            }
          }
        },
        {
          "id": "513",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"unhealthy\"\nReceived: \"degraded\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:130:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 367
            },
            "start": {
              "column": 7,
              "line": 365
            }
          }
        },
        {
          "id": "511",
          "mutatorName": "EqualityOperator",
          "replacement": "memoryPercent > this.config.memoryThresholds.critical",
          "status": "Survived",
          "static": false,
          "testsCompleted": 31,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 364
            },
            "start": {
              "column": 7,
              "line": 364
            }
          }
        },
        {
          "id": "512",
          "mutatorName": "EqualityOperator",
          "replacement": "memoryPercent < this.config.memoryThresholds.critical",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"healthy\"\nReceived: \"unhealthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:100:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 364
            },
            "start": {
              "column": 7,
              "line": 364
            }
          }
        },
        {
          "id": "515",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"healthy\"\nReceived: \"degraded\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:100:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 372
            },
            "start": {
              "column": 7,
              "line": 371
            }
          }
        },
        {
          "id": "516",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"degraded\"\nReceived: \"healthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:115:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 372
            },
            "start": {
              "column": 7,
              "line": 371
            }
          }
        },
        {
          "id": "517",
          "mutatorName": "LogicalOperator",
          "replacement": "cpuPercent >= this.config.cpuThresholds.warning && memoryPercent >= this.config.memoryThresholds.warning",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"degraded\"\nReceived: \"healthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:115:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 372
            },
            "start": {
              "column": 7,
              "line": 371
            }
          }
        },
        {
          "id": "518",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"degraded\"\nReceived: \"healthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:115:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 371
            },
            "start": {
              "column": 7,
              "line": 371
            }
          }
        },
        {
          "id": "519",
          "mutatorName": "EqualityOperator",
          "replacement": "cpuPercent > this.config.cpuThresholds.warning",
          "status": "Survived",
          "static": false,
          "testsCompleted": 31,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 371
            },
            "start": {
              "column": 7,
              "line": 371
            }
          }
        },
        {
          "id": "520",
          "mutatorName": "EqualityOperator",
          "replacement": "cpuPercent < this.config.cpuThresholds.warning",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"healthy\"\nReceived: \"degraded\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:100:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 31,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 371
            },
            "start": {
              "column": 7,
              "line": 371
            }
          }
        },
        {
          "id": "521",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 30,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 372
            },
            "start": {
              "column": 7,
              "line": 372
            }
          }
        },
        {
          "id": "522",
          "mutatorName": "EqualityOperator",
          "replacement": "memoryPercent > this.config.memoryThresholds.warning",
          "status": "Survived",
          "static": false,
          "testsCompleted": 30,
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 372
            },
            "start": {
              "column": 7,
              "line": 372
            }
          }
        },
        {
          "id": "524",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"degraded\"\nReceived: \"healthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:115:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "44"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 375
            },
            "start": {
              "column": 7,
              "line": 373
            }
          }
        },
        {
          "id": "523",
          "mutatorName": "EqualityOperator",
          "replacement": "memoryPercent < this.config.memoryThresholds.warning",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"healthy\"\nReceived: \"degraded\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:100:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 30,
          "killedBy": [
            "43"
          ],
          "coveredBy": [
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "46",
            "47",
            "48",
            "49"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 372
            },
            "start": {
              "column": 7,
              "line": 372
            }
          }
        },
        {
          "id": "393",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"degraded\"\nReceived: \"healthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:115:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": true,
          "testsCompleted": 62,
          "killedBy": [
            "44"
          ],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 60
            },
            "start": {
              "column": 47,
              "line": 48
            }
          }
        },
        {
          "id": "394",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"degraded\"\nReceived: \"healthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:115:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": true,
          "testsCompleted": 62,
          "killedBy": [
            "44"
          ],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 29,
              "line": 50
            },
            "start": {
              "column": 25,
              "line": 50
            }
          }
        },
        {
          "id": "395",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"degraded\"\nReceived: \"healthy\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-HBDLFi/tests/unit/resources/ResourceMonitor.test.ts:115:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": true,
          "testsCompleted": 62,
          "killedBy": [
            "44"
          ],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 54
            },
            "start": {
              "column": 18,
              "line": 51
            }
          }
        },
        {
          "id": "396",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": true,
          "testsCompleted": 62,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 58
            },
            "start": {
              "column": 21,
              "line": 55
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Resource Monitor for Adaptive Resource Manager\n *\n * Tracks resource usage (CPU, memory, network) for agent pools.\n * Provides real-time visibility into system resource consumption.\n *\n * @author @darianrosebrook\n */\n\nimport { Logger } from \"@/observability/Logger\";\nimport {\n  ResourceType,\n  type AgentResourceProfile,\n  type IResourceMonitor,\n  type ResourcePoolStats,\n  type ResourceUsage,\n} from \"@/types/resource-types\";\n\n/**\n * Resource Monitor Configuration\n */\nexport interface ResourceMonitorConfig {\n  /** Monitoring interval (ms) */\n  intervalMs: number;\n\n  /** Enable automatic health status updates */\n  enableHealthTracking: boolean;\n\n  /** CPU usage thresholds (%) */\n  cpuThresholds: {\n    warning: number;\n    critical: number;\n  };\n\n  /** Memory usage thresholds (%) */\n  memoryThresholds: {\n    warning: number;\n    critical: number;\n  };\n\n  /** Maximum task capacity per agent */\n  defaultMaxTaskCapacity: number;\n}\n\n/**\n * Default configuration\n */\nconst DEFAULT_CONFIG: ResourceMonitorConfig = {\n  intervalMs: 5000, // 5 seconds\n  enableHealthTracking: true,\n  cpuThresholds: {\n    warning: 70,\n    critical: 85,\n  },\n  memoryThresholds: {\n    warning: 75,\n    critical: 90,\n  },\n  defaultMaxTaskCapacity: 10,\n};\n\n/**\n * Resource Monitor\n *\n * Monitors resource usage across agent pools:\n * - Real-time resource tracking\n * - Agent health status computation\n * - Resource pool statistics\n * - Configurable thresholds\n */\nexport class ResourceMonitor implements IResourceMonitor {\n  private logger: Logger;\n  private config: ResourceMonitorConfig;\n  private agentProfiles: Map<string, AgentResourceProfile> = new Map();\n  private isRunning = false;\n  private monitoringTimer?: ReturnType<typeof setInterval>;\n\n  constructor(config: Partial<ResourceMonitorConfig> = {}) {\n    this.logger = new Logger(\"ResourceMonitor\");\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  /**\n   * Start resource monitoring\n   */\n  async start(): Promise<void> {\n    if (this.isRunning) {\n      this.logger.warn(\"Resource monitor already running\");\n      return;\n    }\n\n    this.isRunning = true;\n\n    // Clear any existing timer first to prevent multiple timers\n    if (this.monitoringTimer) {\n      clearInterval(this.monitoringTimer);\n      this.monitoringTimer = undefined;\n    }\n\n    // Start periodic health updates\n    if (this.config.enableHealthTracking) {\n      this.monitoringTimer = setInterval(async () => {\n        await this.updateAgentHealth();\n      }, this.config.intervalMs);\n    }\n\n    this.logger.info(\"Resource monitor started\", {\n      intervalMs: this.config.intervalMs,\n      healthTracking: this.config.enableHealthTracking,\n    });\n  }\n\n  /**\n   * Stop resource monitoring\n   */\n  async stop(): Promise<void> {\n    if (!this.isRunning) {\n      return;\n    }\n\n    if (this.monitoringTimer) {\n      clearInterval(this.monitoringTimer);\n      this.monitoringTimer = undefined;\n    }\n\n    this.isRunning = false;\n    this.logger.info(\"Resource monitor stopped\");\n  }\n\n  /**\n   * Get current resource usage for an agent\n   *\n   * @param agentId Agent identifier\n   * @returns Agent resource profile or null if not found\n   */\n  async getAgentResources(\n    agentId: string\n  ): Promise<AgentResourceProfile | null> {\n    return this.agentProfiles.get(agentId) ?? null;\n  }\n\n  /**\n   * Get all agent resource profiles\n   *\n   * @returns All agent resource profiles\n   */\n  async getAllAgentResources(): Promise<AgentResourceProfile[]> {\n    return Array.from(this.agentProfiles.values());\n  }\n\n  /**\n   * Record resource usage for an agent\n   *\n   * @param agentId Agent identifier\n   * @param usage Resource usage data\n   */\n  async recordUsage(agentId: string, usage: ResourceUsage): Promise<void> {\n    let profile = this.agentProfiles.get(agentId);\n\n    if (!profile) {\n      // Create new profile\n      profile = this.createInitialProfile(agentId);\n      this.agentProfiles.set(agentId, profile);\n    }\n\n    // Update resource usage\n    switch (usage.type) {\n      case ResourceType.CPU:\n        profile.cpuUsage = usage;\n        break;\n      case ResourceType.MEMORY:\n        profile.memoryUsage = usage;\n        break;\n      case ResourceType.NETWORK:\n        profile.networkUsage = usage;\n        break;\n    }\n\n    profile.lastUpdated = new Date();\n\n    // Update health status\n    if (this.config.enableHealthTracking) {\n      profile.healthStatus = this.computeHealthStatus(profile);\n    }\n\n    this.logger.debug(\"Recorded resource usage\", {\n      agentId,\n      resourceType: usage.type,\n      usagePercent: usage.usagePercent,\n      healthStatus: profile.healthStatus,\n    });\n  }\n\n  /**\n   * Get resource pool statistics\n   *\n   * @returns Resource pool statistics\n   */\n  async getPoolStats(): Promise<ResourcePoolStats> {\n    const allProfiles = Array.from(this.agentProfiles.values());\n\n    const activeAgents = allProfiles.filter(\n      (p) => p.currentTaskCount > 0\n    ).length;\n    const idleAgents = allProfiles.filter(\n      (p) => p.currentTaskCount === 0\n    ).length;\n    const unhealthyAgents = allProfiles.filter(\n      (p) => p.healthStatus === \"unhealthy\"\n    ).length;\n\n    const totalCpu = allProfiles.reduce(\n      (sum, p) => sum + p.cpuUsage.maximum,\n      0\n    );\n    const usedCpu = allProfiles.reduce((sum, p) => sum + p.cpuUsage.current, 0);\n\n    const totalMemory = allProfiles.reduce(\n      (sum, p) => sum + p.memoryUsage.maximum,\n      0\n    );\n    const usedMemory = allProfiles.reduce(\n      (sum, p) => sum + p.memoryUsage.current,\n      0\n    );\n\n    const totalTasks = allProfiles.reduce(\n      (sum, p) => sum + p.currentTaskCount,\n      0\n    );\n\n    const completionTimes = allProfiles\n      .map((p) => p.avgTaskCompletionMs)\n      .filter((t) => t !== undefined) as number[];\n    const avgCompletion =\n      completionTimes.length > 0\n        ? completionTimes.reduce((sum, t) => sum + t, 0) /\n          completionTimes.length\n        : 0;\n\n    return {\n      totalAgents: allProfiles.length,\n      activeAgents,\n      idleAgents,\n      unhealthyAgents,\n      totalCpuCapacity: totalCpu,\n      usedCpuCapacity: usedCpu,\n      totalMemoryCapacity: totalMemory,\n      usedMemoryCapacity: usedMemory,\n      tasksInProgress: totalTasks,\n      avgTaskCompletionMs: avgCompletion,\n      lastUpdated: new Date(),\n    };\n  }\n\n  /**\n   * Update task count for an agent\n   *\n   * @param agentId Agent identifier\n   * @param taskCount Current task count\n   */\n  async updateTaskCount(agentId: string, taskCount: number): Promise<void> {\n    const profile = this.agentProfiles.get(agentId);\n    if (profile) {\n      profile.currentTaskCount = taskCount;\n      profile.lastUpdated = new Date();\n    }\n  }\n\n  /**\n   * Update average task completion time for an agent\n   *\n   * @param agentId Agent identifier\n   * @param completionMs Average completion time (ms)\n   */\n  async updateTaskCompletionTime(\n    agentId: string,\n    completionMs: number\n  ): Promise<void> {\n    const profile = this.agentProfiles.get(agentId);\n    if (profile) {\n      profile.avgTaskCompletionMs = completionMs;\n      profile.lastUpdated = new Date();\n    }\n  }\n\n  /**\n   * Remove agent from monitoring\n   *\n   * @param agentId Agent identifier\n   */\n  async removeAgent(agentId: string): Promise<void> {\n    this.agentProfiles.delete(agentId);\n    this.logger.info(\"Agent removed from monitoring\", { agentId });\n  }\n\n  /**\n   * Get configuration\n   */\n  getConfig(): ResourceMonitorConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(config: Partial<ResourceMonitorConfig>): void {\n    this.config = { ...this.config, ...config };\n    this.logger.info(\"Configuration updated\", this.config);\n  }\n\n  /**\n   * Create initial profile for an agent\n   */\n  private createInitialProfile(agentId: string): AgentResourceProfile {\n    return {\n      agentId,\n      cpuUsage: {\n        type: ResourceType.CPU,\n        current: 0,\n        maximum: 100,\n        usagePercent: 0,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: agentId,\n      },\n      memoryUsage: {\n        type: ResourceType.MEMORY,\n        current: 0,\n        maximum: 1024,\n        usagePercent: 0,\n        unit: \"MB\",\n        timestamp: new Date(),\n        source: agentId,\n      },\n      networkUsage: {\n        type: ResourceType.NETWORK,\n        current: 0,\n        maximum: 1000,\n        usagePercent: 0,\n        unit: \"Mbps\",\n        timestamp: new Date(),\n        source: agentId,\n      },\n      currentTaskCount: 0,\n      maxTaskCapacity: this.config.defaultMaxTaskCapacity,\n      healthStatus: \"healthy\",\n      lastUpdated: new Date(),\n    };\n  }\n\n  /**\n   * Compute health status for an agent\n   */\n  private computeHealthStatus(\n    profile: AgentResourceProfile\n  ): \"healthy\" | \"degraded\" | \"unhealthy\" {\n    const cpuPercent = profile.cpuUsage.usagePercent;\n    const memoryPercent = profile.memoryUsage.usagePercent;\n\n    // Check critical thresholds\n    if (\n      cpuPercent >= this.config.cpuThresholds.critical ||\n      memoryPercent >= this.config.memoryThresholds.critical\n    ) {\n      return \"unhealthy\";\n    }\n\n    // Check warning thresholds\n    if (\n      cpuPercent >= this.config.cpuThresholds.warning ||\n      memoryPercent >= this.config.memoryThresholds.warning\n    ) {\n      return \"degraded\";\n    }\n\n    return \"healthy\";\n  }\n\n  /**\n   * Update health status for all agents\n   */\n  private async updateAgentHealth(): Promise<void> {\n    for (const profile of this.agentProfiles.values()) {\n      profile.healthStatus = this.computeHealthStatus(profile);\n    }\n  }\n}\n"
    },
    "src/optimization/BottleneckDetector.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "src/optimization/BottleneckDetector.ts@151:33-153:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 154
            },
            "start": {
              "column": 34,
              "line": 152
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@48:29-48:49\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 50,
              "line": 49
            },
            "start": {
              "column": 30,
              "line": 49
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@59:46-59:48\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 49,
              "line": 60
            },
            "start": {
              "column": 47,
              "line": 60
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@73:22-73:54\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 55,
              "line": 74
            },
            "start": {
              "column": 23,
              "line": 74
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@88:21-88:41\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 42,
              "line": 89
            },
            "start": {
              "column": 22,
              "line": 89
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@111:76-111:78\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 79,
              "line": 112
            },
            "start": {
              "column": 77,
              "line": 112
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@122:24-122:54\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 55,
              "line": 123
            },
            "start": {
              "column": 25,
              "line": 123
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@136:52-136:54\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 55,
              "line": 137
            },
            "start": {
              "column": 53,
              "line": 137
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@162:26-162:55\nStringLiteral: ``",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 56,
              "line": 163
            },
            "start": {
              "column": 27,
              "line": 163
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@200:21-200:46\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 47,
              "line": 201
            },
            "start": {
              "column": 22,
              "line": 201
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@276:8-276:70\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 71,
              "line": 277
            },
            "start": {
              "column": 9,
              "line": 277
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@278:8-278:68\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 69,
              "line": 279
            },
            "start": {
              "column": 9,
              "line": 279
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@279:28-279:79\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 280
            },
            "start": {
              "column": 29,
              "line": 280
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@281:8-281:73\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 74,
              "line": 282
            },
            "start": {
              "column": 9,
              "line": 282
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@283:8-283:68\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 69,
              "line": 284
            },
            "start": {
              "column": 9,
              "line": 284
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@284:31-284:77\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 78,
              "line": 285
            },
            "start": {
              "column": 32,
              "line": 285
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@286:8-286:63\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 64,
              "line": 287
            },
            "start": {
              "column": 9,
              "line": 287
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@290:31-290:65\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 66,
              "line": 291
            },
            "start": {
              "column": 32,
              "line": 291
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@294:10-294:20\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 21,
              "line": 295
            },
            "start": {
              "column": 11,
              "line": 295
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@295:10-295:12\nStringLiteral: \"Stryker was here!\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 13,
              "line": 296
            },
            "start": {
              "column": 11,
              "line": 296
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@297:11-297:59\nStringLiteral: ``",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 60,
              "line": 298
            },
            "start": {
              "column": 12,
              "line": 298
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@313:57-313:59\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 60,
              "line": 314
            },
            "start": {
              "column": 58,
              "line": 314
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@64:68-71:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 72
            },
            "start": {
              "column": 69,
              "line": 65
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@58:79-79:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: bottlenecks is not iterable\n    at RuntimeOptimizer.generateRecommendations (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:437:32)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:255:42)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:76:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 35,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 80
            },
            "start": {
              "column": 80,
              "line": 59
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@47:68-50:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'debug')\n    at BottleneckDetector.detectBottlenecks (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:144:19)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:252:57)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:76:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 49,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 51
            },
            "start": {
              "column": 69,
              "line": 48
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@49:22-49:62\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 49,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 50
            },
            "start": {
              "column": 23,
              "line": 50
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@65:45-70:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 71
            },
            "start": {
              "column": 46,
              "line": 66
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@67:24-69:9\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 10,
              "line": 70
            },
            "start": {
              "column": 25,
              "line": 68
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@67:12-67:22\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "TypeError: Cannot read properties of null (reading 'component')\n    at RuntimeOptimizer.generateRecommendationForBottleneck (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:467:31)\n    at RuntimeOptimizer.generateRecommendations (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:442:39)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:255:42)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:150:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "64"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 68
            },
            "start": {
              "column": 13,
              "line": 68
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@86:74-89:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [{\"component\": \"test\", \"currentValue\": 85, \"detectedAt\": 2025-10-15T07:27:21.254Z, \"id\": \"eba24337-a697-4ecf-b0c2-c998ed14e0e0\", \"impact\": \"High CPU usage may cause slow response times and task delays in test\", \"lastObservedAt\": 2025-10-15T07:27:21.254Z, \"metricType\": \"cpu\", \"occurrenceCount\": 1, \"severity\": \"low\", \"threshold\": 80}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:246:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "82"
          ],
          "coveredBy": [
            "82"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 90
            },
            "start": {
              "column": 75,
              "line": 87
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@67:12-67:22\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 68
            },
            "start": {
              "column": 13,
              "line": 68
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@87:22-87:59\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "82"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 88
            },
            "start": {
              "column": 23,
              "line": 88
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@105:65-127:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [{\"component\": \"test-component\", \"currentValue\": 90, \"detectedAt\": 2025-10-15T07:27:11.717Z, \"id\": \"1a6c7a03-ac40-4b6b-89cd-2bfc5a050a87\", \"impact\": \"High CPU usage may cause slow response times and task delays in test-component\", \"lastObservedAt\": 2025-10-15T07:27:11.717Z, \"metricType\": \"cpu\", \"occurrenceCount\": 1, \"severity\": \"low\", \"threshold\": 80}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:317:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 128
            },
            "start": {
              "column": 66,
              "line": 106
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@108:60-117:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [{\"component\": \"test-component\", \"currentValue\": 90, \"detectedAt\": 2025-10-15T07:27:11.735Z, \"id\": \"375697b6-640a-4742-b6fa-c7cfe96cea30\", \"impact\": \"High CPU usage may cause slow response times and task delays in test-component\", \"lastObservedAt\": 2025-10-15T07:27:11.735Z, \"metricType\": \"cpu\", \"occurrenceCount\": 1, \"severity\": \"low\", \"threshold\": 80}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:317:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 118
            },
            "start": {
              "column": 61,
              "line": 109
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@96:39-98:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'length')\n    at RuntimeOptimizer.getHealthStatus (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:410:76)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:337:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 9,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "68"
          ],
          "coveredBy": [
            "68",
            "83",
            "84",
            "85",
            "110",
            "111",
            "112",
            "117",
            "120"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 99
            },
            "start": {
              "column": 40,
              "line": 97
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@109:10-109:47\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 110
            },
            "start": {
              "column": 11,
              "line": 110
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@109:10-109:47\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [{\"component\": \"test-component\", \"currentValue\": 90, \"detectedAt\": 2025-10-15T07:27:12.195Z, \"id\": \"177b8a14-ba20-48a4-b485-83c18f326f9d\", \"impact\": \"High CPU usage may cause slow response times and task delays in test-component\", \"lastObservedAt\": 2025-10-15T07:27:12.195Z, \"metricType\": \"cpu\", \"occurrenceCount\": 1, \"severity\": \"low\", \"threshold\": 80}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:317:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 110
            },
            "start": {
              "column": 11,
              "line": 110
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@109:10-109:47\nEqualityOperator: bottleneck.lastObservedAt <= olderThan",
          "mutatorName": "EqualityOperator",
          "replacement": "bottleneck.lastObservedAt <= olderThan",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 110
            },
            "start": {
              "column": 11,
              "line": 110
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@109:49-116:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [{\"component\": \"test-component\", \"currentValue\": 90, \"detectedAt\": 2025-10-15T07:27:12.475Z, \"id\": \"e91f230e-480c-4a2f-8bd3-5d6392286b68\", \"impact\": \"High CPU usage may cause slow response times and task delays in test-component\", \"lastObservedAt\": 2025-10-15T07:27:12.475Z, \"metricType\": \"cpu\", \"occurrenceCount\": 1, \"severity\": \"low\", \"threshold\": 80}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:317:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 117
            },
            "start": {
              "column": 50,
              "line": 110
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@109:10-109:47\nEqualityOperator: bottleneck.lastObservedAt >= olderThan",
          "mutatorName": "EqualityOperator",
          "replacement": "bottleneck.lastObservedAt >= olderThan",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [{\"component\": \"test-component\", \"currentValue\": 90, \"detectedAt\": 2025-10-15T07:27:12.470Z, \"id\": \"aae93f96-0b0b-4931-9811-f81521d3ea34\", \"impact\": \"High CPU usage may cause slow response times and task delays in test-component\", \"lastObservedAt\": 2025-10-15T07:27:12.470Z, \"metricType\": \"cpu\", \"occurrenceCount\": 1, \"severity\": \"low\", \"threshold\": 80}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:317:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 110
            },
            "start": {
              "column": 11,
              "line": 110
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@111:24-111:78\nLogicalOperator: this.bottleneckHistory.get(bottleneck.component) && []",
          "mutatorName": "LogicalOperator",
          "replacement": "this.bottleneckHistory.get(bottleneck.component) && []",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'push')\n    at BottleneckDetector.clearResolvedBottlenecks (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:207:23)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:315:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "85"
          ],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 79,
              "line": 112
            },
            "start": {
              "column": 25,
              "line": 112
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@121:8-121:24\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 122
            },
            "start": {
              "column": 9,
              "line": 122
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@119:25-119:66\nArithmeticOperator: beforeCount + this.activeBottlenecks.size",
          "mutatorName": "ArithmeticOperator",
          "replacement": "beforeCount + this.activeBottlenecks.size",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 120
            },
            "start": {
              "column": 26,
              "line": 120
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@121:8-121:24\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 122
            },
            "start": {
              "column": 9,
              "line": 122
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@121:8-121:24\nEqualityOperator: clearedCount >= 0",
          "mutatorName": "EqualityOperator",
          "replacement": "clearedCount >= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 122
            },
            "start": {
              "column": 9,
              "line": 122
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@121:26-126:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 127
            },
            "start": {
              "column": 27,
              "line": 122
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@121:8-121:24\nEqualityOperator: clearedCount <= 0",
          "mutatorName": "EqualityOperator",
          "replacement": "clearedCount <= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 122
            },
            "start": {
              "column": 9,
              "line": 122
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@122:56-125:7\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "85"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 126
            },
            "start": {
              "column": 57,
              "line": 123
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@135:56-137:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:378:23)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "90"
          ],
          "coveredBy": [
            "90"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 138
            },
            "start": {
              "column": 57,
              "line": 136
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@136:11-136:54\nLogicalOperator: this.bottleneckHistory.get(component) && []",
          "mutatorName": "LogicalOperator",
          "replacement": "this.bottleneckHistory.get(component) && []",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:378:23)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "90"
          ],
          "coveredBy": [
            "90"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 137
            },
            "start": {
              "column": 12,
              "line": 137
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@73:56-76:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 35,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 77
            },
            "start": {
              "column": 57,
              "line": 74
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@151:8-151:31\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 152
            },
            "start": {
              "column": 9,
              "line": 152
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@149:32-209:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 210
            },
            "start": {
              "column": 33,
              "line": 150
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@151:8-151:31\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 152
            },
            "start": {
              "column": 9,
              "line": 152
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@151:8-151:31\nEqualityOperator: threshold !== undefined",
          "mutatorName": "EqualityOperator",
          "replacement": "threshold !== undefined",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 152
            },
            "start": {
              "column": 9,
              "line": 152
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@157:8-157:25\nBooleanLiteral: exceedsThreshold",
          "mutatorName": "BooleanLiteral",
          "replacement": "exceedsThreshold",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 158
            },
            "start": {
              "column": 9,
              "line": 158
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@157:8-157:25\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 80\nReceived:   50\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:233:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 158
            },
            "start": {
              "column": 9,
              "line": 158
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@157:8-157:25\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 158
            },
            "start": {
              "column": 9,
              "line": 158
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@157:27-159:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 80\nReceived:   50\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:233:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 10,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "76",
            "82"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 160
            },
            "start": {
              "column": 28,
              "line": 158
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@167:8-167:26\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "TypeError: Cannot set properties of undefined (setting 'currentValue')\n    at BottleneckDetector.checkMetricThreshold (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:288:42)\n    at BottleneckDetector.detectBottlenecks (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:131:45)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:252:57)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:103:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 168
            },
            "start": {
              "column": 9,
              "line": 168
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@167:28-181:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"critical\"\nReceived: \"low\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:207:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "80",
            "84"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 182
            },
            "start": {
              "column": 29,
              "line": 168
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@167:8-167:26\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"critical\"\nReceived: \"low\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:207:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 168
            },
            "start": {
              "column": 9,
              "line": 168
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@171:6-171:45\nAssignmentOperator: existingBottleneck.occurrenceCount -= 1",
          "mutatorName": "AssignmentOperator",
          "replacement": "existingBottleneck.occurrenceCount -= 1",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"critical\"\nReceived: \"low\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:207:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "80",
            "84"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 172
            },
            "start": {
              "column": 7,
              "line": 172
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@185:35-196:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:109:29)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 197
            },
            "start": {
              "column": 36,
              "line": 186
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@200:48-206:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 207
            },
            "start": {
              "column": 49,
              "line": 201
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@221:13-232:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:40:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "71"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 233
            },
            "start": {
              "column": 14,
              "line": 222
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@224:6-225:47\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:40:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "71"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 226
            },
            "start": {
              "column": 7,
              "line": 225
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@224:6-225:47\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:88:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 226
            },
            "start": {
              "column": 7,
              "line": 225
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@224:6-225:47\nLogicalOperator: metric.type === MetricType.THROUGHPUT && metric.type === MetricType.CACHE_HIT_RATE",
          "mutatorName": "LogicalOperator",
          "replacement": "metric.type === MetricType.THROUGHPUT && metric.type === MetricType.CACHE_HIT_RATE",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:88:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 226
            },
            "start": {
              "column": 7,
              "line": 225
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@224:6-224:43\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:88:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 225
            },
            "start": {
              "column": 7,
              "line": 225
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@226:6-228:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:88:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 229
            },
            "start": {
              "column": 7,
              "line": 227
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@227:13-227:37\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "74",
            "75"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 228
            },
            "start": {
              "column": 14,
              "line": 228
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@227:13-227:37\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:88:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 228
            },
            "start": {
              "column": 14,
              "line": 228
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@227:13-227:37\nEqualityOperator: metric.value <= threshold",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.value <= threshold",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "74",
            "75"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 228
            },
            "start": {
              "column": 14,
              "line": 228
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@227:13-227:37\nEqualityOperator: metric.value >= threshold",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.value >= threshold",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:88:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "74"
          ],
          "coveredBy": [
            "74",
            "75"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 228
            },
            "start": {
              "column": 14,
              "line": 228
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@224:6-224:43\nEqualityOperator: metric.type !== MetricType.THROUGHPUT",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.type !== MetricType.THROUGHPUT",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 225
            },
            "start": {
              "column": 7,
              "line": 225
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@225:6-225:47\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:103:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 28,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "75"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 226
            },
            "start": {
              "column": 7,
              "line": 226
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@225:6-225:47\nEqualityOperator: metric.type !== MetricType.CACHE_HIT_RATE",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.type !== MetricType.CACHE_HIT_RATE",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:40:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 28,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "71"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 226
            },
            "start": {
              "column": 7,
              "line": 226
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@231:11-231:35\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 0\nReceived length: 1\nReceived array:  [{\"component\": \"test-component\", \"currentValue\": 50, \"detectedAt\": 2025-10-15T07:28:04.222Z, \"id\": \"ecc6d2c7-3be6-4d28-8227-3b1c99f95305\", \"impact\": \"URGENT: High CPU usage may cause slow response times and task delays in test-component\", \"lastObservedAt\": 2025-10-15T07:28:04.222Z, \"metricType\": \"cpu\", \"occurrenceCount\": 1, \"severity\": \"high\", \"threshold\": 80}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:118:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 27,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "76"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 232
            },
            "start": {
              "column": 12,
              "line": 232
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@231:11-231:35\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 27,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 232
            },
            "start": {
              "column": 12,
              "line": 232
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@231:11-231:35\nEqualityOperator: metric.value >= threshold",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.value >= threshold",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   21.853977376222186\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 27,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 232
            },
            "start": {
              "column": 12,
              "line": 232
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@231:11-231:35\nEqualityOperator: metric.value <= threshold",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.value <= threshold",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 27,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 232
            },
            "start": {
              "column": 12,
              "line": 232
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@246:24-259:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:110:39)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 260
            },
            "start": {
              "column": 25,
              "line": 247
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@247:31-247:69\nArithmeticOperator: (metric.value - threshold) * threshold",
          "mutatorName": "ArithmeticOperator",
          "replacement": "(metric.value - threshold) * threshold",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: \"critical\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:185:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 248
            },
            "start": {
              "column": 32,
              "line": 248
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@247:32-247:56\nArithmeticOperator: metric.value + threshold",
          "mutatorName": "ArithmeticOperator",
          "replacement": "metric.value + threshold",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: \"critical\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:185:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 248
            },
            "start": {
              "column": 33,
              "line": 248
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@250:8-250:49\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: \"critical\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:185:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 251
            },
            "start": {
              "column": 9,
              "line": 251
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@250:8-250:49\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 80\nReceived:   80\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:222:36)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 251
            },
            "start": {
              "column": 9,
              "line": 251
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@250:8-250:49\nLogicalOperator: deviation >= 0.5 && occurrenceCount >= 10",
          "mutatorName": "LogicalOperator",
          "replacement": "deviation >= 0.5 && occurrenceCount >= 10",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"critical\"\nReceived: \"high\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:164:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 251
            },
            "start": {
              "column": 9,
              "line": 251
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@250:8-250:24\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"critical\"\nReceived: \"high\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:164:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 251
            },
            "start": {
              "column": 9,
              "line": 251
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@250:8-250:24\nEqualityOperator: deviation > 0.5",
          "mutatorName": "EqualityOperator",
          "replacement": "deviation > 0.5",
          "status": "Survived",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 251
            },
            "start": {
              "column": 9,
              "line": 251
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@250:8-250:24\nEqualityOperator: deviation < 0.5",
          "mutatorName": "EqualityOperator",
          "replacement": "deviation < 0.5",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"critical\"\nReceived: \"high\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:164:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 251
            },
            "start": {
              "column": 9,
              "line": 251
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@250:28-250:49\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"critical\"\nReceived: \"high\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:207:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 251
            },
            "start": {
              "column": 29,
              "line": 251
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@250:28-250:49\nEqualityOperator: occurrenceCount > 10",
          "mutatorName": "EqualityOperator",
          "replacement": "occurrenceCount > 10",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 251
            },
            "start": {
              "column": 29,
              "line": 251
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@250:28-250:49\nEqualityOperator: occurrenceCount < 10",
          "mutatorName": "EqualityOperator",
          "replacement": "occurrenceCount < 10",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: \"critical\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:185:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 251
            },
            "start": {
              "column": 29,
              "line": 251
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@250:51-252:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"critical\"\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:164:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 11,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "78"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "73",
            "74",
            "78",
            "80",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 253
            },
            "start": {
              "column": 52,
              "line": 251
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@252:15-252:55\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   43.52936402704767\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 253
            },
            "start": {
              "column": 16,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@252:15-252:55\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: \"medium\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:185:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 253
            },
            "start": {
              "column": 16,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@252:15-252:55\nLogicalOperator: deviation >= 0.3 && occurrenceCount >= 5",
          "mutatorName": "LogicalOperator",
          "replacement": "deviation >= 0.3 && occurrenceCount >= 5",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: \"medium\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:185:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 253
            },
            "start": {
              "column": 16,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@252:15-252:31\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: \"medium\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:185:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 253
            },
            "start": {
              "column": 16,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@252:15-252:31\nEqualityOperator: deviation > 0.3",
          "mutatorName": "EqualityOperator",
          "replacement": "deviation > 0.3",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 253
            },
            "start": {
              "column": 16,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@252:15-252:31\nEqualityOperator: deviation < 0.3",
          "mutatorName": "EqualityOperator",
          "replacement": "deviation < 0.3",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: \"medium\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:185:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 253
            },
            "start": {
              "column": 16,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@252:35-252:55\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 253
            },
            "start": {
              "column": 36,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@252:35-252:55\nEqualityOperator: occurrenceCount > 5",
          "mutatorName": "EqualityOperator",
          "replacement": "occurrenceCount > 5",
          "status": "Survived",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 253
            },
            "start": {
              "column": 36,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@252:35-252:55\nEqualityOperator: occurrenceCount < 5",
          "mutatorName": "EqualityOperator",
          "replacement": "occurrenceCount < 5",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   20.38834086902747\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 253
            },
            "start": {
              "column": 36,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@252:57-254:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:185:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "63",
            "79",
            "80"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 255
            },
            "start": {
              "column": 58,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@254:15-254:56\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"low\"\nReceived: \"medium\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:199:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 255
            },
            "start": {
              "column": 16,
              "line": 255
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@254:15-254:56\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 255
            },
            "start": {
              "column": 16,
              "line": 255
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@254:15-254:56\nLogicalOperator: deviation >= 0.15 && occurrenceCount >= 3",
          "mutatorName": "LogicalOperator",
          "replacement": "deviation >= 0.15 && occurrenceCount >= 3",
          "status": "Survived",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 255
            },
            "start": {
              "column": 16,
              "line": 255
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@254:15-254:32\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 255
            },
            "start": {
              "column": 16,
              "line": 255
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@254:15-254:32\nEqualityOperator: deviation > 0.15",
          "mutatorName": "EqualityOperator",
          "replacement": "deviation > 0.15",
          "status": "Survived",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 255
            },
            "start": {
              "column": 16,
              "line": 255
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@254:15-254:32\nEqualityOperator: deviation < 0.15",
          "mutatorName": "EqualityOperator",
          "replacement": "deviation < 0.15",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"low\"\nReceived: \"medium\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:199:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 255
            },
            "start": {
              "column": 16,
              "line": 255
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@254:36-254:56\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 15,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "77",
            "80",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 255
            },
            "start": {
              "column": 37,
              "line": 255
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@254:36-254:56\nEqualityOperator: occurrenceCount > 3",
          "mutatorName": "EqualityOperator",
          "replacement": "occurrenceCount > 3",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   30.828198142414863\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 15,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "77",
            "80",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 255
            },
            "start": {
              "column": 37,
              "line": 255
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@254:36-254:56\nEqualityOperator: occurrenceCount < 3",
          "mutatorName": "EqualityOperator",
          "replacement": "occurrenceCount < 3",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"low\"\nReceived: \"medium\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:199:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 15,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "80"
          ],
          "coveredBy": [
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "77",
            "80",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 255
            },
            "start": {
              "column": 37,
              "line": 255
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@254:58-256:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 80\nReceived:   80\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:222:36)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 9,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "75",
            "80",
            "81"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 257
            },
            "start": {
              "column": 59,
              "line": 255
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@256:11-258:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:59:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 15,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "72"
          ],
          "coveredBy": [
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "77",
            "80",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 259
            },
            "start": {
              "column": 12,
              "line": 257
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@273:12-298:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toContain(expected) // indexOf\n\nMatcher error: received value must not be null nor undefined\n\nReceived has value: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:333:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 299
            },
            "start": {
              "column": 13,
              "line": 274
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@274:50-287:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 288
            },
            "start": {
              "column": 51,
              "line": 275
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@290:6-290:65\nLogicalOperator: impactMap[metricType] && \"Performance degradation detected\"",
          "mutatorName": "LogicalOperator",
          "replacement": "impactMap[metricType] && \"Performance degradation detected\"",
          "status": "Survived",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 291
            },
            "start": {
              "column": 7,
              "line": 291
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@292:6-293:42\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 294
            },
            "start": {
              "column": 7,
              "line": 293
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@292:6-293:42\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"URGENT\"\nReceived string:    \"High CPU usage may cause slow response times and task delays in critical-component\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:349:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 294
            },
            "start": {
              "column": 7,
              "line": 293
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@292:6-293:42\nLogicalOperator: severity === BottleneckSeverity.CRITICAL && severity === BottleneckSeverity.HIGH",
          "mutatorName": "LogicalOperator",
          "replacement": "severity === BottleneckSeverity.CRITICAL && severity === BottleneckSeverity.HIGH",
          "statusReason": "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"URGENT\"\nReceived string:    \"High CPU usage may cause slow response times and task delays in critical-component\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:349:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 294
            },
            "start": {
              "column": 7,
              "line": 293
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@292:6-292:46\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"URGENT\"\nReceived string:    \"High CPU usage may cause slow response times and task delays in critical-component\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:349:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 293
            },
            "start": {
              "column": 7,
              "line": 293
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@292:6-292:46\nEqualityOperator: severity !== BottleneckSeverity.CRITICAL",
          "mutatorName": "EqualityOperator",
          "replacement": "severity !== BottleneckSeverity.CRITICAL",
          "statusReason": "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"URGENT\"\nReceived string:    \"High CPU usage may cause slow response times and task delays in critical-component\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:349:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "77",
            "78",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 293
            },
            "start": {
              "column": 7,
              "line": 293
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@293:6-293:42\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 294
            },
            "start": {
              "column": 7,
              "line": 294
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@293:6-293:42\nEqualityOperator: severity !== BottleneckSeverity.HIGH",
          "mutatorName": "EqualityOperator",
          "replacement": "severity !== BottleneckSeverity.HIGH",
          "status": "Survived",
          "static": false,
          "testsCompleted": 19,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70",
            "71",
            "72",
            "75",
            "77",
            "79",
            "80",
            "81",
            "83",
            "84",
            "85",
            "86"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 294
            },
            "start": {
              "column": 7,
              "line": 294
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@311:34-316:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/BottleneckDetector.test.ts:40:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "71"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 317
            },
            "start": {
              "column": 35,
              "line": 312
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@308:38-319:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: metricsByComponent is not iterable\n    at BottleneckDetector.detectBottlenecks (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:121:51)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:252:57)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:77:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 35,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "115"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 320
            },
            "start": {
              "column": 39,
              "line": 309
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@313:31-313:59\nLogicalOperator: grouped.get(component) && []",
          "mutatorName": "LogicalOperator",
          "replacement": "grouped.get(component) && []",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'push')\n    at BottleneckDetector.groupMetricsByComponent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:446:28)\n    at BottleneckDetector.detectBottlenecks (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:120:39)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:252:57)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:103:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "89"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 314
            },
            "start": {
              "column": 32,
              "line": 314
            }
          }
        },
        {
          "id": "src/optimization/BottleneckDetector.ts@22:55-30:1\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   62.94727966872033\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 49,
          "relativeFileName": "src/optimization/BottleneckDetector.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 31
            },
            "start": {
              "column": 56,
              "line": 23
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Bottleneck Detector for Runtime Optimization Engine\n *\n * Analyzes performance metrics to identify system bottlenecks.\n * Uses threshold-based detection with severity classification.\n *\n * @author @darianrosebrook\n */\n\nimport { Logger } from \"@/observability/Logger\";\nimport {\n  BottleneckSeverity,\n  MetricType,\n  type Bottleneck,\n  type IBottleneckDetector,\n  type PerformanceMetric,\n} from \"@/types/optimization-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/**\n * Default thresholds for bottleneck detection\n */\nconst DEFAULT_THRESHOLDS: Record<MetricType, number> = {\n  [MetricType.CPU]: 80, // 80% CPU usage\n  [MetricType.MEMORY]: 85, // 85% memory usage\n  [MetricType.NETWORK]: 75, // 75% network utilization\n  [MetricType.LATENCY]: 1000, // 1000ms latency\n  [MetricType.THROUGHPUT]: 100, // 100 requests/sec minimum\n  [MetricType.ERROR_RATE]: 5, // 5% error rate\n  [MetricType.CACHE_HIT_RATE]: 70, // 70% cache hit rate minimum\n};\n\n/**\n * Bottleneck Detector\n *\n * Identifies performance bottlenecks by:\n * - Comparing metrics against thresholds\n * - Tracking bottleneck frequency\n * - Classifying severity levels\n * - Managing bottleneck lifecycle\n */\nexport class BottleneckDetector implements IBottleneckDetector {\n  private logger: Logger;\n  private thresholds: Record<MetricType, number>;\n  private activeBottlenecks: Map<string, Bottleneck> = new Map();\n  private bottleneckHistory: Map<string, Bottleneck[]> = new Map();\n\n  constructor(thresholds: Partial<Record<MetricType, number>> = {}) {\n    this.logger = new Logger(\"BottleneckDetector\");\n    this.thresholds = { ...DEFAULT_THRESHOLDS, ...thresholds };\n  }\n\n  /**\n   * Detect bottlenecks from metrics\n   *\n   * @param metrics Performance metrics to analyze\n   * @returns Detected bottlenecks\n   */\n  async detectBottlenecks(metrics: PerformanceMetric[]): Promise<Bottleneck[]> {\n    const detectedBottlenecks: Bottleneck[] = [];\n\n    // Group metrics by component and type\n    const metricsByComponent = this.groupMetricsByComponent(metrics);\n\n    for (const [component, componentMetrics] of metricsByComponent) {\n      for (const metric of componentMetrics) {\n        const bottleneck = await this.checkMetricThreshold(component, metric);\n        if (bottleneck) {\n          detectedBottlenecks.push(bottleneck);\n        }\n      }\n    }\n\n    this.logger.debug(\"Bottleneck detection completed\", {\n      metricsAnalyzed: metrics.length,\n      bottlenecksDetected: detectedBottlenecks.length,\n    });\n\n    return detectedBottlenecks;\n  }\n\n  /**\n   * Update bottleneck thresholds\n   *\n   * @param thresholds New threshold values\n   */\n  updateThresholds(thresholds: Partial<Record<MetricType, number>>): void {\n    this.thresholds = { ...this.thresholds, ...thresholds };\n    this.logger.info(\"Thresholds updated\", this.thresholds);\n  }\n\n  /**\n   * Get active bottlenecks\n   *\n   * @returns Currently active bottlenecks\n   */\n  getActiveBottlenecks(): Bottleneck[] {\n    return Array.from(this.activeBottlenecks.values());\n  }\n\n  /**\n   * Clear resolved bottlenecks\n   *\n   * @param olderThan Clear bottlenecks older than this date\n   */\n  async clearResolvedBottlenecks(olderThan: Date): Promise<void> {\n    const beforeCount = this.activeBottlenecks.size;\n\n    for (const [key, bottleneck] of this.activeBottlenecks) {\n      if (bottleneck.lastObservedAt < olderThan) {\n        // Move to history before removing\n        const history = this.bottleneckHistory.get(bottleneck.component) ?? [];\n        history.push(bottleneck);\n        this.bottleneckHistory.set(bottleneck.component, history);\n\n        this.activeBottlenecks.delete(key);\n      }\n    }\n\n    const clearedCount = beforeCount - this.activeBottlenecks.size;\n\n    if (clearedCount > 0) {\n      this.logger.debug(\"Cleared resolved bottlenecks\", {\n        clearedCount,\n        remainingCount: this.activeBottlenecks.size,\n      });\n    }\n  }\n\n  /**\n   * Get bottleneck history for a component\n   *\n   * @param component Component name\n   * @returns Historical bottlenecks\n   */\n  getBottleneckHistory(component: string): Bottleneck[] {\n    return this.bottleneckHistory.get(component) ?? [];\n  }\n\n  /**\n   * Check if a metric exceeds threshold\n   *\n   * @param component Component name\n   * @param metric Performance metric\n   * @returns Bottleneck if threshold exceeded, null otherwise\n   */\n  private async checkMetricThreshold(\n    component: string,\n    metric: PerformanceMetric\n  ): Promise<Bottleneck | null> {\n    const threshold = this.thresholds[metric.type];\n    if (threshold === undefined) {\n      return null;\n    }\n\n    // Check if metric exceeds threshold\n    const exceedsThreshold = this.metricsExceedsThreshold(metric, threshold);\n    if (!exceedsThreshold) {\n      return null;\n    }\n\n    // Generate bottleneck key\n    const bottleneckKey = `${component}-${metric.type}`;\n\n    // Check if bottleneck already exists\n    const existingBottleneck = this.activeBottlenecks.get(bottleneckKey);\n\n    if (existingBottleneck) {\n      // Update existing bottleneck\n      existingBottleneck.currentValue = metric.value;\n      existingBottleneck.lastObservedAt = metric.timestamp;\n      existingBottleneck.occurrenceCount += 1;\n\n      // Update severity based on occurrence count and value\n      existingBottleneck.severity = this.calculateSeverity(\n        metric,\n        threshold,\n        existingBottleneck.occurrenceCount\n      );\n\n      return existingBottleneck;\n    }\n\n    // Create new bottleneck\n    const severity = this.calculateSeverity(metric, threshold, 1);\n    const bottleneck: Bottleneck = {\n      id: uuidv4(),\n      component,\n      severity,\n      metricType: metric.type,\n      currentValue: metric.value,\n      threshold,\n      impact: this.generateImpactDescription(component, metric.type, severity),\n      detectedAt: metric.timestamp,\n      lastObservedAt: metric.timestamp,\n      occurrenceCount: 1,\n    };\n\n    this.activeBottlenecks.set(bottleneckKey, bottleneck);\n\n    this.logger.warn(\"New bottleneck detected\", {\n      component,\n      metricType: metric.type,\n      severity,\n      currentValue: metric.value,\n      threshold,\n    });\n\n    return bottleneck;\n  }\n\n  /**\n   * Check if metric exceeds threshold\n   *\n   * @param metric Performance metric\n   * @param threshold Threshold value\n   * @returns True if threshold exceeded\n   */\n  private metricsExceedsThreshold(\n    metric: PerformanceMetric,\n    threshold: number\n  ): boolean {\n    // For some metrics, lower is better (e.g., throughput, cache hit rate)\n    if (\n      metric.type === MetricType.THROUGHPUT ||\n      metric.type === MetricType.CACHE_HIT_RATE\n    ) {\n      return metric.value < threshold;\n    }\n\n    // For most metrics, higher is worse (e.g., CPU, memory, latency, error rate)\n    return metric.value > threshold;\n  }\n\n  /**\n   * Calculate bottleneck severity\n   *\n   * @param metric Performance metric\n   * @param threshold Threshold value\n   * @param occurrenceCount Number of times observed\n   * @returns Severity level\n   */\n  private calculateSeverity(\n    metric: PerformanceMetric,\n    threshold: number,\n    occurrenceCount: number\n  ): BottleneckSeverity {\n    const deviation = Math.abs((metric.value - threshold) / threshold);\n\n    // Adjust severity based on deviation and occurrence frequency\n    if (deviation >= 0.5 || occurrenceCount >= 10) {\n      return BottleneckSeverity.CRITICAL;\n    } else if (deviation >= 0.3 || occurrenceCount >= 5) {\n      return BottleneckSeverity.HIGH;\n    } else if (deviation >= 0.15 || occurrenceCount >= 3) {\n      return BottleneckSeverity.MEDIUM;\n    } else {\n      return BottleneckSeverity.LOW;\n    }\n  }\n\n  /**\n   * Generate impact description for a bottleneck\n   *\n   * @param component Component name\n   * @param metricType Metric type\n   * @param severity Severity level\n   * @returns Impact description\n   */\n  private generateImpactDescription(\n    component: string,\n    metricType: MetricType,\n    severity: BottleneckSeverity\n  ): string {\n    const impactMap: Record<MetricType, string> = {\n      [MetricType.CPU]:\n        \"High CPU usage may cause slow response times and task delays\",\n      [MetricType.MEMORY]:\n        \"High memory usage may cause system instability and crashes\",\n      [MetricType.NETWORK]: \"Network congestion may cause communication delays\",\n      [MetricType.LATENCY]:\n        \"High latency degrades user experience and system responsiveness\",\n      [MetricType.THROUGHPUT]:\n        \"Low throughput limits system capacity and request handling\",\n      [MetricType.ERROR_RATE]: \"High error rate indicates reliability issues\",\n      [MetricType.CACHE_HIT_RATE]:\n        \"Low cache hit rate increases backend load and latency\",\n    };\n\n    const baseImpact =\n      impactMap[metricType] ?? \"Performance degradation detected\";\n    const severityPrefix =\n      severity === BottleneckSeverity.CRITICAL ||\n      severity === BottleneckSeverity.HIGH\n        ? \"URGENT: \"\n        : \"\";\n\n    return `${severityPrefix}${baseImpact} in ${component}`;\n  }\n\n  /**\n   * Group metrics by component\n   *\n   * @param metrics Performance metrics\n   * @returns Map of component to metrics\n   */\n  private groupMetricsByComponent(\n    metrics: PerformanceMetric[]\n  ): Map<string, PerformanceMetric[]> {\n    const grouped = new Map<string, PerformanceMetric[]>();\n\n    for (const metric of metrics) {\n      const component = metric.source;\n      const componentMetrics = grouped.get(component) ?? [];\n      componentMetrics.push(metric);\n      grouped.set(component, componentMetrics);\n    }\n\n    return grouped;\n  }\n}\n"
    },
    "src/optimization/PerformanceMonitor.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "src/optimization/PerformanceMonitor.ts@202:27-205:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 206
            },
            "start": {
              "column": 28,
              "line": 203
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@207:39-209:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 210
            },
            "start": {
              "column": 40,
              "line": 208
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@219:27-222:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 223
            },
            "start": {
              "column": 28,
              "line": 220
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@224:48-229:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 230
            },
            "start": {
              "column": 49,
              "line": 225
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@226:8-226:53\nArithmeticOperator: Date.now() + this.config.autoCleanOlderThanMs",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + this.config.autoCleanOlderThanMs",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 54,
              "line": 227
            },
            "start": {
              "column": 9,
              "line": 227
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@55:41-55:43\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 44,
              "line": 56
            },
            "start": {
              "column": 42,
              "line": 56
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@60:29-60:49\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 50,
              "line": 61
            },
            "start": {
              "column": 30,
              "line": 61
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@77:21-77:50\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 51,
              "line": 78
            },
            "start": {
              "column": 22,
              "line": 78
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@91:21-91:50\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 51,
              "line": 92
            },
            "start": {
              "column": 22,
              "line": 92
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@173:26-173:47\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 48,
              "line": 174
            },
            "start": {
              "column": 27,
              "line": 174
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@211:21-211:44\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 45,
              "line": 212
            },
            "start": {
              "column": 22,
              "line": 212
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@59:62-62:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'enableAutoCleanup')\n    at PerformanceMonitor.start (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/PerformanceMonitor.ts:133:120)\n    at RuntimeOptimizer.initialize (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:128:37)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:41:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 48,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 63
            },
            "start": {
              "column": 63,
              "line": 60
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@61:18-61:50\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 5\nReceived: 10\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:95:45)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 48,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "93"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 62
            },
            "start": {
              "column": 19,
              "line": 62
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@67:31-81:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   55.13519347809614\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 30,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 82
            },
            "start": {
              "column": 32,
              "line": 68
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@69:8-69:25\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 30,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 70
            },
            "start": {
              "column": 9,
              "line": 70
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@69:27-72:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "105"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 73
            },
            "start": {
              "column": 28,
              "line": 70
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@69:8-69:25\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 30,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 70
            },
            "start": {
              "column": 9,
              "line": 70
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@74:8-74:37\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   24.297884906721894\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 30,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 75
            },
            "start": {
              "column": 9,
              "line": 75
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@74:8-74:37\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   73.70448182111303\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 30,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 75
            },
            "start": {
              "column": 9,
              "line": 75
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@74:39-76:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   20.737873655743027\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 30,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 77
            },
            "start": {
              "column": 40,
              "line": 75
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@77:52-80:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   101.23275844006464\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 30,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 81
            },
            "start": {
              "column": 53,
              "line": 78
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@86:30-92:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 38,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 93
            },
            "start": {
              "column": 31,
              "line": 87
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@87:8-87:25\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 38,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 88
            },
            "start": {
              "column": 9,
              "line": 88
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@87:8-87:25\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   25.095397083284357\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 38,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 88
            },
            "start": {
              "column": 9,
              "line": 88
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@87:27-90:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 24,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 91
            },
            "start": {
              "column": 28,
              "line": 88
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@99:63-109:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 26,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "108",
            "109"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 110
            },
            "start": {
              "column": 64,
              "line": 100
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@100:36-108:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 26,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "108",
            "109"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 109
            },
            "start": {
              "column": 37,
              "line": 101
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@105:10-105:54\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 26,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "108",
            "109"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 106
            },
            "start": {
              "column": 11,
              "line": 106
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@105:10-105:54\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 5\nReceived: 10\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:95:45)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 26,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "93"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "108",
            "109"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 106
            },
            "start": {
              "column": 11,
              "line": 106
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@105:10-105:54\nEqualityOperator: this.metrics.length >= this.config.maxMetrics",
          "mutatorName": "EqualityOperator",
          "replacement": "this.metrics.length >= this.config.maxMetrics",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 5\nReceived: 4\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:95:45)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 26,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "93"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "108",
            "109"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 106
            },
            "start": {
              "column": 11,
              "line": 106
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@105:56-107:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 5\nReceived: 10\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:95:45)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "93"
          ],
          "coveredBy": [
            "93"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 108
            },
            "start": {
              "column": 57,
              "line": 106
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@105:10-105:54\nEqualityOperator: this.metrics.length <= this.config.maxMetrics",
          "mutatorName": "EqualityOperator",
          "replacement": "this.metrics.length <= this.config.maxMetrics",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 26,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "108",
            "109"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 106
            },
            "start": {
              "column": 11,
              "line": 106
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@124:37-135:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nMatcher error: received value must have a length property whose value must be a number\n\nReceived has value: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:134:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 21,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "94"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "94",
            "95",
            "107",
            "115",
            "116",
            "118",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 136
            },
            "start": {
              "column": 38,
              "line": 125
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@123:34-136:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: metrics is not iterable\n    at BottleneckDetector.groupMetricsByComponent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:439:28)\n    at BottleneckDetector.detectBottlenecks (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:120:39)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:252:57)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:76:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 21,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "94",
            "95",
            "107",
            "115",
            "116",
            "118",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 137
            },
            "start": {
              "column": 35,
              "line": 124
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@125:13-134:8\nMethodExpression: this.metrics",
          "mutatorName": "MethodExpression",
          "replacement": "this.metrics",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 3\nReceived array:  [{\"source\": \"test\", \"timestamp\": 2025-10-15T07:28:38.382Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 50}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:29:38.382Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 75}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:30:38.382Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 90}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:134:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 21,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "94"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "94",
            "95",
            "107",
            "115",
            "116",
            "118",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 9,
              "line": 135
            },
            "start": {
              "column": 14,
              "line": 126
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@125:45-134:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 135
            },
            "start": {
              "column": 46,
              "line": 126
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@127:10-127:70\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   59.292824901308684\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 128
            },
            "start": {
              "column": 11,
              "line": 128
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@127:10-127:70\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   163.2871419453243\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 128
            },
            "start": {
              "column": 11,
              "line": 128
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@57:24-57:29\nBooleanLiteral: true",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "status": "Timeout",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 58
            },
            "start": {
              "column": 25,
              "line": 58
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@127:10-127:70\nLogicalOperator: metric.timestamp >= startTime || metric.timestamp <= endTime",
          "mutatorName": "LogicalOperator",
          "replacement": "metric.timestamp >= startTime || metric.timestamp <= endTime",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 3\nReceived array:  [{\"source\": \"test\", \"timestamp\": 2025-10-15T07:28:53.678Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 50}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:29:53.678Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 75}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:30:53.678Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 90}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:134:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "94"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 128
            },
            "start": {
              "column": 11,
              "line": 128
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@127:10-127:39\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   77.64097333297664\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 128
            },
            "start": {
              "column": 11,
              "line": 128
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@127:10-127:39\nEqualityOperator: metric.timestamp > startTime",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.timestamp > startTime",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 1\nReceived array:  [{\"source\": \"test\", \"timestamp\": 2025-10-15T07:30:55.706Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 90}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:134:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "94"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 128
            },
            "start": {
              "column": 11,
              "line": 128
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@127:43-127:70\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 128
            },
            "start": {
              "column": 44,
              "line": 128
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@127:43-127:70\nEqualityOperator: metric.timestamp > endTime",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.timestamp > endTime",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:134:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "94"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 128
            },
            "start": {
              "column": 44,
              "line": 128
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@127:43-127:70\nEqualityOperator: metric.timestamp < endTime",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.timestamp < endTime",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 1\nReceived array:  [{\"source\": \"test\", \"timestamp\": 2025-10-15T07:29:55.962Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 75}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:134:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "94"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 128
            },
            "start": {
              "column": 44,
              "line": 128
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@127:10-127:39\nEqualityOperator: metric.timestamp < startTime",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.timestamp < startTime",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 128
            },
            "start": {
              "column": 11,
              "line": 128
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@129:12-129:23\nBooleanLiteral: metricType",
          "mutatorName": "BooleanLiteral",
          "replacement": "metricType",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 130
            },
            "start": {
              "column": 13,
              "line": 130
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@133:15-133:56\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 2\nReceived array:  [{\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:11.099Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 75}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:11.099Z, \"type\": \"memory\", \"unit\": \"%\", \"value\": 80}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:165:26)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "95"
          ],
          "coveredBy": [
            "95"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 134
            },
            "start": {
              "column": 16,
              "line": 134
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@129:12-129:23\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   81.8034500898689\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 130
            },
            "start": {
              "column": 13,
              "line": 130
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@129:12-129:23\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   93.11093364581808\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94",
            "95"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 130
            },
            "start": {
              "column": 13,
              "line": 130
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@133:15-133:56\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:165:26)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "95"
          ],
          "coveredBy": [
            "95"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 134
            },
            "start": {
              "column": 16,
              "line": 134
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@133:30-133:56\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 2\nReceived array:  [{\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:11.588Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 75}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:11.588Z, \"type\": \"memory\", \"unit\": \"%\", \"value\": 80}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:165:26)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "95"
          ],
          "coveredBy": [
            "95"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 134
            },
            "start": {
              "column": 31,
              "line": 134
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@133:15-133:56\nLogicalOperator: inTimeRange || metric.type === metricType",
          "mutatorName": "LogicalOperator",
          "replacement": "inTimeRange || metric.type === metricType",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 2\nReceived array:  [{\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:11.576Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 75}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:11.576Z, \"type\": \"memory\", \"unit\": \"%\", \"value\": 80}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:165:26)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "95"
          ],
          "coveredBy": [
            "95"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 134
            },
            "start": {
              "column": 16,
              "line": 134
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@133:30-133:56\nEqualityOperator: metric.type !== metricType",
          "mutatorName": "EqualityOperator",
          "replacement": "metric.type !== metricType",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"cpu\"\nReceived: \"memory\"\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:166:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "95"
          ],
          "coveredBy": [
            "95"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 134
            },
            "start": {
              "column": 31,
              "line": 134
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@148:34-159:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nMatcher error: received value must have a length property whose value must be a number\n\nReceived has value: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:183:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "96"
          ],
          "coveredBy": [
            "96",
            "97",
            "98",
            "108"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 160
            },
            "start": {
              "column": 35,
              "line": 149
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@149:37-158:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nMatcher error: received value must have a length property whose value must be a number\n\nReceived has value: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:183:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "96"
          ],
          "coveredBy": [
            "96",
            "97",
            "98",
            "108"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 159
            },
            "start": {
              "column": 38,
              "line": 150
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@152:10-152:20\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 3\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:183:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "96"
          ],
          "coveredBy": [
            "96",
            "97",
            "98",
            "108"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 153
            },
            "start": {
              "column": 11,
              "line": 153
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@152:10-152:20\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 50\nReceived: 60\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:216:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "96",
            "97",
            "98",
            "108"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 153
            },
            "start": {
              "column": 11,
              "line": 153
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@152:22-154:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 50\nReceived: 60\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:216:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 155
            },
            "start": {
              "column": 23,
              "line": 153
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@153:19-153:68\nMethodExpression: this.metrics",
          "mutatorName": "MethodExpression",
          "replacement": "this.metrics",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 50\nReceived: 60\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:216:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97"
          ],
          "location": {
            "end": {
              "column": 69,
              "line": 154
            },
            "start": {
              "column": 20,
              "line": 154
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@129:25-131:9\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 12,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "94"
          ],
          "location": {
            "end": {
              "column": 10,
              "line": 132
            },
            "start": {
              "column": 26,
              "line": 130
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@153:39-153:67\nArrowFunction: () => undefined",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:215:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 154
            },
            "start": {
              "column": 40,
              "line": 154
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@153:46-153:67\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:215:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 154
            },
            "start": {
              "column": 47,
              "line": 154
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@153:46-153:67\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 50\nReceived: 60\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:216:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 154
            },
            "start": {
              "column": 47,
              "line": 154
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@157:13-157:35\nMethodExpression: filtered",
          "mutatorName": "MethodExpression",
          "replacement": "filtered",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 3\nReceived length: 5\nReceived array:  [{\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:12.837Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 0}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:12.837Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 10}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:12.837Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 20}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:12.837Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 30}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:12.837Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 40}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:183:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "96"
          ],
          "coveredBy": [
            "96",
            "97",
            "98",
            "108"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 158
            },
            "start": {
              "column": 14,
              "line": 158
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@153:46-153:67\nEqualityOperator: m.type !== metricType",
          "mutatorName": "EqualityOperator",
          "replacement": "m.type !== metricType",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 1\nReceived array:  [{\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:12.841Z, \"type\": \"memory\", \"unit\": \"%\", \"value\": 60}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:215:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "97"
          ],
          "coveredBy": [
            "97"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 154
            },
            "start": {
              "column": 47,
              "line": 154
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@157:28-157:34\nUnaryOperator: +count",
          "mutatorName": "UnaryOperator",
          "replacement": "+count",
          "statusReason": "Error: expect(received).toHaveLength(expected)\n\nExpected length: 3\nReceived length: 2\nReceived array:  [{\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:12.845Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 30}, {\"source\": \"test\", \"timestamp\": 2025-10-15T07:31:12.845Z, \"type\": \"cpu\", \"unit\": \"%\", \"value\": 40}]\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:183:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "96"
          ],
          "coveredBy": [
            "96",
            "97",
            "98",
            "108"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 158
            },
            "start": {
              "column": 29,
              "line": 158
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@166:53-179:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 2\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:247:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "98"
          ],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 180
            },
            "start": {
              "column": 54,
              "line": 167
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@169:41-169:72\nArrowFunction: () => undefined",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:247:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "98"
          ],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 170
            },
            "start": {
              "column": 42,
              "line": 170
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@167:36-178:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 2\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:247:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "98"
          ],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 179
            },
            "start": {
              "column": 37,
              "line": 168
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@169:21-169:73\nMethodExpression: this.metrics",
          "mutatorName": "MethodExpression",
          "replacement": "this.metrics",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 2\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:247:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "98"
          ],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 74,
              "line": 170
            },
            "start": {
              "column": 22,
              "line": 170
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@169:48-169:72\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 2\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:247:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "98"
          ],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 170
            },
            "start": {
              "column": 49,
              "line": 170
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@169:48-169:72\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:247:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "98"
          ],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 170
            },
            "start": {
              "column": 49,
              "line": 170
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@169:48-169:72\nEqualityOperator: m.timestamp < olderThan",
          "mutatorName": "EqualityOperator",
          "replacement": "m.timestamp < olderThan",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 75\nReceived: 50\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:250:34)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "98"
          ],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 170
            },
            "start": {
              "column": 49,
              "line": 170
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@169:48-169:72\nEqualityOperator: m.timestamp > olderThan",
          "mutatorName": "EqualityOperator",
          "replacement": "m.timestamp > olderThan",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 73,
              "line": 170
            },
            "start": {
              "column": 49,
              "line": 170
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@170:27-170:60\nArithmeticOperator: beforeCount + this.metrics.length",
          "mutatorName": "ArithmeticOperator",
          "replacement": "beforeCount + this.metrics.length",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 171
            },
            "start": {
              "column": 28,
              "line": 171
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@172:10-172:26\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 173
            },
            "start": {
              "column": 11,
              "line": 173
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@172:10-172:26\nEqualityOperator: clearedCount >= 0",
          "mutatorName": "EqualityOperator",
          "replacement": "clearedCount >= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 173
            },
            "start": {
              "column": 11,
              "line": 173
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@172:10-172:26\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 173
            },
            "start": {
              "column": 11,
              "line": 173
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@172:28-177:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "98",
            "100"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 178
            },
            "start": {
              "column": 29,
              "line": 173
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@172:10-172:26\nEqualityOperator: clearedCount <= 0",
          "mutatorName": "EqualityOperator",
          "replacement": "clearedCount <= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "98",
            "99",
            "100"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 173
            },
            "start": {
              "column": 11,
              "line": 173
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@173:49-176:9\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "98",
            "100"
          ],
          "location": {
            "end": {
              "column": 10,
              "line": 177
            },
            "start": {
              "column": 50,
              "line": 174
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@191:40-193:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'enableAutoCleanup')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:282:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "100"
          ],
          "coveredBy": [
            "100",
            "101",
            "102"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 194
            },
            "start": {
              "column": 41,
              "line": 192
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@184:27-186:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nMatcher error: received value must be a number or bigint\n\nReceived has value: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:103:39)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "117"
          ],
          "coveredBy": [
            "68",
            "91",
            "92",
            "93",
            "98",
            "99",
            "100",
            "109",
            "110",
            "111",
            "112",
            "117",
            "120"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 187
            },
            "start": {
              "column": 28,
              "line": 185
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@192:11-192:29\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:282:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "100"
          ],
          "coveredBy": [
            "100",
            "101",
            "102"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 193
            },
            "start": {
              "column": 12,
              "line": 193
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@198:64-212:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 5000\nReceived: 10000\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:333:33)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "102"
          ],
          "coveredBy": [
            "102"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 213
            },
            "start": {
              "column": 65,
              "line": 199
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@199:18-199:47\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 5000\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:333:33)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "102"
          ],
          "coveredBy": [
            "102"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 200
            },
            "start": {
              "column": 19,
              "line": 200
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@202:8-202:25\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "102"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 203
            },
            "start": {
              "column": 9,
              "line": 203
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@202:8-202:25\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "102"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 203
            },
            "start": {
              "column": 9,
              "line": 203
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@207:8-207:37\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "102"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 208
            },
            "start": {
              "column": 9,
              "line": 208
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@207:8-207:37\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "102"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 208
            },
            "start": {
              "column": 9,
              "line": 208
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@237:66-250:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: metrics is not iterable\n    at BottleneckDetector.groupMetricsByComponent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:439:28)\n    at BottleneckDetector.detectBottlenecks (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:120:39)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:252:57)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:76:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 34,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "107",
            "108",
            "109",
            "115",
            "116",
            "118",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 251
            },
            "start": {
              "column": 67,
              "line": 238
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@219:8-219:25\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   81.9328720316855\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 30,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 220
            },
            "start": {
              "column": 9,
              "line": 220
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@217:35-230:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   88.24131769837203\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 30,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 231
            },
            "start": {
              "column": 36,
              "line": 218
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@219:8-219:25\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   88.8572598942772\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 30,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "100",
            "103",
            "104",
            "105",
            "106",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 220
            },
            "start": {
              "column": 9,
              "line": 220
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@239:29-241:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Hit limit reached (12827/12700)",
          "status": "Timeout",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "66",
            "109"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 242
            },
            "start": {
              "column": 30,
              "line": 240
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@239:11-239:27\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 34,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "107",
            "108",
            "109",
            "115",
            "116",
            "118",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 240
            },
            "start": {
              "column": 12,
              "line": 240
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@243:23-243:27\nBooleanLiteral: false",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   57.8441300015137\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 34,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "107",
            "108",
            "109",
            "115",
            "116",
            "118",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 244
            },
            "start": {
              "column": 24,
              "line": 244
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@245:8-247:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: metrics is not iterable\n    at BottleneckDetector.groupMetricsByComponent (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:439:28)\n    at BottleneckDetector.detectBottlenecks (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/BottleneckDetector.ts:120:39)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:252:57)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:76:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 34,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "107",
            "108",
            "109",
            "115",
            "116",
            "118",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 248
            },
            "start": {
              "column": 9,
              "line": 246
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@240:24-240:59\nArrowFunction: () => undefined",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Timeout",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "66",
            "109"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 241
            },
            "start": {
              "column": 25,
              "line": 241
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@247:14-249:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Timeout",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "107",
            "108",
            "109",
            "115",
            "116",
            "118",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 250
            },
            "start": {
              "column": 15,
              "line": 248
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@248:25-248:30\nBooleanLiteral: true",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "status": "Timeout",
          "static": false,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "107",
            "108",
            "109",
            "115",
            "116",
            "118",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 249
            },
            "start": {
              "column": 26,
              "line": 249
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@36:49-41:1\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nMatcher error: received value must be a number or bigint\n\nReceived has value: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/PerformanceMonitor.test.ts:321:33)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 48,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [
            "101"
          ],
          "coveredBy": [
            "101"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 42
            },
            "start": {
              "column": 50,
              "line": 37
            }
          }
        },
        {
          "id": "src/optimization/PerformanceMonitor.ts@39:21-39:25\nBooleanLiteral: false",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 48,
          "relativeFileName": "src/optimization/PerformanceMonitor.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 26,
              "line": 40
            },
            "start": {
              "column": 22,
              "line": 40
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Performance Monitor for Runtime Optimization Engine\n *\n * Collects and stores performance metrics with minimal overhead.\n * Implements circular buffer for efficient memory management.\n *\n * @author @darianrosebrook\n */\n\nimport { Logger } from \"@/observability/Logger\";\nimport {\n  MetricType,\n  type IPerformanceMonitor,\n  type PerformanceMetric,\n} from \"@/types/optimization-types\";\n\n/**\n * Configuration for Performance Monitor\n */\nexport interface PerformanceMonitorConfig {\n  /** Maximum metrics to store (circular buffer size) */\n  maxMetrics: number;\n\n  /** Automatically clean metrics older than (ms) */\n  autoCleanOlderThanMs: number;\n\n  /** Enable automatic cleanup */\n  enableAutoCleanup: boolean;\n\n  /** Cleanup interval (ms) */\n  cleanupIntervalMs: number;\n}\n\n/**\n * Default configuration\n */\nconst DEFAULT_CONFIG: PerformanceMonitorConfig = {\n  maxMetrics: 10000,\n  autoCleanOlderThanMs: 3600000, // 1 hour\n  enableAutoCleanup: true,\n  cleanupIntervalMs: 300000, // 5 minutes\n};\n\n/**\n * Performance Monitor\n *\n * Implements efficient metric collection with:\n * - Circular buffer for fixed memory usage\n * - Automatic cleanup of old metrics\n * - Fast queries by time range\n * - Minimal locking for concurrent access\n */\nexport class PerformanceMonitor implements IPerformanceMonitor {\n  private logger: Logger;\n  private config: PerformanceMonitorConfig;\n  private metrics: PerformanceMetric[] = [];\n  private cleanupTimer?: ReturnType<typeof setInterval>;\n  private metricsLock = false;\n\n  constructor(config: Partial<PerformanceMonitorConfig> = {}) {\n    this.logger = new Logger(\"PerformanceMonitor\");\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  /**\n   * Start the performance monitor\n   */\n  async start(): Promise<void> {\n    // Clear any existing timer first to prevent multiple timers\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n      this.cleanupTimer = undefined;\n    }\n\n    if (this.config.enableAutoCleanup) {\n      this.startAutoCleanup();\n    }\n    this.logger.info(\"Performance monitor started\", {\n      maxMetrics: this.config.maxMetrics,\n      autoCleanup: this.config.enableAutoCleanup,\n    });\n  }\n\n  /**\n   * Stop the performance monitor\n   */\n  async stop(): Promise<void> {\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n      this.cleanupTimer = undefined;\n    }\n    this.logger.info(\"Performance monitor stopped\");\n  }\n\n  /**\n   * Record a performance metric\n   *\n   * @param metric Performance metric to record\n   */\n  async recordMetric(metric: PerformanceMetric): Promise<void> {\n    await this.withLock(async () => {\n      // Add metric to buffer\n      this.metrics.push(metric);\n\n      // If buffer is full, remove oldest metric (circular buffer)\n      if (this.metrics.length > this.config.maxMetrics) {\n        this.metrics.shift();\n      }\n    });\n  }\n\n  /**\n   * Get metrics for a time window\n   *\n   * @param startTime Window start time\n   * @param endTime Window end time\n   * @param metricType Optional metric type filter\n   * @returns Metrics within time window\n   */\n  async getMetrics(\n    startTime: Date,\n    endTime: Date,\n    metricType?: MetricType\n  ): Promise<PerformanceMetric[]> {\n    return this.withLock(async () => {\n      return this.metrics.filter((metric) => {\n        const inTimeRange =\n          metric.timestamp >= startTime && metric.timestamp <= endTime;\n\n        if (!metricType) {\n          return inTimeRange;\n        }\n\n        return inTimeRange && metric.type === metricType;\n      });\n    });\n  }\n\n  /**\n   * Get latest metrics\n   *\n   * @param count Number of metrics to retrieve\n   * @param metricType Optional metric type filter\n   * @returns Latest metrics\n   */\n  async getLatestMetrics(\n    count: number,\n    metricType?: MetricType\n  ): Promise<PerformanceMetric[]> {\n    return this.withLock(async () => {\n      let filtered = this.metrics;\n\n      if (metricType) {\n        filtered = this.metrics.filter((m) => m.type === metricType);\n      }\n\n      // Return last N metrics\n      return filtered.slice(-count);\n    });\n  }\n\n  /**\n   * Clear metrics older than specified date\n   *\n   * @param olderThan Clear metrics older than this date\n   */\n  async clearMetrics(olderThan: Date): Promise<void> {\n    await this.withLock(async () => {\n      const beforeCount = this.metrics.length;\n      this.metrics = this.metrics.filter((m) => m.timestamp >= olderThan);\n      const clearedCount = beforeCount - this.metrics.length;\n\n      if (clearedCount > 0) {\n        this.logger.debug(\"Cleared old metrics\", {\n          clearedCount,\n          remainingCount: this.metrics.length,\n        });\n      }\n    });\n  }\n\n  /**\n   * Get current metric count\n   */\n  getMetricCount(): number {\n    return this.metrics.length;\n  }\n\n  /**\n   * Get configuration\n   */\n  getConfig(): PerformanceMonitorConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(config: Partial<PerformanceMonitorConfig>): void {\n    this.config = { ...this.config, ...config };\n\n    // Restart auto-cleanup if needed\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n      this.cleanupTimer = undefined;\n    }\n\n    if (this.config.enableAutoCleanup) {\n      this.startAutoCleanup();\n    }\n\n    this.logger.info(\"Configuration updated\", this.config);\n  }\n\n  /**\n   * Start automatic cleanup\n   */\n  private startAutoCleanup(): void {\n    // Clear any existing timer first\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n      this.cleanupTimer = undefined;\n    }\n\n    this.cleanupTimer = setInterval(async () => {\n      const cutoffTime = new Date(\n        Date.now() - this.config.autoCleanOlderThanMs\n      );\n      await this.clearMetrics(cutoffTime);\n    }, this.config.cleanupIntervalMs);\n  }\n\n  /**\n   * Simple lock mechanism for concurrent access\n   *\n   * @param fn Function to execute with lock\n   */\n  private async withLock<T>(fn: () => T | Promise<T>): Promise<T> {\n    // Wait for lock to be available\n    while (this.metricsLock) {\n      await new Promise((resolve) => setTimeout(resolve, 1));\n    }\n\n    this.metricsLock = true;\n\n    try {\n      return await fn();\n    } finally {\n      this.metricsLock = false;\n    }\n  }\n}\n"
    },
    "src/optimization/RuntimeOptimizer.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "src/optimization/RuntimeOptimizer.ts@103:28-106:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 107
            },
            "start": {
              "column": 29,
              "line": 104
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@112:22-114:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 115
            },
            "start": {
              "column": 23,
              "line": 113
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@113:45-113:54\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 55,
              "line": 114
            },
            "start": {
              "column": 46,
              "line": 114
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@252:20-254:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 255
            },
            "start": {
              "column": 21,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@260:27-262:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 263
            },
            "start": {
              "column": 28,
              "line": 261
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@265:43-267:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 268
            },
            "start": {
              "column": 44,
              "line": 266
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@284:31-284:62\nArithmeticOperator: this.analysisHistory.length + 1",
          "mutatorName": "ArithmeticOperator",
          "replacement": "this.analysisHistory.length + 1",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 63,
              "line": 285
            },
            "start": {
              "column": 32,
              "line": 285
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@361:6-371:10\nConditionalExpression: case MetricType.CACHE_HIT_RATE:",
          "mutatorName": "ConditionalExpression",
          "replacement": "case MetricType.CACHE_HIT_RATE:",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 11,
              "line": 372
            },
            "start": {
              "column": 7,
              "line": 362
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@362:15-371:9\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 10,
              "line": 372
            },
            "start": {
              "column": 16,
              "line": 363
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@385:6-386:20\nConditionalExpression: default:",
          "mutatorName": "ConditionalExpression",
          "replacement": "default:",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 21,
              "line": 387
            },
            "start": {
              "column": 7,
              "line": 386
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@403:39-408:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 409
            },
            "start": {
              "column": 40,
              "line": 404
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@405:27-405:55\nLogicalOperator: byCacheId.get(cacheId) && []",
          "mutatorName": "LogicalOperator",
          "replacement": "byCacheId.get(cacheId) && []",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 56,
              "line": 406
            },
            "start": {
              "column": 28,
              "line": 406
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@410:53-429:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 430
            },
            "start": {
              "column": 54,
              "line": 411
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@411:10-411:35\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 36,
              "line": 412
            },
            "start": {
              "column": 11,
              "line": 412
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@411:10-411:35\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 36,
              "line": 412
            },
            "start": {
              "column": 11,
              "line": 412
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@411:10-411:35\nEqualityOperator: cacheMetrics.length !== 0",
          "mutatorName": "EqualityOperator",
          "replacement": "cacheMetrics.length !== 0",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 36,
              "line": 412
            },
            "start": {
              "column": 11,
              "line": 412
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@414:8-414:79\nArithmeticOperator: cacheMetrics.reduce((sum, m) => sum + m.value, 0) * cacheMetrics.length",
          "mutatorName": "ArithmeticOperator",
          "replacement": "cacheMetrics.reduce((sum, m) => sum + m.value, 0) * cacheMetrics.length",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 80,
              "line": 415
            },
            "start": {
              "column": 9,
              "line": 415
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@414:28-414:53\nArrowFunction: () => undefined",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 54,
              "line": 415
            },
            "start": {
              "column": 29,
              "line": 415
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@414:40-414:53\nArithmeticOperator: sum - m.value",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - m.value",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 54,
              "line": 415
            },
            "start": {
              "column": 41,
              "line": 415
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@416:22-428:7\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 429
            },
            "start": {
              "column": 23,
              "line": 417
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@419:25-419:62\nArithmeticOperator: cacheMetrics.length * hitRate * 100",
          "mutatorName": "ArithmeticOperator",
          "replacement": "cacheMetrics.length * hitRate * 100",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 63,
              "line": 420
            },
            "start": {
              "column": 26,
              "line": 420
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@419:26-419:55\nArithmeticOperator: cacheMetrics.length / hitRate",
          "mutatorName": "ArithmeticOperator",
          "replacement": "cacheMetrics.length / hitRate",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 56,
              "line": 420
            },
            "start": {
              "column": 27,
              "line": 420
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@420:27-420:72\nArithmeticOperator: cacheMetrics.length * (100 - hitRate) * 100",
          "mutatorName": "ArithmeticOperator",
          "replacement": "cacheMetrics.length * (100 - hitRate) * 100",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 73,
              "line": 421
            },
            "start": {
              "column": 28,
              "line": 421
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@420:28-420:65\nArithmeticOperator: cacheMetrics.length / (100 - hitRate)",
          "mutatorName": "ArithmeticOperator",
          "replacement": "cacheMetrics.length / (100 - hitRate)",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 66,
              "line": 421
            },
            "start": {
              "column": 29,
              "line": 421
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@420:51-420:64\nArithmeticOperator: 100 + hitRate",
          "mutatorName": "ArithmeticOperator",
          "replacement": "100 + hitRate",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 65,
              "line": 421
            },
            "start": {
              "column": 52,
              "line": 421
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@427:36-427:59\nArithmeticOperator: cacheMetrics.length + 1",
          "mutatorName": "ArithmeticOperator",
          "replacement": "cacheMetrics.length + 1",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 60,
              "line": 428
            },
            "start": {
              "column": 37,
              "line": 428
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@480:39-482:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "NoCoverage",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 483
            },
            "start": {
              "column": 40,
              "line": 481
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@62:52-62:54\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 55,
              "line": 63
            },
            "start": {
              "column": 53,
              "line": 63
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@65:29-65:47\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 48,
              "line": 66
            },
            "start": {
              "column": 30,
              "line": 66
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@79:21-79:52\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 53,
              "line": 80
            },
            "start": {
              "column": 22,
              "line": 80
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@91:23-91:58\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 59,
              "line": 92
            },
            "start": {
              "column": 24,
              "line": 92
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@96:23-96:65\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 66,
              "line": 97
            },
            "start": {
              "column": 24,
              "line": 97
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@113:26-113:43\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 44,
              "line": 114
            },
            "start": {
              "column": 27,
              "line": 114
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@117:21-117:48\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 49,
              "line": 118
            },
            "start": {
              "column": 22,
              "line": 118
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@136:21-136:48\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 49,
              "line": 137
            },
            "start": {
              "column": 22,
              "line": 137
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@166:8-166:10\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 11,
              "line": 167
            },
            "start": {
              "column": 9,
              "line": 167
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@171:8-171:10\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 11,
              "line": 172
            },
            "start": {
              "column": 9,
              "line": 172
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@195:22-195:42\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 43,
              "line": 196
            },
            "start": {
              "column": 23,
              "line": 196
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@269:21-269:44\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 45,
              "line": 270
            },
            "start": {
              "column": 22,
              "line": 270
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@310:58-310:60\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 61,
              "line": 311
            },
            "start": {
              "column": 59,
              "line": 311
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@343:17-343:37\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 38,
              "line": 344
            },
            "start": {
              "column": 18,
              "line": 344
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@344:23-344:103\nStringLiteral: ``",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 104,
              "line": 345
            },
            "start": {
              "column": 24,
              "line": 345
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@345:26-345:75\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 76,
              "line": 346
            },
            "start": {
              "column": 27,
              "line": 346
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@347:36-347:46\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 47,
              "line": 348
            },
            "start": {
              "column": 37,
              "line": 348
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@354:17-354:40\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 41,
              "line": 355
            },
            "start": {
              "column": 18,
              "line": 355
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@355:23-355:106\nStringLiteral: ``",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 107,
              "line": 356
            },
            "start": {
              "column": 24,
              "line": 356
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@356:26-356:69\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 70,
              "line": 357
            },
            "start": {
              "column": 27,
              "line": 357
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@358:36-358:46\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 47,
              "line": 359
            },
            "start": {
              "column": 37,
              "line": 359
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@365:17-365:44\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 45,
              "line": 366
            },
            "start": {
              "column": 18,
              "line": 366
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@366:23-366:105\nStringLiteral: ``",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 106,
              "line": 367
            },
            "start": {
              "column": 24,
              "line": 367
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@368:12-368:72\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 73,
              "line": 369
            },
            "start": {
              "column": 13,
              "line": 369
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@370:36-370:42\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 43,
              "line": 371
            },
            "start": {
              "column": 37,
              "line": 371
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@377:17-377:33\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 34,
              "line": 378
            },
            "start": {
              "column": 18,
              "line": 378
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@378:23-378:103\nStringLiteral: ``",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 104,
              "line": 379
            },
            "start": {
              "column": 24,
              "line": 379
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@380:12-380:68\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 69,
              "line": 381
            },
            "start": {
              "column": 13,
              "line": 381
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@382:36-382:42\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 43,
              "line": 383
            },
            "start": {
              "column": 37,
              "line": 383
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@399:42-399:44\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 45,
              "line": 400
            },
            "start": {
              "column": 43,
              "line": 400
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@405:53-405:55\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 56,
              "line": 406
            },
            "start": {
              "column": 54,
              "line": 406
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@441:13-441:15\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 16,
              "line": 442
            },
            "start": {
              "column": 14,
              "line": 442
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@444:39-444:41\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 42,
              "line": 445
            },
            "start": {
              "column": 40,
              "line": 445
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@449:18-449:51\nStringLiteral: ``",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 52,
              "line": 450
            },
            "start": {
              "column": 19,
              "line": 450
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@450:47-450:49\nArrayDeclaration: [\"Stryker was here\"]",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[\"Stryker was here\"]",
          "statusReason": "Ignored because of excluded mutation \"ArrayDeclaration\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 50,
              "line": 451
            },
            "start": {
              "column": 48,
              "line": 451
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@479:20-479:28\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 29,
              "line": 480
            },
            "start": {
              "column": 21,
              "line": 480
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@481:20-481:31\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 32,
              "line": 482
            },
            "start": {
              "column": 21,
              "line": 482
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@483:20-483:31\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 32,
              "line": 484
            },
            "start": {
              "column": 21,
              "line": 484
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@543:15-543:21\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 22,
              "line": 544
            },
            "start": {
              "column": 16,
              "line": 544
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@545:15-545:23\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 24,
              "line": 546
            },
            "start": {
              "column": 16,
              "line": 546
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@548:15-548:20\nStringLiteral: \"\"",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Ignored because of excluded mutation \"StringLiteral\"",
          "status": "Ignored",
          "static": false,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 21,
              "line": 549
            },
            "start": {
              "column": 16,
              "line": 549
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@59:22-59:27\nBooleanLiteral: true",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:338:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "68"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 60
            },
            "start": {
              "column": 23,
              "line": 60
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@64:62-72:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'start')\n    at RuntimeOptimizer.initialize (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:128:37)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:41:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 73
            },
            "start": {
              "column": 63,
              "line": 65
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@66:18-66:50\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:104:43)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 67
            },
            "start": {
              "column": 19,
              "line": 67
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@67:53-70:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 71
            },
            "start": {
              "column": 54,
              "line": 68
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@69:28-69:60\nArithmeticOperator: this.config.analysisWindowMs / 2",
          "mutatorName": "ArithmeticOperator",
          "replacement": "this.config.analysisWindowMs / 2",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   20.482773055151654\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 70
            },
            "start": {
              "column": 29,
              "line": 70
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@77:36-84:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 25,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 85
            },
            "start": {
              "column": 37,
              "line": 78
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@79:54-83:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   22.147168687783605\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 25,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "115",
            "116",
            "118",
            "119",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 84
            },
            "start": {
              "column": 55,
              "line": 80
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@90:8-90:22\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:40:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "111"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "111",
            "112",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 91
            },
            "start": {
              "column": 9,
              "line": 91
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@89:31-118:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:40:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "111"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "111",
            "112",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 119
            },
            "start": {
              "column": 32,
              "line": 90
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@90:24-93:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "121"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 94
            },
            "start": {
              "column": 25,
              "line": 91
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@90:8-90:22\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 20,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "111",
            "112",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 91
            },
            "start": {
              "column": 9,
              "line": 91
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@95:8-95:28\nBooleanLiteral: this.config.enabled",
          "mutatorName": "BooleanLiteral",
          "replacement": "this.config.enabled",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:338:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "68"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "111",
            "112",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 96
            },
            "start": {
              "column": 9,
              "line": 96
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@95:30-98:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:338:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "68"
          ],
          "coveredBy": [
            "68",
            "120"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 99
            },
            "start": {
              "column": 31,
              "line": 96
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@95:8-95:28\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:40:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "111"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "111",
            "112",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 96
            },
            "start": {
              "column": 9,
              "line": 96
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@95:8-95:28\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:338:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 20,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "68"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "111",
            "112",
            "120",
            "121"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 96
            },
            "start": {
              "column": 9,
              "line": 96
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@100:21-100:25\nBooleanLiteral: false",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   20.415732705805805\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 101
            },
            "start": {
              "column": 22,
              "line": 101
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@103:8-103:26\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 104
            },
            "start": {
              "column": 9,
              "line": 104
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@103:8-103:26\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 104
            },
            "start": {
              "column": 9,
              "line": 104
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@109:49-115:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "67"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 116
            },
            "start": {
              "column": 50,
              "line": 110
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@110:10-112:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "67"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 113
            },
            "start": {
              "column": 11,
              "line": 111
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@123:30-137:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   20.105881445829496\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 138
            },
            "start": {
              "column": 31,
              "line": 124
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@124:8-124:23\nBooleanLiteral: this.isRunning",
          "mutatorName": "BooleanLiteral",
          "replacement": "this.isRunning",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   21.891587089187603\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 125
            },
            "start": {
              "column": 9,
              "line": 125
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@124:25-126:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 13,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "68",
            "110",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 127
            },
            "start": {
              "column": 26,
              "line": 125
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@124:8-124:23\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:49:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "112"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 125
            },
            "start": {
              "column": 9,
              "line": 125
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@124:8-124:23\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   22.901907036572243\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122"
          ],
          "location": {
            "end": {
              "column": 24,
              "line": 125
            },
            "start": {
              "column": 9,
              "line": 125
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@128:8-128:26\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   20.643385060615042\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 129
            },
            "start": {
              "column": 9,
              "line": 129
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@128:8-128:26\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   22.051514247439204\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 129
            },
            "start": {
              "column": 9,
              "line": 129
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@128:28-131:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 132
            },
            "start": {
              "column": 29,
              "line": 129
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@134:21-134:26\nBooleanLiteral: true",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:49:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 18,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "112"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70",
            "111",
            "112",
            "121"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 135
            },
            "start": {
              "column": 22,
              "line": 135
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@142:49-204:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:77:24)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 205
            },
            "start": {
              "column": 50,
              "line": 143
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@148:6-148:56\nArithmeticOperator: windowEnd.getTime() + this.config.analysisWindowMs",
          "mutatorName": "ArithmeticOperator",
          "replacement": "windowEnd.getTime() + this.config.analysisWindowMs",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   33.650529000566785\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 149
            },
            "start": {
              "column": 7,
              "line": 149
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@176:43-185:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:78:36)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 186
            },
            "start": {
              "column": 44,
              "line": 177
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@184:26-184:48\nArithmeticOperator: Date.now() + startTime",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + startTime",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   20.07080396793092\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 185
            },
            "start": {
              "column": 27,
              "line": 185
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@191:8-191:41\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 2\nReceived:    0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:94:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "116"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 192
            },
            "start": {
              "column": 9,
              "line": 192
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@191:43-193:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 6,
              "line": 194
            },
            "start": {
              "column": 44,
              "line": 192
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@191:8-191:41\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 192
            },
            "start": {
              "column": 9,
              "line": 192
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@209:57-220:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:114:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "118"
          ],
          "coveredBy": [
            "118"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 221
            },
            "start": {
              "column": 58,
              "line": 210
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@212:6-212:56\nArithmeticOperator: windowEnd.getTime() + this.config.analysisWindowMs",
          "mutatorName": "ArithmeticOperator",
          "replacement": "windowEnd.getTime() + this.config.analysisWindowMs",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "118"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 213
            },
            "start": {
              "column": 7,
              "line": 213
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@191:8-191:41\nEqualityOperator: this.analysisHistory.length >= 100",
          "mutatorName": "EqualityOperator",
          "replacement": "this.analysisHistory.length >= 100",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   68.72129025160524\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 192
            },
            "start": {
              "column": 9,
              "line": 192
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@225:60-236:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:273:18)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "119"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 237
            },
            "start": {
              "column": 61,
              "line": 226
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@241:40-243:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'enabled')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:57:21)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "113"
          ],
          "coveredBy": [
            "113",
            "114"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 244
            },
            "start": {
              "column": 41,
              "line": 242
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@228:6-228:56\nArithmeticOperator: windowEnd.getTime() + this.config.analysisWindowMs",
          "mutatorName": "ArithmeticOperator",
          "replacement": "windowEnd.getTime() + this.config.analysisWindowMs",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "119"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 229
            },
            "start": {
              "column": 7,
              "line": 229
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@242:11-242:29\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:57:30)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "113"
          ],
          "coveredBy": [
            "113",
            "114"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 243
            },
            "start": {
              "column": 12,
              "line": 243
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@248:64-270:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 2000\nReceived: 1000\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:68:43)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "114"
          ],
          "coveredBy": [
            "114"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 271
            },
            "start": {
              "column": 65,
              "line": 249
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@252:8-252:18\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "114"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 253
            },
            "start": {
              "column": 9,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@252:8-252:18\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "114"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 253
            },
            "start": {
              "column": 9,
              "line": 253
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@257:18-257:47\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 2000\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:68:43)\n    at Promise.then.completed (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/darianrosebrook/Desktop/Projects/agent-agency/node_modules/jest-runner/build/runTest.js:444:34)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "114"
          ],
          "coveredBy": [
            "114"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 258
            },
            "start": {
              "column": 19,
              "line": 258
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@260:8-260:25\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "114"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 261
            },
            "start": {
              "column": 9,
              "line": 261
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@260:8-260:25\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "114"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 261
            },
            "start": {
              "column": 9,
              "line": 261
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@265:8-265:41\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "114"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 266
            },
            "start": {
              "column": 9,
              "line": 266
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@265:8-265:41\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "114"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 266
            },
            "start": {
              "column": 9,
              "line": 266
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@265:8-265:41\nLogicalOperator: wasRunning || this.config.enabled",
          "mutatorName": "LogicalOperator",
          "replacement": "wasRunning || this.config.enabled",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "114"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 266
            },
            "start": {
              "column": 9,
              "line": 266
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@281:4-295:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'isRunning')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:338:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "68"
          ],
          "coveredBy": [
            "68",
            "110",
            "111",
            "112",
            "117",
            "120"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 296
            },
            "start": {
              "column": 5,
              "line": 282
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@283:6-283:37\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "68",
            "110",
            "111",
            "112",
            "117",
            "120"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 284
            },
            "start": {
              "column": 7,
              "line": 284
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@283:6-283:37\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "68",
            "110",
            "111",
            "112",
            "117",
            "120"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 284
            },
            "start": {
              "column": 7,
              "line": 284
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@283:6-283:37\nEqualityOperator: this.analysisHistory.length >= 0",
          "mutatorName": "EqualityOperator",
          "replacement": "this.analysisHistory.length >= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "68",
            "110",
            "111",
            "112",
            "117",
            "120"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 284
            },
            "start": {
              "column": 7,
              "line": 284
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@283:6-283:37\nEqualityOperator: this.analysisHistory.length <= 0",
          "mutatorName": "EqualityOperator",
          "replacement": "this.analysisHistory.length <= 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "68",
            "110",
            "111",
            "112",
            "117",
            "120"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 284
            },
            "start": {
              "column": 7,
              "line": 284
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@287:11-294:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:338:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "68"
          ],
          "coveredBy": [
            "68",
            "110",
            "111",
            "112",
            "117",
            "120"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 295
            },
            "start": {
              "column": 12,
              "line": 288
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@293:32-293:75\nLogicalOperator: latestAnalysis?.recommendations.length && 0",
          "mutatorName": "LogicalOperator",
          "replacement": "latestAnalysis?.recommendations.length && 0",
          "status": "Survived",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "68",
            "110",
            "111",
            "112",
            "117",
            "120"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 294
            },
            "start": {
              "column": 33,
              "line": 294
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@293:32-293:63\nOptionalChaining: latestAnalysis.recommendations",
          "mutatorName": "OptionalChaining",
          "replacement": "latestAnalysis.recommendations",
          "statusReason": "TypeError: Cannot read properties of null (reading 'recommendations')\n    at RuntimeOptimizer.getHealthStatus (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:411:172)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:337:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "68"
          ],
          "coveredBy": [
            "68",
            "110",
            "111",
            "112",
            "117",
            "120"
          ],
          "location": {
            "end": {
              "column": 64,
              "line": 294
            },
            "start": {
              "column": 33,
              "line": 294
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@300:65-302:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:94:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "116"
          ],
          "coveredBy": [
            "116"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 303
            },
            "start": {
              "column": 66,
              "line": 301
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@301:11-301:45\nMethodExpression: this.analysisHistory",
          "mutatorName": "MethodExpression",
          "replacement": "this.analysisHistory",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "116"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 302
            },
            "start": {
              "column": 12,
              "line": 302
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@301:38-301:44\nUnaryOperator: +count",
          "mutatorName": "UnaryOperator",
          "replacement": "+count",
          "statusReason": "Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 2\nReceived:    0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:94:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "116"
          ],
          "coveredBy": [
            "116"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 302
            },
            "start": {
              "column": 39,
              "line": 302
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@191:8-191:41\nEqualityOperator: this.analysisHistory.length <= 100",
          "mutatorName": "EqualityOperator",
          "replacement": "this.analysisHistory.length <= 100",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   21.236838011192486\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 192
            },
            "start": {
              "column": 9,
              "line": 192
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@195:44-201:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   21.838888651648546\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 202
            },
            "start": {
              "column": 45,
              "line": 196
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@312:42-318:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:151:47)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "64"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 319
            },
            "start": {
              "column": 43,
              "line": 313
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@315:10-315:24\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 316
            },
            "start": {
              "column": 11,
              "line": 316
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@309:43-321:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'length')\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:290:51)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:77:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "115"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 322
            },
            "start": {
              "column": 44,
              "line": 310
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@315:10-315:24\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:151:47)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "64"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 316
            },
            "start": {
              "column": 11,
              "line": 316
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@315:26-317:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:151:47)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "64"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 318
            },
            "start": {
              "column": 27,
              "line": 316
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@328:39-388:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:151:47)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "64"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 389
            },
            "start": {
              "column": 40,
              "line": 329
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@329:31-335:5\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 336
            },
            "start": {
              "column": 32,
              "line": 330
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@339:6-348:10\nConditionalExpression: case MetricType.CPU:",
          "mutatorName": "ConditionalExpression",
          "replacement": "case MetricType.CPU:",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 11,
              "line": 349
            },
            "start": {
              "column": 7,
              "line": 340
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@350:6-359:10\nConditionalExpression: case MetricType.MEMORY:",
          "mutatorName": "ConditionalExpression",
          "replacement": "case MetricType.MEMORY:",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "65"
          ],
          "location": {
            "end": {
              "column": 11,
              "line": 360
            },
            "start": {
              "column": 7,
              "line": 351
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@351:15-359:9\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "65"
          ],
          "location": {
            "end": {
              "column": 10,
              "line": 360
            },
            "start": {
              "column": 16,
              "line": 352
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@373:6-383:10\nConditionalExpression: case MetricType.LATENCY:",
          "mutatorName": "ConditionalExpression",
          "replacement": "case MetricType.LATENCY:",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 11,
              "line": 384
            },
            "start": {
              "column": 7,
              "line": 374
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@340:15-348:9\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:155:69)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "64"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 10,
              "line": 349
            },
            "start": {
              "column": 16,
              "line": 341
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@374:15-383:9\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:155:69)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "64"
          ],
          "coveredBy": [
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 10,
              "line": 384
            },
            "start": {
              "column": 16,
              "line": 375
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@395:32-432:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/unit/optimization/RuntimeOptimizer.test.ts:114:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 14,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "118"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "118",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 433
            },
            "start": {
              "column": 33,
              "line": 396
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@397:13-397:49\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 398
            },
            "start": {
              "column": 14,
              "line": 398
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@396:25-398:5\nMethodExpression: metrics",
          "mutatorName": "MethodExpression",
          "replacement": "metrics",
          "status": "Survived",
          "static": false,
          "testsCompleted": 14,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "118",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 399
            },
            "start": {
              "column": 26,
              "line": 397
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@397:6-397:49\nArrowFunction: () => undefined",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 14,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "118",
            "122"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 398
            },
            "start": {
              "column": 7,
              "line": 398
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@397:13-397:49\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 398
            },
            "start": {
              "column": 14,
              "line": 398
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@397:13-397:49\nEqualityOperator: m.type !== MetricType.CACHE_HIT_RATE",
          "mutatorName": "EqualityOperator",
          "replacement": "m.type !== MetricType.CACHE_HIT_RATE",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "66",
            "67",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 398
            },
            "start": {
              "column": 14,
              "line": 398
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@439:33-501:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:273:18)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 17,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 502
            },
            "start": {
              "column": 34,
              "line": 440
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@440:8-440:58\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 17,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 441
            },
            "start": {
              "column": 9,
              "line": 441
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@440:8-440:58\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 17,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 441
            },
            "start": {
              "column": 9,
              "line": 441
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@440:8-440:58\nEqualityOperator: metrics.length <= this.config.minDataPointsForTrend",
          "mutatorName": "EqualityOperator",
          "replacement": "metrics.length <= this.config.minDataPointsForTrend",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   52.98036985905839\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 17,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 441
            },
            "start": {
              "column": 9,
              "line": 441
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@440:60-442:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 12,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "64",
            "67",
            "68",
            "115",
            "116",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 443
            },
            "start": {
              "column": 61,
              "line": 441
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@440:8-440:58\nEqualityOperator: metrics.length >= this.config.minDataPointsForTrend",
          "mutatorName": "EqualityOperator",
          "replacement": "metrics.length >= this.config.minDataPointsForTrend",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   62.879903607115885\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 17,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "119",
            "122"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 441
            },
            "start": {
              "column": 9,
              "line": 441
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@448:34-453:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "65",
            "66",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 454
            },
            "start": {
              "column": 35,
              "line": 449
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@450:20-450:49\nLogicalOperator: groupedMetrics.get(key) && []",
          "mutatorName": "LogicalOperator",
          "replacement": "groupedMetrics.get(key) && []",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'push')\n    at RuntimeOptimizer.analyzePerformanceTrends (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:613:17)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:258:67)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:157:9)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "65",
            "66",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 451
            },
            "start": {
              "column": 21,
              "line": 451
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@455:47-498:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "65",
            "66",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 499
            },
            "start": {
              "column": 48,
              "line": 456
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@456:10-456:58\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "65",
            "66",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 457
            },
            "start": {
              "column": 11,
              "line": 457
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@456:10-456:58\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "65",
            "66",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 457
            },
            "start": {
              "column": 11,
              "line": 457
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@456:10-456:58\nEqualityOperator: group.length <= this.config.minDataPointsForTrend",
          "mutatorName": "EqualityOperator",
          "replacement": "group.length <= this.config.minDataPointsForTrend",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "65",
            "66",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 457
            },
            "start": {
              "column": 11,
              "line": 457
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@456:10-456:58\nEqualityOperator: group.length >= this.config.minDataPointsForTrend",
          "mutatorName": "EqualityOperator",
          "replacement": "group.length >= this.config.minDataPointsForTrend",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   24.444329680497873\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "65",
            "66",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 457
            },
            "start": {
              "column": 11,
              "line": 457
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@458:31-458:45\nArrowFunction: () => undefined",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 459
            },
            "start": {
              "column": 32,
              "line": 459
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@459:23-459:76\nArithmeticOperator: values.reduce((sum, v) => sum + v, 0) * values.length",
          "mutatorName": "ArithmeticOperator",
          "replacement": "values.reduce((sum, v) => sum + v, 0) * values.length",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 460
            },
            "start": {
              "column": 24,
              "line": 460
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@459:37-459:56\nArrowFunction: () => undefined",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 460
            },
            "start": {
              "column": 38,
              "line": 460
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@459:49-459:56\nArithmeticOperator: sum - v",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - v",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 460
            },
            "start": {
              "column": 50,
              "line": 460
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@460:23-460:42\nMethodExpression: Math.max(...values)",
          "mutatorName": "MethodExpression",
          "replacement": "Math.max(...values)",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 461
            },
            "start": {
              "column": 24,
              "line": 461
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@461:23-461:42\nMethodExpression: Math.min(...values)",
          "mutatorName": "MethodExpression",
          "replacement": "Math.min(...values)",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 462
            },
            "start": {
              "column": 24,
              "line": 462
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@465:8-466:21\nArithmeticOperator: values.reduce((sum, v) => sum + Math.pow(v - avgValue, 2), 0) * values.length",
          "mutatorName": "ArithmeticOperator",
          "replacement": "values.reduce((sum, v) => sum + Math.pow(v - avgValue, 2), 0) * values.length",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 467
            },
            "start": {
              "column": 9,
              "line": 466
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@465:34-465:65\nArithmeticOperator: sum - Math.pow(v - avgValue, 2)",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - Math.pow(v - avgValue, 2)",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 466
            },
            "start": {
              "column": 35,
              "line": 466
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@465:22-465:65\nArrowFunction: () => undefined",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 466
            },
            "start": {
              "column": 23,
              "line": 466
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@465:49-465:61\nArithmeticOperator: v + avgValue",
          "mutatorName": "ArithmeticOperator",
          "replacement": "v + avgValue",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 466
            },
            "start": {
              "column": 50,
              "line": 466
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@470:24-470:70\nMethodExpression: values",
          "mutatorName": "MethodExpression",
          "replacement": "values",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 71,
              "line": 471
            },
            "start": {
              "column": 25,
              "line": 471
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@470:51-470:68\nArithmeticOperator: values.length * 2",
          "mutatorName": "ArithmeticOperator",
          "replacement": "values.length * 2",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 69,
              "line": 471
            },
            "start": {
              "column": 52,
              "line": 471
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@471:25-471:68\nMethodExpression: values",
          "mutatorName": "MethodExpression",
          "replacement": "values",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 69,
              "line": 472
            },
            "start": {
              "column": 26,
              "line": 472
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@471:49-471:66\nArithmeticOperator: values.length * 2",
          "mutatorName": "ArithmeticOperator",
          "replacement": "values.length * 2",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 472
            },
            "start": {
              "column": 50,
              "line": 472
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@473:8-473:67\nArithmeticOperator: firstHalf.reduce((sum, v) => sum + v, 0) * firstHalf.length",
          "mutatorName": "ArithmeticOperator",
          "replacement": "firstHalf.reduce((sum, v) => sum + v, 0) * firstHalf.length",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 474
            },
            "start": {
              "column": 9,
              "line": 474
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@473:25-473:44\nArrowFunction: () => undefined",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 474
            },
            "start": {
              "column": 26,
              "line": 474
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@473:37-473:44\nArithmeticOperator: sum - v",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - v",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 474
            },
            "start": {
              "column": 38,
              "line": 474
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@475:8-475:69\nArithmeticOperator: secondHalf.reduce((sum, v) => sum + v, 0) * secondHalf.length",
          "mutatorName": "ArithmeticOperator",
          "replacement": "secondHalf.reduce((sum, v) => sum + v, 0) * secondHalf.length",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 476
            },
            "start": {
              "column": 9,
              "line": 476
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@475:26-475:45\nArrowFunction: () => undefined",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 476
            },
            "start": {
              "column": 27,
              "line": 476
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@475:38-475:45\nArithmeticOperator: sum - v",
          "mutatorName": "ArithmeticOperator",
          "replacement": "sum - v",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 476
            },
            "start": {
              "column": 39,
              "line": 476
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@478:10-478:57\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 479
            },
            "start": {
              "column": 11,
              "line": 479
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@478:10-478:57\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 479
            },
            "start": {
              "column": 11,
              "line": 479
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@478:10-478:57\nEqualityOperator: Math.abs(secondAvg - firstAvg) / firstAvg <= 0.1",
          "mutatorName": "EqualityOperator",
          "replacement": "Math.abs(secondAvg - firstAvg) / firstAvg <= 0.1",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 479
            },
            "start": {
              "column": 11,
              "line": 479
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@478:10-478:57\nEqualityOperator: Math.abs(secondAvg - firstAvg) / firstAvg >= 0.1",
          "mutatorName": "EqualityOperator",
          "replacement": "Math.abs(secondAvg - firstAvg) / firstAvg >= 0.1",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 479
            },
            "start": {
              "column": 11,
              "line": 479
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@478:10-478:51\nArithmeticOperator: Math.abs(secondAvg - firstAvg) * firstAvg",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Math.abs(secondAvg - firstAvg) * firstAvg",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 479
            },
            "start": {
              "column": 11,
              "line": 479
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@478:19-478:39\nArithmeticOperator: secondAvg + firstAvg",
          "mutatorName": "ArithmeticOperator",
          "replacement": "secondAvg + firstAvg",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 479
            },
            "start": {
              "column": 20,
              "line": 479
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@478:59-480:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 2,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 481
            },
            "start": {
              "column": 60,
              "line": 479
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@480:17-480:37\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 38,
              "line": 481
            },
            "start": {
              "column": 18,
              "line": 481
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@480:17-480:37\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 38,
              "line": 481
            },
            "start": {
              "column": 18,
              "line": 481
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@480:17-480:37\nEqualityOperator: secondAvg <= firstAvg",
          "mutatorName": "EqualityOperator",
          "replacement": "secondAvg <= firstAvg",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 38,
              "line": 481
            },
            "start": {
              "column": 18,
              "line": 481
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@480:17-480:37\nEqualityOperator: secondAvg >= firstAvg",
          "mutatorName": "EqualityOperator",
          "replacement": "secondAvg >= firstAvg",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 38,
              "line": 481
            },
            "start": {
              "column": 18,
              "line": 481
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@482:13-484:7\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 1,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 8,
              "line": 485
            },
            "start": {
              "column": 14,
              "line": 483
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@486:18-497:7\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 498
            },
            "start": {
              "column": 19,
              "line": 487
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@495:23-495:39\nArithmeticOperator: group.length + 1",
          "mutatorName": "ArithmeticOperator",
          "replacement": "group.length + 1",
          "statusReason": "TypeError: Cannot read properties of undefined (reading 'timestamp')\n    at RuntimeOptimizer.analyzePerformanceTrends (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:669:115)\n    at RuntimeOptimizer.analyze (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/src/optimization/RuntimeOptimizer.ts:258:67)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:103:24)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 3,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "63"
          ],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 496
            },
            "start": {
              "column": 24,
              "line": 496
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@506:59-532:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:78:36)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 533
            },
            "start": {
              "column": 60,
              "line": 507
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@507:8-507:32\nConditionalExpression: true",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 80\nReceived:   100\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:222:36)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 508
            },
            "start": {
              "column": 9,
              "line": 508
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@507:8-507:32\nConditionalExpression: false",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 508
            },
            "start": {
              "column": 9,
              "line": 508
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@507:34-509:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 9,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "62",
            "66",
            "67",
            "68",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 510
            },
            "start": {
              "column": 35,
              "line": 508
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@507:8-507:32\nEqualityOperator: bottlenecks.length !== 0",
          "mutatorName": "EqualityOperator",
          "replacement": "bottlenecks.length !== 0",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 80\nReceived:   100\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:222:36)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 16,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "115",
            "116",
            "122"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 508
            },
            "start": {
              "column": 9,
              "line": 508
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@513:42-528:5\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 80\nReceived:   100\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:222:36)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 529
            },
            "start": {
              "column": 43,
              "line": 514
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@518:8-520:16\nConditionalExpression: case BottleneckSeverity.HIGH:",
          "mutatorName": "ConditionalExpression",
          "replacement": "case BottleneckSeverity.HIGH:",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   86.8086892125401\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 521
            },
            "start": {
              "column": 9,
              "line": 519
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@515:8-517:16\nConditionalExpression: case BottleneckSeverity.CRITICAL:",
          "mutatorName": "ConditionalExpression",
          "replacement": "case BottleneckSeverity.CRITICAL:",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 80\nReceived:   80\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:222:36)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 518
            },
            "start": {
              "column": 9,
              "line": 516
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@516:10-516:21\nAssignmentOperator: score += 20",
          "mutatorName": "AssignmentOperator",
          "replacement": "score += 20",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 80\nReceived:   110\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:222:36)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 517
            },
            "start": {
              "column": 11,
              "line": 517
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@519:10-519:21\nAssignmentOperator: score += 10",
          "mutatorName": "AssignmentOperator",
          "replacement": "score += 10",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   26.661928579173125\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 4,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 520
            },
            "start": {
              "column": 11,
              "line": 520
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@524:8-526:16\nConditionalExpression: case BottleneckSeverity.LOW:",
          "mutatorName": "ConditionalExpression",
          "replacement": "case BottleneckSeverity.LOW:",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   48.061422939485965\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 527
            },
            "start": {
              "column": 9,
              "line": 525
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@521:8-523:16\nConditionalExpression: case BottleneckSeverity.MEDIUM:",
          "mutatorName": "ConditionalExpression",
          "replacement": "case BottleneckSeverity.MEDIUM:",
          "status": "Survived",
          "static": false,
          "testsCompleted": 5,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 524
            },
            "start": {
              "column": 9,
              "line": 522
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@522:10-522:20\nAssignmentOperator: score += 5",
          "mutatorName": "AssignmentOperator",
          "replacement": "score += 5",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 80\nReceived:   90\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/integration/optimization/RuntimeOptimizer.integration.test.ts:222:36)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [
            "65"
          ],
          "coveredBy": [
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 523
            },
            "start": {
              "column": 11,
              "line": 523
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@525:10-525:20\nAssignmentOperator: score += 2",
          "mutatorName": "AssignmentOperator",
          "replacement": "score += 2",
          "status": "Survived",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 526
            },
            "start": {
              "column": 11,
              "line": 526
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@531:11-531:29\nMethodExpression: Math.min(0, score)",
          "mutatorName": "MethodExpression",
          "replacement": "Math.min(0, score)",
          "status": "Survived",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 532
            },
            "start": {
              "column": 12,
              "line": 532
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@539:31-550:3\nBlockStatement: {}",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   52.31845538231582\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 8,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 551
            },
            "start": {
              "column": 32,
              "line": 540
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@542:6-543:22\nConditionalExpression: case BottleneckSeverity.HIGH:",
          "mutatorName": "ConditionalExpression",
          "replacement": "case BottleneckSeverity.HIGH:",
          "status": "Survived",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "63",
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 544
            },
            "start": {
              "column": 7,
              "line": 543
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@544:6-545:24\nConditionalExpression: case BottleneckSeverity.MEDIUM:",
          "mutatorName": "ConditionalExpression",
          "replacement": "case BottleneckSeverity.MEDIUM:",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   24.683607320163112\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 5,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "64",
            "65"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 546
            },
            "start": {
              "column": 7,
              "line": 545
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@547:6-548:21\nConditionalExpression: default:",
          "mutatorName": "ConditionalExpression",
          "replacement": "default:",
          "status": "Survived",
          "static": false,
          "testsCompleted": 6,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [
            "64",
            "65",
            "69",
            "70"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 549
            },
            "start": {
              "column": 7,
              "line": 548
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@28:49-42:1\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 43
            },
            "start": {
              "column": 50,
              "line": 29
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@29:11-29:15\nBooleanLiteral: false",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   69.22843930784774\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 16,
              "line": 30
            },
            "start": {
              "column": 12,
              "line": 30
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@33:14-38:3\nObjectLiteral: {}",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 39
            },
            "start": {
              "column": 15,
              "line": 34
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@39:27-39:31\nBooleanLiteral: false",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Error: expect(received).toBeLessThan(expected)\n\nExpected: < 20\nReceived:   23.02759248898132\n    at Object.<anonymous> (/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2/.stryker-tmp/sandbox-wcuUWb/tests/performance/optimization/RuntimeOptimizer.performance.test.ts:334:32)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:549:9)\n    at processTimers (node:internal/timers:523:7)",
          "status": "Killed",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 32,
              "line": 40
            },
            "start": {
              "column": 28,
              "line": 40
            }
          }
        },
        {
          "id": "src/optimization/RuntimeOptimizer.ts@40:23-40:27\nBooleanLiteral: false",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "status": "Survived",
          "static": false,
          "testsCompleted": 29,
          "relativeFileName": "src/optimization/RuntimeOptimizer.ts",
          "killedBy": [],
          "coveredBy": [],
          "location": {
            "end": {
              "column": 28,
              "line": 41
            },
            "start": {
              "column": 24,
              "line": 41
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Runtime Optimizer - Main Optimization Engine\n *\n * Coordinates performance monitoring, bottleneck detection, and\n * optimization recommendations.\n *\n * @author @darianrosebrook\n */\n\nimport { Logger } from \"@/observability/Logger\";\nimport {\n  BottleneckSeverity,\n  MetricType,\n  RecommendationType,\n  type CacheStatistics,\n  type IRuntimeOptimizer,\n  type OptimizationAnalysis,\n  type OptimizationEngineConfig,\n  type OptimizationRecommendation,\n  type PerformanceTrend,\n} from \"@/types/optimization-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BottleneckDetector } from \"./BottleneckDetector\";\nimport { PerformanceMonitor } from \"./PerformanceMonitor\";\n\n/**\n * Default optimization engine configuration\n */\nconst DEFAULT_CONFIG: OptimizationEngineConfig = {\n  enabled: true,\n  collectionIntervalMs: 10000, // 10 seconds\n  analysisWindowMs: 300000, // 5 minutes\n  maxOverheadPct: 5,\n  thresholds: {\n    [MetricType.CPU]: 80,\n    [MetricType.MEMORY]: 85,\n    [MetricType.LATENCY]: 1000,\n    [MetricType.CACHE_HIT_RATE]: 70,\n  },\n  enableCacheOptimization: true,\n  enableTrendAnalysis: true,\n  minDataPointsForTrend: 10,\n};\n\n/**\n * Runtime Optimizer\n *\n * Main optimization engine that:\n * - Monitors system performance continuously\n * - Detects bottlenecks and issues\n * - Generates actionable recommendations\n * - Analyzes cache performance\n * - Tracks performance trends\n */\nexport class RuntimeOptimizer implements IRuntimeOptimizer {\n  private logger: Logger;\n  private config: OptimizationEngineConfig;\n  private performanceMonitor: PerformanceMonitor;\n  private bottleneckDetector: BottleneckDetector;\n  private isRunning = false;\n  private analysisTimer?: ReturnType<typeof setInterval>;\n  private lastAnalysisTime?: Date;\n  private analysisHistory: OptimizationAnalysis[] = [];\n\n  constructor(config: Partial<OptimizationEngineConfig> = {}) {\n    this.logger = new Logger(\"RuntimeOptimizer\");\n    this.config = { ...DEFAULT_CONFIG, ...config };\n    this.performanceMonitor = new PerformanceMonitor({\n      maxMetrics: 10000,\n      autoCleanOlderThanMs: this.config.analysisWindowMs * 2,\n    });\n    this.bottleneckDetector = new BottleneckDetector(this.config.thresholds);\n  }\n\n  /**\n   * Initialize the optimizer\n   */\n  async initialize(): Promise<void> {\n    await this.performanceMonitor.start();\n    this.logger.info(\"Runtime optimizer initialized\", {\n      enabled: this.config.enabled,\n      collectionInterval: this.config.collectionIntervalMs,\n      analysisWindow: this.config.analysisWindowMs,\n    });\n  }\n\n  /**\n   * Start optimization monitoring\n   */\n  async start(): Promise<void> {\n    if (this.isRunning) {\n      this.logger.warn(\"Runtime optimizer already running\");\n      return;\n    }\n\n    if (!this.config.enabled) {\n      this.logger.info(\"Runtime optimizer disabled, not starting\");\n      return;\n    }\n\n    this.isRunning = true;\n\n    // Clear any existing timer first\n    if (this.analysisTimer) {\n      clearInterval(this.analysisTimer);\n      this.analysisTimer = undefined;\n    }\n\n    // Start periodic analysis\n    this.analysisTimer = setInterval(async () => {\n      try {\n        await this.analyze();\n      } catch (error) {\n        this.logger.error(\"Analysis failed\", { error });\n      }\n    }, this.config.collectionIntervalMs);\n\n    this.logger.info(\"Runtime optimizer started\");\n  }\n\n  /**\n   * Stop optimization monitoring\n   */\n  async stop(): Promise<void> {\n    if (!this.isRunning) {\n      return;\n    }\n\n    if (this.analysisTimer) {\n      clearInterval(this.analysisTimer);\n      this.analysisTimer = undefined;\n    }\n\n    await this.performanceMonitor.stop();\n    this.isRunning = false;\n\n    this.logger.info(\"Runtime optimizer stopped\");\n  }\n\n  /**\n   * Perform analysis and generate recommendations\n   */\n  async analyze(): Promise<OptimizationAnalysis> {\n    const startTime = Date.now();\n\n    // Get metrics for analysis window\n    const windowEnd = new Date();\n    const windowStart = new Date(\n      windowEnd.getTime() - this.config.analysisWindowMs\n    );\n    const metrics = await this.performanceMonitor.getMetrics(\n      windowStart,\n      windowEnd\n    );\n\n    // Detect bottlenecks\n    const bottlenecks = await this.bottleneckDetector.detectBottlenecks(\n      metrics\n    );\n\n    // Generate recommendations based on bottlenecks\n    const recommendations = await this.generateRecommendations(bottlenecks);\n\n    // Analyze trends\n    const trends = this.config.enableTrendAnalysis\n      ? await this.analyzePerformanceTrends(metrics)\n      : [];\n\n    // Analyze cache performance\n    const cacheStats = this.config.enableCacheOptimization\n      ? await this.analyzeCachePerformance(metrics)\n      : [];\n\n    // Calculate health score\n    const healthScore = this.calculateHealthScore(bottlenecks);\n\n    const analysis: OptimizationAnalysis = {\n      timestamp: new Date(),\n      windowMs: this.config.analysisWindowMs,\n      bottlenecks,\n      recommendations,\n      trends,\n      cacheStats,\n      healthScore,\n      analysisDurationMs: Date.now() - startTime,\n    };\n\n    this.lastAnalysisTime = analysis.timestamp;\n    this.analysisHistory.push(analysis);\n\n    // Keep only last 100 analyses\n    if (this.analysisHistory.length > 100) {\n      this.analysisHistory.shift();\n    }\n\n    this.logger.debug(\"Analysis completed\", {\n      metricsAnalyzed: metrics.length,\n      bottlenecksDetected: bottlenecks.length,\n      recommendationsGenerated: recommendations.length,\n      healthScore,\n      durationMs: analysis.analysisDurationMs,\n    });\n\n    return analysis;\n  }\n\n  /**\n   * Get cache statistics\n   */\n  async getCacheStatistics(): Promise<CacheStatistics[]> {\n    const windowEnd = new Date();\n    const windowStart = new Date(\n      windowEnd.getTime() - this.config.analysisWindowMs\n    );\n    const metrics = await this.performanceMonitor.getMetrics(\n      windowStart,\n      windowEnd\n    );\n\n    return this.analyzeCachePerformance(metrics);\n  }\n\n  /**\n   * Get performance trends\n   */\n  async getPerformanceTrends(): Promise<PerformanceTrend[]> {\n    const windowEnd = new Date();\n    const windowStart = new Date(\n      windowEnd.getTime() - this.config.analysisWindowMs\n    );\n    const metrics = await this.performanceMonitor.getMetrics(\n      windowStart,\n      windowEnd\n    );\n\n    return this.analyzePerformanceTrends(metrics);\n  }\n\n  /**\n   * Get current configuration\n   */\n  getConfig(): OptimizationEngineConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(config: Partial<OptimizationEngineConfig>): void {\n    const wasRunning = this.isRunning;\n\n    // Stop if running\n    if (wasRunning) {\n      this.stop();\n    }\n\n    // Update config\n    this.config = { ...this.config, ...config };\n\n    // Update sub-components\n    if (config.thresholds) {\n      this.bottleneckDetector.updateThresholds(config.thresholds);\n    }\n\n    // Restart if was running\n    if (wasRunning && this.config.enabled) {\n      this.start();\n    }\n\n    this.logger.info(\"Configuration updated\", this.config);\n  }\n\n  /**\n   * Get health status\n   */\n  getHealthStatus(): {\n    isRunning: boolean;\n    lastAnalysisTime?: Date;\n    metricsCollected: number;\n    bottlenecksDetected: number;\n    recommendationsGenerated: number;\n  } {\n    const latestAnalysis =\n      this.analysisHistory.length > 0\n        ? this.analysisHistory[this.analysisHistory.length - 1]\n        : null;\n\n    return {\n      isRunning: this.isRunning,\n      lastAnalysisTime: this.lastAnalysisTime,\n      metricsCollected: this.performanceMonitor.getMetricCount(),\n      bottlenecksDetected:\n        this.bottleneckDetector.getActiveBottlenecks().length,\n      recommendationsGenerated: latestAnalysis?.recommendations.length ?? 0,\n    };\n  }\n\n  /**\n   * Get analysis history\n   */\n  getAnalysisHistory(count: number = 10): OptimizationAnalysis[] {\n    return this.analysisHistory.slice(-count);\n  }\n\n  /**\n   * Generate optimization recommendations from bottlenecks\n   */\n  private async generateRecommendations(\n    bottlenecks: any[]\n  ): Promise<OptimizationRecommendation[]> {\n    const recommendations: OptimizationRecommendation[] = [];\n\n    for (const bottleneck of bottlenecks) {\n      const recommendation =\n        this.generateRecommendationForBottleneck(bottleneck);\n      if (recommendation) {\n        recommendations.push(recommendation);\n      }\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Generate recommendation for a specific bottleneck\n   */\n  private generateRecommendationForBottleneck(\n    bottleneck: any\n  ): OptimizationRecommendation | null {\n    const baseRecommendation = {\n      id: uuidv4(),\n      component: bottleneck.component,\n      relatedBottleneckId: bottleneck.id,\n      generatedAt: new Date(),\n      priority: this.mapSeverityToPriority(bottleneck.severity),\n    };\n\n    // Generate recommendation based on metric type\n    switch (bottleneck.metricType) {\n      case MetricType.CPU:\n        return {\n          ...baseRecommendation,\n          type: RecommendationType.RESOURCE_ALLOCATION,\n          title: \"Optimize CPU Usage\",\n          description: `CPU usage at ${bottleneck.currentValue}% (threshold: ${bottleneck.threshold}%)`,\n          expectedImpact: \"Reduce CPU usage by 20-30% through optimization\",\n          estimatedImprovementPct: 25,\n          implementationDifficulty: \"moderate\",\n        };\n\n      case MetricType.MEMORY:\n        return {\n          ...baseRecommendation,\n          type: RecommendationType.MEMORY_MANAGEMENT,\n          title: \"Optimize Memory Usage\",\n          description: `Memory usage at ${bottleneck.currentValue}% (threshold: ${bottleneck.threshold}%)`,\n          expectedImpact: \"Reduce memory footprint and prevent leaks\",\n          estimatedImprovementPct: 20,\n          implementationDifficulty: \"moderate\",\n        };\n\n      case MetricType.CACHE_HIT_RATE:\n        return {\n          ...baseRecommendation,\n          type: RecommendationType.CACHE_OPTIMIZATION,\n          title: \"Improve Cache Performance\",\n          description: `Cache hit rate at ${bottleneck.currentValue}% (target: ${bottleneck.threshold}%)`,\n          expectedImpact:\n            \"Improve cache hit rate through better eviction and warming\",\n          estimatedImprovementPct: 30,\n          implementationDifficulty: \"easy\",\n        };\n\n      case MetricType.LATENCY:\n        return {\n          ...baseRecommendation,\n          type: RecommendationType.CONCURRENCY_TUNING,\n          title: \"Reduce Latency\",\n          description: `Latency at ${bottleneck.currentValue}ms (threshold: ${bottleneck.threshold}ms)`,\n          expectedImpact:\n            \"Reduce response times through concurrency optimization\",\n          estimatedImprovementPct: 35,\n          implementationDifficulty: \"hard\",\n        };\n\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Analyze cache performance from metrics\n   */\n  private async analyzeCachePerformance(\n    metrics: any[]\n  ): Promise<CacheStatistics[]> {\n    const cacheMetrics = metrics.filter(\n      (m) => m.type === MetricType.CACHE_HIT_RATE\n    );\n    const cacheStats: CacheStatistics[] = [];\n\n    // Group by source (cache ID)\n    const byCacheId = new Map<string, any[]>();\n    for (const metric of cacheMetrics) {\n      const cacheId = metric.source;\n      const cacheMetrics = byCacheId.get(cacheId) ?? [];\n      cacheMetrics.push(metric);\n      byCacheId.set(cacheId, cacheMetrics);\n    }\n\n    for (const [cacheId, cacheMetrics] of byCacheId) {\n      if (cacheMetrics.length === 0) continue;\n\n      const hitRate =\n        cacheMetrics.reduce((sum, m) => sum + m.value, 0) / cacheMetrics.length;\n\n      cacheStats.push({\n        cacheId,\n        totalRequests: cacheMetrics.length,\n        hits: Math.round((cacheMetrics.length * hitRate) / 100),\n        misses: Math.round((cacheMetrics.length * (100 - hitRate)) / 100),\n        hitRate,\n        avgHitTimeMs: 10,\n        avgMissTimeMs: 100,\n        cacheSizeBytes: 0,\n        evictionCount: 0,\n        windowStartTime: cacheMetrics[0].timestamp,\n        windowEndTime: cacheMetrics[cacheMetrics.length - 1].timestamp,\n      });\n    }\n\n    return cacheStats;\n  }\n\n  /**\n   * Analyze performance trends from metrics\n   */\n  private async analyzePerformanceTrends(\n    metrics: any[]\n  ): Promise<PerformanceTrend[]> {\n    if (metrics.length < this.config.minDataPointsForTrend) {\n      return [];\n    }\n\n    const trends: PerformanceTrend[] = [];\n\n    // Group by component and metric type\n    const groupedMetrics = new Map<string, any[]>();\n    for (const metric of metrics) {\n      const key = `${metric.source}-${metric.type}`;\n      const group = groupedMetrics.get(key) ?? [];\n      group.push(metric);\n      groupedMetrics.set(key, group);\n    }\n\n    for (const [key, group] of groupedMetrics) {\n      if (group.length < this.config.minDataPointsForTrend) continue;\n\n      const values = group.map((m) => m.value);\n      const avgValue = values.reduce((sum, v) => sum + v, 0) / values.length;\n      const minValue = Math.min(...values);\n      const maxValue = Math.max(...values);\n\n      // Calculate standard deviation\n      const variance =\n        values.reduce((sum, v) => sum + Math.pow(v - avgValue, 2), 0) /\n        values.length;\n      const stdDev = Math.sqrt(variance);\n\n      // Determine trend direction\n      const firstHalf = values.slice(0, Math.floor(values.length / 2));\n      const secondHalf = values.slice(Math.floor(values.length / 2));\n      const firstAvg =\n        firstHalf.reduce((sum, v) => sum + v, 0) / firstHalf.length;\n      const secondAvg =\n        secondHalf.reduce((sum, v) => sum + v, 0) / secondHalf.length;\n\n      let direction: \"improving\" | \"stable\" | \"degrading\";\n      if (Math.abs(secondAvg - firstAvg) / firstAvg < 0.1) {\n        direction = \"stable\";\n      } else if (secondAvg < firstAvg) {\n        direction = \"improving\";\n      } else {\n        direction = \"degrading\";\n      }\n\n      trends.push({\n        metricType: group[0].type,\n        component: group[0].source,\n        direction,\n        averageValue: avgValue,\n        minValue,\n        maxValue,\n        standardDeviation: stdDev,\n        startTime: group[0].timestamp,\n        endTime: group[group.length - 1].timestamp,\n        dataPointCount: group.length,\n      });\n    }\n\n    return trends;\n  }\n\n  /**\n   * Calculate overall system health score (0-100 percentage)\n   */\n  private calculateHealthScore(bottlenecks: any[]): number {\n    if (bottlenecks.length === 0) {\n      return 100; // Perfect health\n    }\n\n    let score = 100;\n\n    for (const bottleneck of bottlenecks) {\n      switch (bottleneck.severity) {\n        case BottleneckSeverity.CRITICAL:\n          score -= 20;\n          break;\n        case BottleneckSeverity.HIGH:\n          score -= 10;\n          break;\n        case BottleneckSeverity.MEDIUM:\n          score -= 5;\n          break;\n        case BottleneckSeverity.LOW:\n          score -= 2;\n          break;\n      }\n    }\n\n    // Return percentage (0-100)\n    return Math.max(0, score);\n  }\n\n  /**\n   * Map bottleneck severity to recommendation priority\n   */\n  private mapSeverityToPriority(\n    severity: BottleneckSeverity\n  ): \"low\" | \"medium\" | \"high\" {\n    switch (severity) {\n      case BottleneckSeverity.CRITICAL:\n      case BottleneckSeverity.HIGH:\n        return \"high\";\n      case BottleneckSeverity.MEDIUM:\n        return \"medium\";\n      case BottleneckSeverity.LOW:\n      default:\n        return \"low\";\n    }\n  }\n}\n"
    }
  },
  "schemaVersion": "1.0",
  "thresholds": {
    "high": 50,
    "low": 30,
    "break": 25
  },
  "testFiles": {
    "tests/performance/resources/AdaptiveResourceManager.performance.test.ts": {
      "tests": [
        {
          "id": "0",
          "name": "AdaptiveResourceManager Performance Agent Selection Performance should select agents within 50ms",
          "location": {
            "start": {
              "column": 8,
              "line": 41
            }
          }
        },
        {
          "id": "1",
          "name": "AdaptiveResourceManager Performance Agent Selection Performance should maintain performance across multiple strategies",
          "location": {
            "start": {
              "column": 8,
              "line": 71
            }
          }
        },
        {
          "id": "2",
          "name": "AdaptiveResourceManager Performance Monitoring Overhead should maintain reasonable monitoring overhead",
          "location": {
            "start": {
              "column": 8,
              "line": 111
            }
          }
        },
        {
          "id": "3",
          "name": "AdaptiveResourceManager Performance High Load Performance should handle 100+ concurrent requests efficiently",
          "location": {
            "start": {
              "column": 8,
              "line": 156
            }
          }
        },
        {
          "id": "4",
          "name": "AdaptiveResourceManager Performance High Load Performance should maintain performance under sustained load",
          "location": {
            "start": {
              "column": 8,
              "line": 202
            }
          }
        },
        {
          "id": "5",
          "name": "AdaptiveResourceManager Performance Capacity Analysis Performance should perform capacity analysis within reasonable time",
          "location": {
            "start": {
              "column": 8,
              "line": 258
            }
          }
        },
        {
          "id": "6",
          "name": "AdaptiveResourceManager Performance Capacity Analysis Performance should handle multiple concurrent capacity analyses",
          "location": {
            "start": {
              "column": 8,
              "line": 271
            }
          }
        },
        {
          "id": "7",
          "name": "AdaptiveResourceManager Performance Failover Performance should handle failover within reasonable time",
          "location": {
            "start": {
              "column": 8,
              "line": 291
            }
          }
        },
        {
          "id": "8",
          "name": "AdaptiveResourceManager Performance Failover Performance should handle multiple concurrent failovers",
          "location": {
            "start": {
              "column": 8,
              "line": 304
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Performance tests for Adaptive Resource Manager\n *\n * Tests performance requirements:\n * - Agent selection: <50ms\n * - Monitoring overhead: <5%\n * - High load handling: 100+ concurrent requests\n *\n * @author @darianrosebrook\n */\n\nimport { AdaptiveResourceManager } from \"@/resources/AdaptiveResourceManager\";\nimport { ResourceType, TaskPriority, LoadBalancingStrategy, type ResourceAllocationRequest } from \"@/types/resource-types\";\nimport { afterEach, beforeEach, describe, expect, it, jest } from \"@jest/globals\";\n\ndescribe(\"AdaptiveResourceManager Performance\", () => {\n  let resourceManager: AdaptiveResourceManager;\n\n  beforeEach(async () => {\n    resourceManager = new AdaptiveResourceManager({\n      enabled: true,\n      monitoringIntervalMs: 1000,\n      loadBalancingStrategy: LoadBalancingStrategy.LEAST_LOADED,\n      enableDynamicRateLimiting: true,\n      enableAutoFailover: true,\n      maxAllocationDecisionMs: 50,\n      enableCapacityPlanning: true,\n    });\n    await resourceManager.initialize();\n    await resourceManager.start();\n  });\n\n  afterEach(async () => {\n    if (resourceManager) {\n      await resourceManager.stop();\n    }\n  });\n\n  describe(\"Agent Selection Performance\", () => {\n    it(\"should select agents within 50ms\", async () => {\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-perf-1\",\n        taskId: \"task-perf-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {\n          cpuPercent: 10,\n          memoryMb: 128,\n          networkMbps: 5,\n        },\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const startTime = Date.now();\n      const result = await resourceManager.allocateResources(request);\n      const endTime = Date.now();\n\n      const selectionTime = endTime - startTime;\n      console.log(`Agent selection time: ${selectionTime}ms`);\n\n      // Should complete within 50ms (even if no agents available)\n      expect(selectionTime).toBeLessThan(50);\n      expect(result).toBeDefined();\n      expect(result.requestId).toBe(\"req-perf-1\");\n\n      // Clean up\n      await resourceManager.releaseResources(\"req-perf-1\");\n    });\n\n    it(\"should maintain performance across multiple strategies\", async () => {\n      const strategies = [\n        LoadBalancingStrategy.ROUND_ROBIN,\n        LoadBalancingStrategy.LEAST_LOADED,\n        LoadBalancingStrategy.WEIGHTED,\n        LoadBalancingStrategy.PRIORITY_BASED,\n        LoadBalancingStrategy.RANDOM,\n      ];\n\n      for (const strategy of strategies) {\n        const request: ResourceAllocationRequest = {\n          requestId: `req-${strategy}`,\n          taskId: `task-${strategy}`,\n          priority: TaskPriority.MEDIUM,\n          requiredResources: {\n            cpuPercent: 10,\n            memoryMb: 128,\n            networkMbps: 5,\n          },\n          requestedAt: new Date(),\n          timeoutMs: 5000,\n        };\n\n        const startTime = Date.now();\n        const result = await resourceManager.allocateResources(request);\n        const endTime = Date.now();\n\n        const selectionTime = endTime - startTime;\n        console.log(`${strategy} selection time: ${selectionTime}ms`);\n\n        expect(selectionTime).toBeLessThan(50);\n        expect(result).toBeDefined();\n\n        // Clean up\n        await resourceManager.releaseResources(`req-${strategy}`);\n      }\n    });\n  });\n\n  describe(\"Monitoring Overhead\", () => {\n    it(\"should maintain reasonable monitoring overhead\", async () => {\n      const iterations = 50; // Reduced for more realistic test\n      const requests: ResourceAllocationRequest[] = [];\n\n      // Create test requests\n      for (let i = 0; i < iterations; i++) {\n        requests.push({\n          requestId: `req-overhead-${i}`,\n          taskId: `task-overhead-${i}`,\n          priority: TaskPriority.MEDIUM,\n          requiredResources: {\n            cpuPercent: 5,\n            memoryMb: 64,\n            networkMbps: 2,\n          },\n          requestedAt: new Date(),\n          timeoutMs: 5000,\n        });\n      }\n\n      // Measure time with monitoring (actual allocation)\n      const startTime = Date.now();\n      const results = await Promise.all(\n        requests.map((request) => resourceManager.allocateResources(request))\n      );\n      const endTime = Date.now();\n      const totalTime = endTime - startTime;\n      const avgTimePerRequest = totalTime / iterations;\n\n      console.log(`Monitoring overhead test: ${iterations} requests in ${totalTime}ms (avg: ${avgTimePerRequest.toFixed(2)}ms per request)`);\n\n      // Average time per request should be reasonable (less than 10ms)\n      expect(avgTimePerRequest).toBeLessThan(10);\n\n      // Total time should be reasonable for the number of requests\n      expect(totalTime).toBeLessThan(1000); // Less than 1 second for 50 requests\n\n      // Clean up\n      await Promise.all(\n        results.map((result) => resourceManager.releaseResources(result.requestId))\n      );\n    });\n  });\n\n  describe(\"High Load Performance\", () => {\n    it(\"should handle 100+ concurrent requests efficiently\", async () => {\n      const numRequests = 100;\n      const requests: ResourceAllocationRequest[] = [];\n\n      // Create concurrent requests\n      for (let i = 0; i < numRequests; i++) {\n        requests.push({\n          requestId: `req-load-${i}`,\n          taskId: `task-load-${i}`,\n          priority: i % 3 === 0 ? TaskPriority.HIGH : TaskPriority.MEDIUM,\n          requiredResources: {\n            cpuPercent: 5 + (i % 10),\n            memoryMb: 64 + (i % 50),\n            networkMbps: 2 + (i % 5),\n          },\n          requestedAt: new Date(),\n          timeoutMs: 5000,\n        });\n      }\n\n      const startTime = Date.now();\n      const results = await Promise.all(\n        requests.map((request) => resourceManager.allocateResources(request))\n      );\n      const endTime = Date.now();\n\n      const totalTime = endTime - startTime;\n      const avgTimePerRequest = totalTime / numRequests;\n\n      console.log(`High load test: ${numRequests} requests in ${totalTime}ms (avg: ${avgTimePerRequest.toFixed(2)}ms per request)`);\n\n      // All requests should be processed\n      expect(results.length).toBe(numRequests);\n\n      // Average time per request should be reasonable\n      expect(avgTimePerRequest).toBeLessThan(10); // Less than 10ms per request on average\n\n      // Total time should be reasonable for 100 requests\n      expect(totalTime).toBeLessThan(2000); // Less than 2 seconds total\n\n      // Clean up\n      await Promise.all(\n        results.map((result) => resourceManager.releaseResources(result.requestId))\n      );\n    });\n\n    it(\"should maintain performance under sustained load\", async () => {\n      const batchSize = 20;\n      const numBatches = 5;\n      const totalRequests = batchSize * numBatches;\n\n      let totalTime = 0;\n      let allResults: any[] = [];\n\n      for (let batch = 0; batch < numBatches; batch++) {\n        const requests: ResourceAllocationRequest[] = [];\n\n        for (let i = 0; i < batchSize; i++) {\n          requests.push({\n            requestId: `req-sustained-${batch}-${i}`,\n            taskId: `task-sustained-${batch}-${i}`,\n            priority: TaskPriority.MEDIUM,\n            requiredResources: {\n              cpuPercent: 10,\n              memoryMb: 128,\n              networkMbps: 5,\n            },\n            requestedAt: new Date(),\n            timeoutMs: 5000,\n          });\n        }\n\n        const startTime = Date.now();\n        const results = await Promise.all(\n          requests.map((request) => resourceManager.allocateResources(request))\n        );\n        const endTime = Date.now();\n\n        const batchTime = endTime - startTime;\n        totalTime += batchTime;\n        allResults.push(...results);\n\n        console.log(`Batch ${batch + 1}: ${batchSize} requests in ${batchTime}ms`);\n\n        // Each batch should complete quickly\n        expect(batchTime).toBeLessThan(500); // Less than 500ms per batch\n      }\n\n      const avgTimePerRequest = totalTime / totalRequests;\n      console.log(`Sustained load test: ${totalRequests} requests in ${totalTime}ms (avg: ${avgTimePerRequest.toFixed(2)}ms per request)`);\n\n      // Average time per request should remain consistent\n      expect(avgTimePerRequest).toBeLessThan(10);\n\n      // Clean up\n      await Promise.all(\n        allResults.map((result) => resourceManager.releaseResources(result.requestId))\n      );\n    });\n  });\n\n  describe(\"Capacity Analysis Performance\", () => {\n    it(\"should perform capacity analysis within reasonable time\", async () => {\n      const startTime = Date.now();\n      const capacityAnalysis = await resourceManager.analyzeCapacity();\n      const endTime = Date.now();\n\n      const analysisTime = endTime - startTime;\n      console.log(`Capacity analysis time: ${analysisTime}ms`);\n\n      expect(analysisTime).toBeLessThan(100); // Less than 100ms\n      expect(capacityAnalysis).toBeDefined();\n      expect(capacityAnalysis.timestamp).toBeDefined();\n    });\n\n    it(\"should handle multiple concurrent capacity analyses\", async () => {\n      const numAnalyses = 10;\n      const startTime = Date.now();\n\n      const analyses = await Promise.all(\n        Array.from({ length: numAnalyses }, () => resourceManager.analyzeCapacity())\n      );\n\n      const endTime = Date.now();\n      const totalTime = endTime - startTime;\n      const avgTimePerAnalysis = totalTime / numAnalyses;\n\n      console.log(`Concurrent capacity analysis: ${numAnalyses} analyses in ${totalTime}ms (avg: ${avgTimePerAnalysis.toFixed(2)}ms per analysis)`);\n\n      expect(analyses.length).toBe(numAnalyses);\n      expect(avgTimePerAnalysis).toBeLessThan(50); // Less than 50ms per analysis\n    });\n  });\n\n  describe(\"Failover Performance\", () => {\n    it(\"should handle failover within reasonable time\", async () => {\n      const startTime = Date.now();\n      const failoverResult = await resourceManager.handleFailover(\"agent-1\", \"agent-2\");\n      const endTime = Date.now();\n\n      const failoverTime = endTime - startTime;\n      console.log(`Failover time: ${failoverTime}ms`);\n\n      expect(failoverTime).toBeLessThan(100); // Less than 100ms\n      expect(failoverResult).toBeDefined();\n      expect(failoverResult.success).toBe(true);\n    });\n\n    it(\"should handle multiple concurrent failovers\", async () => {\n      const numFailovers = 5;\n      const startTime = Date.now();\n\n      const failoverResults = await Promise.all(\n        Array.from({ length: numFailovers }, (_, i) =>\n          resourceManager.handleFailover(`agent-${i}`, `agent-${i + 1}`)\n        )\n      );\n\n      const endTime = Date.now();\n      const totalTime = endTime - startTime;\n      const avgTimePerFailover = totalTime / numFailovers;\n\n      console.log(`Concurrent failover: ${numFailovers} failovers in ${totalTime}ms (avg: ${avgTimePerFailover.toFixed(2)}ms per failover)`);\n\n      expect(failoverResults.length).toBe(numFailovers);\n      expect(avgTimePerFailover).toBeLessThan(50); // Less than 50ms per failover\n    });\n  });\n});\n"
    },
    "tests/integration/resources/AdaptiveResourceManager.integration.test.ts": {
      "tests": [
        {
          "id": "9",
          "name": "AdaptiveResourceManager Integration SystemHealthMonitor Integration should integrate with SystemHealthMonitor for health metrics",
          "location": {
            "start": {
              "column": 8,
              "line": 55
            }
          }
        },
        {
          "id": "10",
          "name": "AdaptiveResourceManager Integration SystemHealthMonitor Integration should handle SystemHealthMonitor unavailability gracefully",
          "location": {
            "start": {
              "column": 8,
              "line": 64
            }
          }
        },
        {
          "id": "11",
          "name": "AdaptiveResourceManager Integration End-to-End Resource Management Flow should complete full resource allocation and release cycle",
          "location": {
            "start": {
              "column": 8,
              "line": 86
            }
          }
        },
        {
          "id": "12",
          "name": "AdaptiveResourceManager Integration End-to-End Resource Management Flow should handle multiple concurrent resource allocations",
          "location": {
            "start": {
              "column": 8,
              "line": 109
            }
          }
        },
        {
          "id": "13",
          "name": "AdaptiveResourceManager Integration End-to-End Resource Management Flow should provide capacity analysis and scaling recommendations",
          "location": {
            "start": {
              "column": 8,
              "line": 146
            }
          }
        },
        {
          "id": "14",
          "name": "AdaptiveResourceManager Integration End-to-End Resource Management Flow should handle agent failover scenarios",
          "location": {
            "start": {
              "column": 8,
              "line": 156
            }
          }
        },
        {
          "id": "15",
          "name": "AdaptiveResourceManager Integration Load Balancing Integration should distribute load across multiple agents using different strategies",
          "location": {
            "start": {
              "column": 8,
              "line": 165
            }
          }
        },
        {
          "id": "16",
          "name": "AdaptiveResourceManager Integration Load Balancing Integration should track load distribution statistics",
          "location": {
            "start": {
              "column": 8,
              "line": 192
            }
          }
        },
        {
          "id": "17",
          "name": "AdaptiveResourceManager Integration Performance and Scalability should maintain performance under high load",
          "location": {
            "start": {
              "column": 8,
              "line": 201
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Integration tests for Adaptive Resource Manager\n *\n * Tests integration with SystemHealthMonitor and end-to-end resource management flow\n *\n * @author @darianrosebrook\n */\n\nimport { AdaptiveResourceManager } from \"@/resources/AdaptiveResourceManager\";\nimport { SystemHealthMonitor } from \"@/monitoring/SystemHealthMonitor\";\nimport { ResourceType, TaskPriority, LoadBalancingStrategy, type ResourceAllocationRequest } from \"@/types/resource-types\";\nimport { afterEach, beforeEach, describe, expect, it, jest } from \"@jest/globals\";\n\ndescribe(\"AdaptiveResourceManager Integration\", () => {\n  let resourceManager: AdaptiveResourceManager;\n  let healthMonitor: SystemHealthMonitor;\n\n  beforeEach(async () => {\n    // Initialize SystemHealthMonitor\n    healthMonitor = new SystemHealthMonitor({\n      collectionIntervalMs: 1000, // Faster for tests\n      healthCheckIntervalMs: 2000,\n      retentionPeriodMs: 10000,\n      enableCircuitBreaker: false, // Disable for tests\n    });\n\n    await healthMonitor.initialize();\n\n    // Initialize AdaptiveResourceManager\n    resourceManager = new AdaptiveResourceManager({\n      enabled: true,\n      monitoringIntervalMs: 1000,\n      loadBalancingStrategy: LoadBalancingStrategy.LEAST_LOADED,\n      enableDynamicRateLimiting: true,\n      enableAutoFailover: true,\n      maxAllocationDecisionMs: 50,\n      enableCapacityPlanning: true,\n    });\n\n    await resourceManager.initialize();\n    await resourceManager.start();\n  });\n\n  afterEach(async () => {\n    if (resourceManager) {\n      await resourceManager.stop();\n    }\n    if (healthMonitor) {\n      await healthMonitor.shutdown();\n    }\n  });\n\n  describe(\"SystemHealthMonitor Integration\", () => {\n    it(\"should integrate with SystemHealthMonitor for health metrics\", async () => {\n      // Get health metrics from SystemHealthMonitor\n      const healthMetrics = await healthMonitor.getHealthMetrics();\n      expect(healthMetrics).toBeDefined();\n      expect(healthMetrics.overallHealth).toBeDefined();\n      expect(healthMetrics.system).toBeDefined();\n      expect(healthMetrics.agents).toBeDefined();\n    });\n\n    it(\"should handle SystemHealthMonitor unavailability gracefully\", async () => {\n      // Shutdown health monitor to simulate unavailability\n      await healthMonitor.shutdown();\n\n      // Resource manager should still function\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      // Should not throw error even without health monitor\n      const result = await resourceManager.allocateResources(request);\n      expect(result).toBeDefined();\n      // Result may be successful or failed, but should not crash\n    });\n  });\n\n  describe(\"End-to-End Resource Management Flow\", () => {\n    it(\"should complete full resource allocation and release cycle\", async () => {\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.HIGH,\n        requiredResources: {\n          cpuPercent: 20,\n          memoryMb: 256,\n          networkMbps: 10,\n        },\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      // Allocate resources (may fail if no agents available, which is expected)\n      const allocationResult = await resourceManager.allocateResources(request);\n      expect(allocationResult).toBeDefined();\n      expect(allocationResult.requestId).toBe(\"req-1\");\n\n      // Release resources (should not throw even if allocation failed)\n      await expect(resourceManager.releaseResources(\"req-1\")).resolves.not.toThrow();\n    });\n\n    it(\"should handle multiple concurrent resource allocations\", async () => {\n      // Create multiple concurrent requests\n      const requests: ResourceAllocationRequest[] = [];\n      for (let i = 1; i <= 5; i++) {\n        requests.push({\n          requestId: `req-${i}`,\n          taskId: `task-${i}`,\n          priority: TaskPriority.MEDIUM,\n          requiredResources: {\n            cpuPercent: 10,\n            memoryMb: 128,\n            networkMbps: 5,\n          },\n          requestedAt: new Date(),\n          timeoutMs: 5000,\n        });\n      }\n\n      // Allocate all resources concurrently\n      const allocationPromises = requests.map((request) =>\n        resourceManager.allocateResources(request)\n      );\n\n      const results = await Promise.all(allocationPromises);\n\n      // All requests should be processed (may fail due to no agents, which is expected)\n      expect(results.length).toBe(5);\n      results.forEach((result) => {\n        expect(result).toBeDefined();\n        expect(result.requestId).toBeTruthy();\n      });\n\n      // Release all resources\n      const releasePromises = results.map((r) => resourceManager.releaseResources(r.requestId));\n      await Promise.all(releasePromises);\n    });\n\n    it(\"should provide capacity analysis and scaling recommendations\", async () => {\n      // Get capacity analysis\n      const capacityAnalysis = await resourceManager.analyzeCapacity();\n      expect(capacityAnalysis).toBeDefined();\n      expect(capacityAnalysis.totalCapacity).toBeDefined();\n      expect(capacityAnalysis.usedCapacity).toBeDefined();\n      expect(capacityAnalysis.availableCapacity).toBeDefined();\n      expect(capacityAnalysis.utilizationPercent).toBeGreaterThanOrEqual(0);\n    });\n\n    it(\"should handle agent failover scenarios\", async () => {\n      // Simulate agent failure and trigger failover\n      const failoverResult = await resourceManager.handleFailover(\"agent-1\", \"agent-2\");\n      expect(failoverResult.success).toBe(true);\n      expect(failoverResult.tasksTransferred).toBeGreaterThanOrEqual(0);\n    });\n  });\n\n  describe(\"Load Balancing Integration\", () => {\n    it(\"should distribute load across multiple agents using different strategies\", async () => {\n      // Test different load balancing strategies\n      const strategies = [\"round_robin\", \"least_loaded\", \"weighted\", \"priority_based\", \"random\"];\n\n      for (const strategy of strategies) {\n        const request: ResourceAllocationRequest = {\n          requestId: `req-${strategy}`,\n          taskId: `task-${strategy}`,\n          priority: TaskPriority.MEDIUM,\n          requiredResources: {\n            cpuPercent: 10,\n            memoryMb: 128,\n            networkMbps: 5,\n          },\n          requestedAt: new Date(),\n          timeoutMs: 5000,\n        };\n\n        const result = await resourceManager.allocateResources(request);\n        expect(result).toBeDefined();\n        expect(result.requestId).toBe(`req-${strategy}`);\n\n        // Release the resource\n        await resourceManager.releaseResources(`req-${strategy}`);\n      }\n    });\n\n    it(\"should track load distribution statistics\", async () => {\n      // Get load distribution statistics\n      const loadStats = await resourceManager.getLoadDistribution();\n      expect(loadStats).toBeDefined();\n      expect(loadStats.size).toBeGreaterThanOrEqual(0);\n    });\n  });\n\n  describe(\"Performance and Scalability\", () => {\n    it(\"should maintain performance under high load\", async () => {\n      const startTime = Date.now();\n      const numRequests = 10; // Reduced for integration test\n\n      // Create and allocate many resources quickly\n      const allocationPromises = [];\n      for (let i = 1; i <= numRequests; i++) {\n        const request: ResourceAllocationRequest = {\n          requestId: `req-${i}`,\n          taskId: `task-${i}`,\n          priority: TaskPriority.MEDIUM,\n          requiredResources: {\n            cpuPercent: 5,\n            memoryMb: 64,\n            networkMbps: 2,\n          },\n          requestedAt: new Date(),\n          timeoutMs: 5000,\n        };\n\n        allocationPromises.push(resourceManager.allocateResources(request));\n      }\n\n      const results = await Promise.all(allocationPromises);\n      const endTime = Date.now();\n\n      const avgTimePerRequest = (endTime - startTime) / numRequests;\n\n      console.log(`High Load Test - ${results.length}/${numRequests} processed, avg: ${avgTimePerRequest.toFixed(2)}ms per request`);\n\n      // All requests should be processed (may fail due to no agents, which is expected)\n      expect(results.length).toBe(numRequests);\n      // Average time per request should be reasonable\n      expect(avgTimePerRequest).toBeLessThan(100); // Less than 100ms per request\n\n      // Clean up\n      const releasePromises = results.map((r) => resourceManager.releaseResources(r.requestId));\n      await Promise.all(releasePromises);\n    }, 30000); // Extended timeout for performance test\n  });\n});\n"
    },
    "tests/unit/resources/ResourceAllocator.test.ts": {
      "tests": [
        {
          "id": "18",
          "name": "ResourceAllocator Resource Allocation should successfully allocate resources",
          "location": {
            "start": {
              "column": 8,
              "line": 64
            }
          }
        },
        {
          "id": "19",
          "name": "ResourceAllocator Resource Allocation should handle rate limit exceeded",
          "location": {
            "start": {
              "column": 8,
              "line": 82
            }
          }
        },
        {
          "id": "20",
          "name": "ResourceAllocator Resource Allocation should handle request timeout",
          "location": {
            "start": {
              "column": 8,
              "line": 102
            }
          }
        },
        {
          "id": "21",
          "name": "ResourceAllocator Resource Allocation should handle no available agents",
          "location": {
            "start": {
              "column": 8,
              "line": 119
            }
          }
        },
        {
          "id": "22",
          "name": "ResourceAllocator Resource Allocation should handle load balancer selection failure",
          "location": {
            "start": {
              "column": 8,
              "line": 139
            }
          }
        },
        {
          "id": "23",
          "name": "ResourceAllocator Resource Release should successfully release resources",
          "location": {
            "start": {
              "column": 8,
              "line": 161
            }
          }
        },
        {
          "id": "24",
          "name": "ResourceAllocator Resource Release should handle release of unknown allocation",
          "location": {
            "start": {
              "column": 8,
              "line": 180
            }
          }
        },
        {
          "id": "25",
          "name": "ResourceAllocator Statistics should track allocation statistics",
          "location": {
            "start": {
              "column": 8,
              "line": 187
            }
          }
        },
        {
          "id": "26",
          "name": "ResourceAllocator Statistics should track failed allocation statistics",
          "location": {
            "start": {
              "column": 8,
              "line": 205
            }
          }
        },
        {
          "id": "27",
          "name": "ResourceAllocator Configuration should initialize with default configuration",
          "location": {
            "start": {
              "column": 8,
              "line": 231
            }
          }
        },
        {
          "id": "28",
          "name": "ResourceAllocator Rate Limiting should respect rate limits",
          "location": {
            "start": {
              "column": 8,
              "line": 241
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Unit tests for ResourceAllocator\n *\n * @author @darianrosebrook\n */\n\nimport { ResourceAllocator } from \"@/resources/ResourceAllocator\";\nimport { LoadBalancer } from \"@/resources/LoadBalancer\";\nimport { ResourceMonitor } from \"@/resources/ResourceMonitor\";\nimport {\n  LoadBalancingStrategy,\n  ResourceType,\n  TaskPriority,\n  type ResourceAllocationRequest,\n  type ResourceAllocationResult,\n} from \"@/types/resource-types\";\nimport { beforeEach, describe, expect, it, jest } from \"@jest/globals\";\n\ndescribe(\"ResourceAllocator\", () => {\n  let monitor: ResourceMonitor;\n  let loadBalancer: LoadBalancer;\n  let allocator: ResourceAllocator;\n\n  beforeEach(async () => {\n    monitor = new ResourceMonitor();\n    loadBalancer = new LoadBalancer(monitor, LoadBalancingStrategy.LEAST_LOADED);\n    allocator = new ResourceAllocator(loadBalancer);\n\n    // Register test agents with the monitor\n    const cpu1Usage = {\n      type: ResourceType.CPU,\n      current: 20,\n      maximum: 100,\n      usagePercent: 20,\n      unit: \"%\",\n      timestamp: new Date(),\n      source: \"test\",\n    };\n\n    const cpu2Usage = {\n      type: ResourceType.CPU,\n      current: 40,\n      maximum: 100,\n      usagePercent: 40,\n      unit: \"%\",\n      timestamp: new Date(),\n      source: \"test\",\n    };\n\n    await monitor.recordUsage(\"agent-1\", cpu1Usage);\n    await monitor.recordUsage(\"agent-2\", cpu2Usage);\n\n    // Set task counts so agents are considered available\n    await monitor.updateTaskCount(\"agent-1\", 2);\n    await monitor.updateTaskCount(\"agent-2\", 5);\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe(\"Resource Allocation\", () => {\n    it(\"should successfully allocate resources\", async () => {\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const result = await allocator.allocate(request);\n\n      expect(result.success).toBe(true);\n      expect(result.assignedAgentId).toBeTruthy();\n      expect(result.requestId).toBe(\"req-1\");\n      expect(result.waitTimeMs).toBeGreaterThanOrEqual(0);\n    });\n\n    it(\"should handle rate limit exceeded\", async () => {\n      // Mock rate limit check to return false\n      jest.spyOn(allocator as any, \"checkRateLimit\").mockReturnValue(false);\n\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const result = await allocator.allocate(request);\n\n      expect(result.success).toBe(false);\n      expect(result.failureReason).toBe(\"Rate limit exceeded\");\n      expect(result.requestId).toBe(\"req-1\");\n    });\n\n    it(\"should handle request timeout\", async () => {\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(Date.now() - 10000), // 10 seconds ago\n        timeoutMs: 1000, // 1 second timeout (already expired)\n      };\n\n      const result = await allocator.allocate(request);\n\n      expect(result.success).toBe(false);\n      expect(result.failureReason).toBe(\"Request timeout\");\n      expect(result.requestId).toBe(\"req-1\");\n    });\n\n    it(\"should handle no available agents\", async () => {\n      // Mock getAvailableAgents to return empty array\n      jest.spyOn(allocator as any, \"getAvailableAgents\").mockResolvedValue([]);\n\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const result = await allocator.allocate(request);\n\n      expect(result.success).toBe(false);\n      expect(result.failureReason).toBe(\"No available agents\");\n      expect(result.requestId).toBe(\"req-1\");\n    });\n\n    it(\"should handle load balancer selection failure\", async () => {\n      // Mock load balancer to throw error\n      jest.spyOn(loadBalancer, \"selectAgent\").mockRejectedValue(new Error(\"Selection failed\"));\n\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const result = await allocator.allocate(request);\n\n      expect(result.success).toBe(false);\n      expect(result.failureReason).toBe(\"Selection failed\");\n      expect(result.requestId).toBe(\"req-1\");\n    });\n  });\n\n  describe(\"Resource Release\", () => {\n    it(\"should successfully release resources\", async () => {\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      // First allocate\n      const allocationResult = await allocator.allocate(request);\n      expect(allocationResult.success).toBe(true);\n\n      // Then release\n      await allocator.release(\"req-1\");\n      // Release method returns void, so we just verify it doesn't throw\n    });\n\n    it(\"should handle release of unknown allocation\", async () => {\n      // Release method returns void, so we just verify it doesn't throw\n      await expect(allocator.release(\"unknown-req\")).resolves.not.toThrow();\n    });\n  });\n\n  describe(\"Statistics\", () => {\n    it(\"should track allocation statistics\", async () => {\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      await allocator.allocate(request);\n\n      const stats = allocator.getAllocationStats();\n      expect(stats.totalRequests).toBe(1);\n      expect(stats.successfulAllocations).toBe(1);\n      expect(stats.failedAllocations).toBe(0);\n    });\n\n    it(\"should track failed allocation statistics\", async () => {\n      // Create allocator with very low rate limit to force failure\n      const lowRateAllocator = new ResourceAllocator(loadBalancer, {\n        maxRequests: 0, // No requests allowed\n        windowMs: 1000,\n      });\n\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      await lowRateAllocator.allocate(request);\n\n      const stats = lowRateAllocator.getAllocationStats();\n      expect(stats.totalRequests).toBe(1);\n      expect(stats.successfulAllocations).toBe(0);\n      expect(stats.failedAllocations).toBe(1);\n    });\n  });\n\n  describe(\"Configuration\", () => {\n    it(\"should initialize with default configuration\", () => {\n      const stats = allocator.getAllocationStats();\n      expect(stats).toBeDefined();\n      expect(stats.totalRequests).toBe(0);\n      expect(stats.successfulAllocations).toBe(0);\n      expect(stats.failedAllocations).toBe(0);\n    });\n  });\n\n  describe(\"Rate Limiting\", () => {\n    it(\"should respect rate limits\", async () => {\n      // Create allocator with low rate limit\n      const lowRateAllocator = new ResourceAllocator(loadBalancer, {\n        maxRequests: 1,\n        windowMs: 1000,\n      });\n\n      const request1: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const request2: ResourceAllocationRequest = {\n        requestId: \"req-2\",\n        taskId: \"task-2\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      // First request should succeed\n      const result1 = await lowRateAllocator.allocate(request1);\n      expect(result1.success).toBe(true);\n\n      // Second request should fail due to rate limit\n      const result2 = await lowRateAllocator.allocate(request2);\n      expect(result2.success).toBe(false);\n      expect(result2.failureReason).toBe(\"Rate limit exceeded\");\n    });\n  });\n});\n"
    },
    "tests/unit/resources/LoadBalancer.test.ts": {
      "tests": [
        {
          "id": "29",
          "name": "LoadBalancer Agent Selection should select agent using least loaded strategy",
          "location": {
            "start": {
              "column": 8,
              "line": 60
            }
          }
        },
        {
          "id": "30",
          "name": "LoadBalancer Agent Selection should select agent using round robin strategy",
          "location": {
            "start": {
              "column": 8,
              "line": 80
            }
          }
        },
        {
          "id": "31",
          "name": "LoadBalancer Agent Selection should select agent using weighted strategy",
          "location": {
            "start": {
              "column": 8,
              "line": 102
            }
          }
        },
        {
          "id": "32",
          "name": "LoadBalancer Agent Selection should select agent using priority based strategy",
          "location": {
            "start": {
              "column": 8,
              "line": 124
            }
          }
        },
        {
          "id": "33",
          "name": "LoadBalancer Agent Selection should select agent using random strategy",
          "location": {
            "start": {
              "column": 8,
              "line": 146
            }
          }
        },
        {
          "id": "34",
          "name": "LoadBalancer Agent Selection should throw error for unknown strategy",
          "location": {
            "start": {
              "column": 8,
              "line": 168
            }
          }
        },
        {
          "id": "35",
          "name": "LoadBalancer Agent Selection should throw error for empty agent list",
          "location": {
            "start": {
              "column": 8,
              "line": 184
            }
          }
        },
        {
          "id": "36",
          "name": "LoadBalancer Strategy Management should get current strategy",
          "location": {
            "start": {
              "column": 8,
              "line": 199
            }
          }
        },
        {
          "id": "37",
          "name": "LoadBalancer Strategy Management should update strategy",
          "location": {
            "start": {
              "column": 8,
              "line": 204
            }
          }
        },
        {
          "id": "38",
          "name": "LoadBalancer Load Distribution should track load distribution",
          "location": {
            "start": {
              "column": 8,
              "line": 211
            }
          }
        },
        {
          "id": "39",
          "name": "LoadBalancer Load Distribution should reset load distribution",
          "location": {
            "start": {
              "column": 8,
              "line": 227
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Unit tests for LoadBalancer\n *\n * @author @darianrosebrook\n */\n\nimport { LoadBalancer } from \"@/resources/LoadBalancer\";\nimport { ResourceMonitor } from \"@/resources/ResourceMonitor\";\nimport {\n  LoadBalancingStrategy,\n  ResourceType,\n  TaskPriority,\n  type ResourceAllocationRequest,\n} from \"@/types/resource-types\";\nimport { beforeEach, describe, expect, it } from \"@jest/globals\";\n\ndescribe(\"LoadBalancer\", () => {\n  let monitor: ResourceMonitor;\n  let balancer: LoadBalancer;\n\n  beforeEach(async () => {\n    monitor = new ResourceMonitor();\n    balancer = new LoadBalancer(monitor, LoadBalancingStrategy.LEAST_LOADED);\n\n    // Register test agents with the monitor\n    const cpu1Usage = {\n      type: ResourceType.CPU,\n      current: 20,\n      maximum: 100,\n      usagePercent: 20,\n      unit: \"%\",\n      timestamp: new Date(),\n      source: \"test\",\n    };\n\n    const cpu2Usage = {\n      type: ResourceType.CPU,\n      current: 40,\n      maximum: 100,\n      usagePercent: 40,\n      unit: \"%\",\n      timestamp: new Date(),\n      source: \"test\",\n    };\n\n    await monitor.recordUsage(\"agent-1\", cpu1Usage);\n    await monitor.recordUsage(\"agent-2\", cpu2Usage);\n\n    // Set task counts so agents are considered available\n    await monitor.updateTaskCount(\"agent-1\", 2);\n    await monitor.updateTaskCount(\"agent-2\", 5);\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe(\"Agent Selection\", () => {\n    it(\"should select agent using least loaded strategy\", async () => {\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const decision = await balancer.selectAgent(request, [\n        \"agent-1\",\n        \"agent-2\",\n      ]);\n\n      expect(decision.selectedAgentId).toBeTruthy();\n      expect(decision.strategy).toBe(LoadBalancingStrategy.LEAST_LOADED);\n      expect(decision.decisionDurationMs).toBeGreaterThanOrEqual(0); // Can be 0 for very fast decisions\n    });\n\n    it(\"should select agent using round robin strategy\", async () => {\n      balancer.setStrategy(LoadBalancingStrategy.ROUND_ROBIN);\n      \n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const decision = await balancer.selectAgent(request, [\n        \"agent-1\",\n        \"agent-2\",\n      ]);\n\n      expect(decision.selectedAgentId).toBeTruthy();\n      expect(decision.strategy).toBe(LoadBalancingStrategy.ROUND_ROBIN);\n      expect(decision.decisionDurationMs).toBeGreaterThanOrEqual(0);\n    });\n\n    it(\"should select agent using weighted strategy\", async () => {\n      balancer.setStrategy(LoadBalancingStrategy.WEIGHTED);\n      \n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const decision = await balancer.selectAgent(request, [\n        \"agent-1\",\n        \"agent-2\",\n      ]);\n\n      expect(decision.selectedAgentId).toBeTruthy();\n      expect(decision.strategy).toBe(LoadBalancingStrategy.WEIGHTED);\n      expect(decision.decisionDurationMs).toBeGreaterThanOrEqual(0);\n    });\n\n    it(\"should select agent using priority based strategy\", async () => {\n      balancer.setStrategy(LoadBalancingStrategy.PRIORITY_BASED);\n      \n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.HIGH,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const decision = await balancer.selectAgent(request, [\n        \"agent-1\",\n        \"agent-2\",\n      ]);\n\n      expect(decision.selectedAgentId).toBeTruthy();\n      expect(decision.strategy).toBe(LoadBalancingStrategy.PRIORITY_BASED);\n      expect(decision.decisionDurationMs).toBeGreaterThanOrEqual(0);\n    });\n\n    it(\"should select agent using random strategy\", async () => {\n      balancer.setStrategy(LoadBalancingStrategy.RANDOM);\n      \n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const decision = await balancer.selectAgent(request, [\n        \"agent-1\",\n        \"agent-2\",\n      ]);\n\n      expect(decision.selectedAgentId).toBeTruthy();\n      expect(decision.strategy).toBe(LoadBalancingStrategy.RANDOM);\n      expect(decision.decisionDurationMs).toBeGreaterThanOrEqual(0);\n    });\n\n    it(\"should throw error for unknown strategy\", async () => {\n      // @ts-expect-error Testing invalid strategy\n      balancer.setStrategy(\"INVALID_STRATEGY\");\n      \n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      await expect(balancer.selectAgent(request, [\"agent-1\"])).rejects.toThrow(\"Unknown load balancing strategy\");\n    });\n\n    it(\"should throw error for empty agent list\", async () => {\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      await expect(balancer.selectAgent(request, [])).rejects.toThrow();\n    });\n  });\n\n  describe(\"Strategy Management\", () => {\n    it(\"should get current strategy\", () => {\n      const strategy = balancer.getStrategy();\n      expect(strategy).toBe(LoadBalancingStrategy.LEAST_LOADED);\n    });\n\n    it(\"should update strategy\", () => {\n      balancer.setStrategy(LoadBalancingStrategy.ROUND_ROBIN);\n      expect(balancer.getStrategy()).toBe(LoadBalancingStrategy.ROUND_ROBIN);\n    });\n  });\n\n  describe(\"Load Distribution\", () => {\n    it(\"should track load distribution\", async () => {\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      await balancer.selectAgent(request, [\"agent-1\", \"agent-2\"]);\n\n      const distribution = await balancer.getLoadDistribution();\n      expect(distribution.size).toBeGreaterThan(0);\n    });\n\n    it(\"should reset load distribution\", async () => {\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      await balancer.selectAgent(request, [\"agent-1\"]);\n      balancer.resetLoadDistribution();\n\n      const distribution = await balancer.getLoadDistribution();\n      expect(distribution.size).toBe(0);\n    });\n  });\n});\n"
    },
    "tests/unit/resources/ResourceMonitor.test.ts": {
      "tests": [
        {
          "id": "40",
          "name": "ResourceMonitor Resource Tracking should record resource usage",
          "location": {
            "start": {
              "column": 8,
              "line": 24
            }
          }
        },
        {
          "id": "41",
          "name": "ResourceMonitor Resource Tracking should track multiple resource types",
          "location": {
            "start": {
              "column": 8,
              "line": 42
            }
          }
        },
        {
          "id": "42",
          "name": "ResourceMonitor Resource Tracking should update task count",
          "location": {
            "start": {
              "column": 8,
              "line": 68
            }
          }
        },
        {
          "id": "43",
          "name": "ResourceMonitor Health Status should compute healthy status",
          "location": {
            "start": {
              "column": 8,
              "line": 87
            }
          }
        },
        {
          "id": "44",
          "name": "ResourceMonitor Health Status should detect degraded status",
          "location": {
            "start": {
              "column": 8,
              "line": 102
            }
          }
        },
        {
          "id": "45",
          "name": "ResourceMonitor Health Status should detect unhealthy status",
          "location": {
            "start": {
              "column": 8,
              "line": 117
            }
          }
        },
        {
          "id": "46",
          "name": "ResourceMonitor Pool Statistics should get pool statistics",
          "location": {
            "start": {
              "column": 8,
              "line": 134
            }
          }
        },
        {
          "id": "47",
          "name": "ResourceMonitor Pool Statistics should track idle agents",
          "location": {
            "start": {
              "column": 8,
              "line": 153
            }
          }
        },
        {
          "id": "48",
          "name": "ResourceMonitor Agent Management should remove agent",
          "location": {
            "start": {
              "column": 8,
              "line": 172
            }
          }
        },
        {
          "id": "49",
          "name": "ResourceMonitor Agent Management should get all agent resources",
          "location": {
            "start": {
              "column": 8,
              "line": 189
            }
          }
        },
        {
          "id": "50",
          "name": "ResourceMonitor Lifecycle should start and stop monitoring",
          "location": {
            "start": {
              "column": 8,
              "line": 216
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Unit tests for ResourceMonitor\n *\n * @author @darianrosebrook\n */\n\nimport { ResourceMonitor } from \"@/resources/ResourceMonitor\";\nimport { ResourceType, type ResourceUsage } from \"@/types/resource-types\";\nimport { afterEach, beforeEach, describe, expect, it } from \"@jest/globals\";\n\ndescribe(\"ResourceMonitor\", () => {\n  let monitor: ResourceMonitor;\n\n  beforeEach(() => {\n    monitor = new ResourceMonitor();\n  });\n\n  afterEach(async () => {\n    await monitor.stop();\n  });\n\n  describe(\"Resource Tracking\", () => {\n    it(\"should record resource usage\", async () => {\n      const usage: ResourceUsage = {\n        type: ResourceType.CPU,\n        current: 50,\n        maximum: 100,\n        usagePercent: 50,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      };\n\n      await monitor.recordUsage(\"agent-1\", usage);\n\n      const profile = await monitor.getAgentResources(\"agent-1\");\n      expect(profile).not.toBeNull();\n      expect(profile?.cpuUsage.usagePercent).toBe(50);\n    });\n\n    it(\"should track multiple resource types\", async () => {\n      await monitor.recordUsage(\"agent-1\", {\n        type: ResourceType.CPU,\n        current: 50,\n        maximum: 100,\n        usagePercent: 50,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      });\n\n      await monitor.recordUsage(\"agent-1\", {\n        type: ResourceType.MEMORY,\n        current: 512,\n        maximum: 1024,\n        usagePercent: 50,\n        unit: \"MB\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      });\n\n      const profile = await monitor.getAgentResources(\"agent-1\");\n      expect(profile?.cpuUsage.usagePercent).toBe(50);\n      expect(profile?.memoryUsage.usagePercent).toBe(50);\n    });\n\n    it(\"should update task count\", async () => {\n      await monitor.recordUsage(\"agent-1\", {\n        type: ResourceType.CPU,\n        current: 50,\n        maximum: 100,\n        usagePercent: 50,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      });\n\n      await monitor.updateTaskCount(\"agent-1\", 5);\n\n      const profile = await monitor.getAgentResources(\"agent-1\");\n      expect(profile?.currentTaskCount).toBe(5);\n    });\n  });\n\n  describe(\"Health Status\", () => {\n    it(\"should compute healthy status\", async () => {\n      await monitor.recordUsage(\"agent-1\", {\n        type: ResourceType.CPU,\n        current: 50,\n        maximum: 100,\n        usagePercent: 50,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      });\n\n      const profile = await monitor.getAgentResources(\"agent-1\");\n      expect(profile?.healthStatus).toBe(\"healthy\");\n    });\n\n    it(\"should detect degraded status\", async () => {\n      await monitor.recordUsage(\"agent-1\", {\n        type: ResourceType.CPU,\n        current: 75,\n        maximum: 100,\n        usagePercent: 75,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      });\n\n      const profile = await monitor.getAgentResources(\"agent-1\");\n      expect(profile?.healthStatus).toBe(\"degraded\");\n    });\n\n    it(\"should detect unhealthy status\", async () => {\n      await monitor.recordUsage(\"agent-1\", {\n        type: ResourceType.CPU,\n        current: 90,\n        maximum: 100,\n        usagePercent: 90,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      });\n\n      const profile = await monitor.getAgentResources(\"agent-1\");\n      expect(profile?.healthStatus).toBe(\"unhealthy\");\n    });\n  });\n\n  describe(\"Pool Statistics\", () => {\n    it(\"should get pool statistics\", async () => {\n      await monitor.recordUsage(\"agent-1\", {\n        type: ResourceType.CPU,\n        current: 50,\n        maximum: 100,\n        usagePercent: 50,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      });\n\n      await monitor.updateTaskCount(\"agent-1\", 3);\n\n      const stats = await monitor.getPoolStats();\n      expect(stats.totalAgents).toBe(1);\n      expect(stats.activeAgents).toBe(1);\n      expect(stats.tasksInProgress).toBe(3);\n    });\n\n    it(\"should track idle agents\", async () => {\n      await monitor.recordUsage(\"agent-1\", {\n        type: ResourceType.CPU,\n        current: 10,\n        maximum: 100,\n        usagePercent: 10,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      });\n\n      await monitor.updateTaskCount(\"agent-1\", 0);\n\n      const stats = await monitor.getPoolStats();\n      expect(stats.idleAgents).toBe(1);\n    });\n  });\n\n  describe(\"Agent Management\", () => {\n    it(\"should remove agent\", async () => {\n      await monitor.recordUsage(\"agent-1\", {\n        type: ResourceType.CPU,\n        current: 50,\n        maximum: 100,\n        usagePercent: 50,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      });\n\n      await monitor.removeAgent(\"agent-1\");\n\n      const profile = await monitor.getAgentResources(\"agent-1\");\n      expect(profile).toBeNull();\n    });\n\n    it(\"should get all agent resources\", async () => {\n      await monitor.recordUsage(\"agent-1\", {\n        type: ResourceType.CPU,\n        current: 50,\n        maximum: 100,\n        usagePercent: 50,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-1\",\n      });\n\n      await monitor.recordUsage(\"agent-2\", {\n        type: ResourceType.CPU,\n        current: 60,\n        maximum: 100,\n        usagePercent: 60,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"agent-2\",\n      });\n\n      const allProfiles = await monitor.getAllAgentResources();\n      expect(allProfiles).toHaveLength(2);\n    });\n  });\n\n  describe(\"Lifecycle\", () => {\n    it(\"should start and stop monitoring\", async () => {\n      await monitor.start();\n      await monitor.stop();\n      // Should not throw\n    });\n  });\n});\n"
    },
    "tests/unit/resources/AdaptiveResourceManager.test.ts": {
      "tests": [
        {
          "id": "51",
          "name": "AdaptiveResourceManager Initialization should initialize manager",
          "location": {
            "start": {
              "column": 8,
              "line": 27
            }
          }
        },
        {
          "id": "52",
          "name": "AdaptiveResourceManager Initialization should start and stop manager",
          "location": {
            "start": {
              "column": 8,
              "line": 34
            }
          }
        },
        {
          "id": "53",
          "name": "AdaptiveResourceManager Resource Allocation should allocate resources",
          "location": {
            "start": {
              "column": 8,
              "line": 49
            }
          }
        },
        {
          "id": "54",
          "name": "AdaptiveResourceManager Resource Allocation should release resources",
          "location": {
            "start": {
              "column": 8,
              "line": 70
            }
          }
        },
        {
          "id": "55",
          "name": "AdaptiveResourceManager Capacity Analysis should analyze capacity",
          "location": {
            "start": {
              "column": 8,
              "line": 90
            }
          }
        },
        {
          "id": "56",
          "name": "AdaptiveResourceManager Statistics should get pool statistics",
          "location": {
            "start": {
              "column": 8,
              "line": 102
            }
          }
        },
        {
          "id": "57",
          "name": "AdaptiveResourceManager Statistics should get allocation statistics",
          "location": {
            "start": {
              "column": 8,
              "line": 110
            }
          }
        },
        {
          "id": "58",
          "name": "AdaptiveResourceManager Configuration should get configuration",
          "location": {
            "start": {
              "column": 8,
              "line": 120
            }
          }
        },
        {
          "id": "59",
          "name": "AdaptiveResourceManager Configuration should update configuration",
          "location": {
            "start": {
              "column": 8,
              "line": 127
            }
          }
        },
        {
          "id": "60",
          "name": "AdaptiveResourceManager Failover should handle failover",
          "location": {
            "start": {
              "column": 8,
              "line": 138
            }
          }
        },
        {
          "id": "61",
          "name": "AdaptiveResourceManager Failover should track failover history",
          "location": {
            "start": {
              "column": 8,
              "line": 148
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Unit tests for AdaptiveResourceManager\n *\n * @author @darianrosebrook\n */\n\nimport { AdaptiveResourceManager } from \"@/resources/AdaptiveResourceManager\";\nimport {\n  TaskPriority,\n  type ResourceAllocationRequest,\n} from \"@/types/resource-types\";\nimport { afterEach, beforeEach, describe, expect, it } from \"@jest/globals\";\n\ndescribe(\"AdaptiveResourceManager\", () => {\n  let manager: AdaptiveResourceManager;\n\n  beforeEach(() => {\n    manager = new AdaptiveResourceManager();\n  });\n\n  afterEach(async () => {\n    await manager.stop();\n  });\n\n  describe(\"Initialization\", () => {\n    it(\"should initialize manager\", async () => {\n      await manager.initialize();\n\n      const status = manager.getHealthStatus();\n      expect(status).toBeDefined();\n    });\n\n    it(\"should start and stop manager\", async () => {\n      await manager.initialize();\n      await manager.start();\n\n      let status = manager.getHealthStatus();\n      expect(status.isRunning).toBe(true);\n\n      await manager.stop();\n\n      status = manager.getHealthStatus();\n      expect(status.isRunning).toBe(false);\n    });\n  });\n\n  describe(\"Resource Allocation\", () => {\n    it(\"should allocate resources\", async () => {\n      await manager.initialize();\n\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {\n          cpuPercent: 20,\n          memoryMb: 256,\n        },\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      const result = await manager.allocateResources(request);\n\n      expect(result.requestId).toBe(\"req-1\");\n      expect(result.success).toBeDefined();\n    });\n\n    it(\"should release resources\", async () => {\n      await manager.initialize();\n\n      const request: ResourceAllocationRequest = {\n        requestId: \"req-1\",\n        taskId: \"task-1\",\n        priority: TaskPriority.MEDIUM,\n        requiredResources: {},\n        requestedAt: new Date(),\n        timeoutMs: 5000,\n      };\n\n      await manager.allocateResources(request);\n      await manager.releaseResources(\"req-1\");\n\n      // Should not throw\n    });\n  });\n\n  describe(\"Capacity Analysis\", () => {\n    it(\"should analyze capacity\", async () => {\n      await manager.initialize();\n\n      const analysis = await manager.analyzeCapacity();\n\n      expect(analysis.timestamp).toBeInstanceOf(Date);\n      expect(analysis.utilizationPercent).toBeGreaterThanOrEqual(0);\n      expect(analysis.scalingRecommendation).toBeDefined();\n    });\n  });\n\n  describe(\"Statistics\", () => {\n    it(\"should get pool statistics\", async () => {\n      await manager.initialize();\n\n      const stats = await manager.getPoolStatistics();\n\n      expect(stats.totalAgents).toBeGreaterThanOrEqual(0);\n    });\n\n    it(\"should get allocation statistics\", async () => {\n      await manager.initialize();\n\n      const stats = manager.getAllocationStatistics();\n\n      expect(stats.totalRequests).toBeGreaterThanOrEqual(0);\n    });\n  });\n\n  describe(\"Configuration\", () => {\n    it(\"should get configuration\", () => {\n      const config = manager.getConfig();\n\n      expect(config.enabled).toBeDefined();\n      expect(config.loadBalancingStrategy).toBeDefined();\n    });\n\n    it(\"should update configuration\", () => {\n      manager.updateConfig({\n        monitoringIntervalMs: 10000,\n      });\n\n      const config = manager.getConfig();\n      expect(config.monitoringIntervalMs).toBe(10000);\n    });\n  });\n\n  describe(\"Failover\", () => {\n    it(\"should handle failover\", async () => {\n      await manager.initialize();\n\n      const event = await manager.handleFailover(\"agent-1\", \"agent-2\");\n\n      expect(event.eventId).toBeTruthy();\n      expect(event.failedAgentId).toBe(\"agent-1\");\n      expect(event.backupAgentId).toBe(\"agent-2\");\n    });\n\n    it(\"should track failover history\", async () => {\n      await manager.initialize();\n\n      await manager.handleFailover(\"agent-1\", \"agent-2\");\n\n      const history = manager.getFailoverHistory(10);\n      expect(history.length).toBeGreaterThanOrEqual(1);\n    });\n  });\n});\n"
    },
    "tests/integration/optimization/RuntimeOptimizer.integration.test.ts": {
      "tests": [
        {
          "id": "62",
          "name": "RuntimeOptimizer Integration SystemHealthMonitor Integration should integrate with SystemHealthMonitor for health metrics",
          "location": {
            "start": {
              "column": 8,
              "line": 59
            }
          }
        },
        {
          "id": "63",
          "name": "RuntimeOptimizer Integration SystemHealthMonitor Integration should detect performance bottlenecks from system metrics",
          "location": {
            "start": {
              "column": 8,
              "line": 81
            }
          }
        },
        {
          "id": "64",
          "name": "RuntimeOptimizer Integration SystemHealthMonitor Integration should provide optimization recommendations based on system health",
          "location": {
            "start": {
              "column": 8,
              "line": 112
            }
          }
        },
        {
          "id": "65",
          "name": "RuntimeOptimizer Integration End-to-End Optimization Flow should complete full optimization cycle",
          "location": {
            "start": {
              "column": 8,
              "line": 159
            }
          }
        },
        {
          "id": "66",
          "name": "RuntimeOptimizer Integration End-to-End Optimization Flow should handle concurrent metric collection",
          "location": {
            "start": {
              "column": 8,
              "line": 283
            }
          }
        },
        {
          "id": "67",
          "name": "RuntimeOptimizer Integration Error Handling and Graceful Degradation should handle metric recording errors gracefully",
          "location": {
            "start": {
              "column": 8,
              "line": 308
            }
          }
        },
        {
          "id": "68",
          "name": "RuntimeOptimizer Integration Error Handling and Graceful Degradation should continue operating when optimization engine is disabled",
          "location": {
            "start": {
              "column": 8,
              "line": 328
            }
          }
        },
        {
          "id": "69",
          "name": "RuntimeOptimizer Integration Performance and Resource Usage should maintain low overhead during operation",
          "location": {
            "start": {
              "column": 8,
              "line": 348
            }
          }
        },
        {
          "id": "70",
          "name": "RuntimeOptimizer Integration Performance and Resource Usage should complete analysis within performance budget",
          "location": {
            "start": {
              "column": 8,
              "line": 378
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Integration tests for Runtime Optimization Engine\n *\n * Tests integration with SystemHealthMonitor and end-to-end optimization flow\n *\n * @author @darianrosebrook\n */\n\nimport { SystemHealthMonitor } from \"@/monitoring/SystemHealthMonitor\";\nimport { PerformanceMonitor } from \"@/optimization/PerformanceMonitor\";\nimport { RuntimeOptimizer } from \"@/optimization/RuntimeOptimizer\";\nimport { MetricType, type PerformanceMetric } from \"@/types/optimization-types\";\nimport { afterEach, beforeEach, describe, expect, it } from \"@jest/globals\";\n\ndescribe(\"RuntimeOptimizer Integration\", () => {\n  let optimizer: RuntimeOptimizer;\n  let performanceMonitor: PerformanceMonitor;\n  let healthMonitor: SystemHealthMonitor;\n\n  beforeEach(async () => {\n    // Initialize SystemHealthMonitor\n    healthMonitor = new SystemHealthMonitor({\n      collectionIntervalMs: 1000, // Faster for tests\n      healthCheckIntervalMs: 2000,\n      retentionPeriodMs: 10000,\n      enableCircuitBreaker: false, // Disable for tests\n    });\n\n    await healthMonitor.initialize();\n\n    // Initialize RuntimeOptimizer with integration\n    optimizer = new RuntimeOptimizer({\n      enabled: true,\n      collectionIntervalMs: 500,\n      analysisWindowMs: 2000,\n      minDataPointsForTrend: 5, // Lower threshold for tests\n    });\n\n    await optimizer.initialize();\n\n    // Get access to the internal performance monitor for testing\n    performanceMonitor = (optimizer as any).performanceMonitor;\n  });\n\n  afterEach(async () => {\n    if (optimizer) {\n      await optimizer.stop();\n    }\n    if (performanceMonitor) {\n      await performanceMonitor.stop();\n    }\n    if (healthMonitor) {\n      await healthMonitor.shutdown();\n    }\n  });\n\n  describe(\"SystemHealthMonitor Integration\", () => {\n    it(\"should integrate with SystemHealthMonitor for health metrics\", async () => {\n      // Start both systems\n      await optimizer.start();\n      // SystemHealthMonitor starts automatically after initialize()\n\n      // Wait for initial data collection\n      await new Promise((resolve) => setTimeout(resolve, 1500));\n\n      // Get health metrics from SystemHealthMonitor\n      const healthMetrics = await healthMonitor.getHealthMetrics();\n      expect(healthMetrics).toBeDefined();\n      expect(healthMetrics.system).toBeDefined();\n      expect(healthMetrics.overallHealth).toBeGreaterThanOrEqual(0);\n      expect(healthMetrics.overallHealth).toBeLessThanOrEqual(1);\n\n      // Get optimization analysis\n      const analysis = await optimizer.analyze();\n      expect(analysis).toBeDefined();\n      expect(analysis.healthScore).toBeDefined();\n      expect(analysis.bottlenecks).toBeDefined();\n    });\n\n    it(\"should detect performance bottlenecks from system metrics\", async () => {\n      await optimizer.start();\n\n      // Simulate high CPU usage by recording metrics\n      const highCpuMetric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 95, // Above threshold\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"system-test\",\n      };\n\n      // Record multiple metrics to trigger analysis\n      for (let i = 0; i < 5; i++) {\n        await performanceMonitor.recordMetric(highCpuMetric);\n        await new Promise((resolve) => setTimeout(resolve, 100));\n      }\n\n      // Wait for analysis\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      const analysis = await optimizer.analyze();\n      expect(analysis.bottlenecks.length).toBeGreaterThan(0);\n\n      const cpuBottleneck = analysis.bottlenecks.find(\n        (b) => b.metricType === MetricType.CPU\n      );\n      expect(cpuBottleneck).toBeDefined();\n      expect(cpuBottleneck?.severity).toBeDefined();\n    });\n\n    it(\"should provide optimization recommendations based on system health\", async () => {\n      await optimizer.start();\n\n      // Simulate multiple performance issues\n      const metrics: PerformanceMetric[] = [\n        {\n          type: MetricType.CPU,\n          value: 90,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"cpu-intensive-task\",\n        },\n        {\n          type: MetricType.MEMORY,\n          value: 85,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"memory-intensive-task\",\n        },\n        {\n          type: MetricType.LATENCY,\n          value: 2000,\n          unit: \"ms\",\n          timestamp: new Date(),\n          source: \"slow-api\",\n        },\n      ];\n\n      // Record metrics\n      for (const metric of metrics) {\n        await performanceMonitor.recordMetric(metric);\n        await new Promise((resolve) => setTimeout(resolve, 50));\n      }\n\n      // Wait for analysis\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      const analysis = await optimizer.analyze();\n      expect(analysis.recommendations.length).toBeGreaterThan(0);\n\n      // Check that recommendations are actionable\n      const recommendations = analysis.recommendations;\n      expect(recommendations.every((r) => r.description && r.type)).toBe(true);\n    });\n  });\n\n  describe(\"End-to-End Optimization Flow\", () => {\n    it(\"should complete full optimization cycle\", async () => {\n      await optimizer.start();\n\n      // Phase 1: Record baseline metrics\n      const baselineMetrics: PerformanceMetric[] = [\n        {\n          type: MetricType.CPU,\n          value: 50,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"baseline\",\n        },\n        {\n          type: MetricType.MEMORY,\n          value: 60,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"baseline\",\n        },\n      ];\n\n      for (const metric of baselineMetrics) {\n        await performanceMonitor.recordMetric(metric);\n      }\n\n      // Phase 2: Simulate performance degradation\n      const degradedMetrics: PerformanceMetric[] = [\n        {\n          type: MetricType.CPU,\n          value: 95,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"degraded\",\n        },\n        {\n          type: MetricType.MEMORY,\n          value: 90,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"degraded\",\n        },\n        {\n          type: MetricType.LATENCY,\n          value: 5000,\n          unit: \"ms\",\n          timestamp: new Date(),\n          source: \"degraded\",\n        },\n      ];\n\n      for (const metric of degradedMetrics) {\n        await performanceMonitor.recordMetric(metric);\n        await new Promise((resolve) => setTimeout(resolve, 100));\n      }\n\n      // Phase 3: Wait for automatic analysis to complete\n      await new Promise((resolve) => setTimeout(resolve, 1500));\n\n      // Get the last analysis results (we'll need to add this method)\n      const analysis = await optimizer.analyze();\n\n      // Verify analysis results\n      expect(analysis.healthScore).toBeLessThan(80); // Should be degraded (percentage)\n      expect(analysis.bottlenecks.length).toBeGreaterThan(0);\n      expect(analysis.recommendations.length).toBeGreaterThan(0);\n      // Note: trends might be empty if not enough data points\n      // expect(analysis.trends.length).toBeGreaterThan(0);\n\n      // Verify bottleneck detection\n      const cpuBottleneck = analysis.bottlenecks.find(\n        (b) => b.metricType === MetricType.CPU\n      );\n      expect(cpuBottleneck).toBeDefined();\n      expect(cpuBottleneck?.currentValue).toBeGreaterThan(80);\n\n      // Verify recommendations\n      const recommendations = analysis.recommendations;\n      expect(\n        recommendations.some(\n          (r) =>\n            r.description.toLowerCase().includes(\"cpu\") ||\n            r.description.toLowerCase().includes(\"memory\") ||\n            r.description.toLowerCase().includes(\"performance\")\n        )\n      ).toBe(true);\n    });\n\n    it(\"should track performance trends over time\", async () => {\n      await optimizer.start();\n\n      // Record metrics over time to create trends\n      const timePoints = 10; // More than minDataPointsForTrend (5)\n      const now = Date.now();\n\n      for (let i = 0; i < timePoints; i++) {\n        const metric: PerformanceMetric = {\n          type: MetricType.CPU,\n          value: 50 + i * 5, // Increasing CPU usage\n          unit: \"%\",\n          timestamp: new Date(now - (timePoints - i) * 100), // Within analysis window (2s)\n          source: \"trend-test\", // Same source for grouping\n        };\n\n        await performanceMonitor.recordMetric(metric);\n        await new Promise((resolve) => setTimeout(resolve, 50));\n      }\n\n      // Wait for trend analysis\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      const trends = await optimizer.getPerformanceTrends();\n\n      // Trends might be empty if not enough data points, so let's be more flexible\n      if (trends.length > 0) {\n        const cpuTrend = trends.find((t) => t.metricType === MetricType.CPU);\n        expect(cpuTrend).toBeDefined();\n        expect(cpuTrend?.averageValue).toBeDefined();\n        expect(cpuTrend?.standardDeviation).toBeDefined();\n      } else {\n        // If no trends, at least verify the method works\n        expect(Array.isArray(trends)).toBe(true);\n      }\n    });\n\n    it(\"should handle concurrent metric collection\", async () => {\n      await optimizer.start();\n\n      // Simulate concurrent metric recording\n      const concurrentPromises = Array.from({ length: 20 }, (_, i) => {\n        const metric: PerformanceMetric = {\n          type: MetricType.CPU,\n          value: 60 + (i % 30),\n          unit: \"%\",\n          timestamp: new Date(),\n          source: `concurrent-${i}`,\n        };\n        return performanceMonitor.recordMetric(metric);\n      });\n\n      await Promise.all(concurrentPromises);\n\n      // Verify metrics were recorded\n      const analysis = await optimizer.analyze();\n      expect(analysis.healthScore).toBeDefined();\n      expect(analysis.bottlenecks).toBeDefined();\n    });\n  });\n\n  describe(\"Error Handling and Graceful Degradation\", () => {\n    it(\"should handle metric recording errors gracefully\", async () => {\n      // Optimizer should still work even with invalid metrics\n      await optimizer.start();\n\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 80,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"error-test\",\n      };\n\n      await performanceMonitor.recordMetric(metric);\n      await new Promise((resolve) => setTimeout(resolve, 500));\n\n      const analysis = await optimizer.analyze();\n      expect(analysis).toBeDefined();\n      expect(analysis.healthScore).toBeDefined();\n    });\n\n    it(\"should continue operating when optimization engine is disabled\", async () => {\n      const disabledOptimizer = new RuntimeOptimizer({\n        enabled: false,\n      });\n\n      await disabledOptimizer.initialize();\n      await disabledOptimizer.start();\n\n      const status = disabledOptimizer.getHealthStatus();\n      expect(status.isRunning).toBe(false);\n\n      // Should not throw errors when disabled\n      const analysis = await disabledOptimizer.analyze();\n      expect(analysis).toBeDefined();\n\n      await disabledOptimizer.stop();\n    });\n  });\n\n  describe(\"Performance and Resource Usage\", () => {\n    it(\"should maintain low overhead during operation\", async () => {\n      await optimizer.start();\n\n      const startTime = Date.now();\n      const iterations = 100;\n\n      // Record many metrics quickly\n      for (let i = 0; i < iterations; i++) {\n        const metric: PerformanceMetric = {\n          type: MetricType.CPU,\n          value: 50 + (i % 40),\n          unit: \"%\",\n          timestamp: new Date(),\n          source: `perf-test-${i}`,\n        };\n        await performanceMonitor.recordMetric(metric);\n      }\n\n      const endTime = Date.now();\n      const totalTime = endTime - startTime;\n      const avgTimePerMetric = totalTime / iterations;\n\n      // Should be well under 10ms per metric (target from spec)\n      expect(avgTimePerMetric).toBeLessThan(10);\n\n      // Verify analysis still works\n      const analysis = await optimizer.analyze();\n      expect(analysis).toBeDefined();\n    });\n\n    it(\"should complete analysis within performance budget\", async () => {\n      await optimizer.start();\n\n      // Record some metrics\n      for (let i = 0; i < 50; i++) {\n        const metric: PerformanceMetric = {\n          type: MetricType.CPU,\n          value: 60 + (i % 30),\n          unit: \"%\",\n          timestamp: new Date(),\n          source: `analysis-test-${i}`,\n        };\n        await performanceMonitor.recordMetric(metric);\n      }\n\n      // Measure analysis time\n      const startTime = Date.now();\n      const analysis = await optimizer.analyze();\n      const endTime = Date.now();\n      const analysisTime = endTime - startTime;\n\n      // Should complete within 100ms (P95 target from spec)\n      expect(analysisTime).toBeLessThan(100);\n      expect(analysis).toBeDefined();\n    });\n  });\n});\n"
    },
    "tests/unit/optimization/BottleneckDetector.test.ts": {
      "tests": [
        {
          "id": "71",
          "name": "BottleneckDetector Bottleneck Detection should detect CPU bottleneck",
          "location": {
            "start": {
              "column": 8,
              "line": 28
            }
          }
        },
        {
          "id": "72",
          "name": "BottleneckDetector Bottleneck Detection should detect memory bottleneck",
          "location": {
            "start": {
              "column": 8,
              "line": 45
            }
          }
        },
        {
          "id": "73",
          "name": "BottleneckDetector Bottleneck Detection should detect latency bottleneck",
          "location": {
            "start": {
              "column": 8,
              "line": 61
            }
          }
        },
        {
          "id": "74",
          "name": "BottleneckDetector Bottleneck Detection should detect low throughput bottleneck",
          "location": {
            "start": {
              "column": 8,
              "line": 76
            }
          }
        },
        {
          "id": "75",
          "name": "BottleneckDetector Bottleneck Detection should detect low cache hit rate",
          "location": {
            "start": {
              "column": 8,
              "line": 91
            }
          }
        },
        {
          "id": "76",
          "name": "BottleneckDetector Bottleneck Detection should not detect bottleneck when below threshold",
          "location": {
            "start": {
              "column": 8,
              "line": 106
            }
          }
        },
        {
          "id": "77",
          "name": "BottleneckDetector Bottleneck Detection should detect multiple bottlenecks",
          "location": {
            "start": {
              "column": 8,
              "line": 120
            }
          }
        },
        {
          "id": "78",
          "name": "BottleneckDetector Severity Classification should classify critical severity for high deviation",
          "location": {
            "start": {
              "column": 8,
              "line": 145
            }
          }
        },
        {
          "id": "79",
          "name": "BottleneckDetector Severity Classification should classify high severity for moderate deviation",
          "location": {
            "start": {
              "column": 8,
              "line": 166
            }
          }
        },
        {
          "id": "80",
          "name": "BottleneckDetector Severity Classification should increase severity with occurrence count",
          "location": {
            "start": {
              "column": 8,
              "line": 187
            }
          }
        },
        {
          "id": "81",
          "name": "BottleneckDetector Threshold Management should use custom thresholds",
          "location": {
            "start": {
              "column": 8,
              "line": 211
            }
          }
        },
        {
          "id": "82",
          "name": "BottleneckDetector Threshold Management should update thresholds",
          "location": {
            "start": {
              "column": 8,
              "line": 230
            }
          }
        },
        {
          "id": "83",
          "name": "BottleneckDetector Active Bottleneck Management should track active bottlenecks",
          "location": {
            "start": {
              "column": 8,
              "line": 250
            }
          }
        },
        {
          "id": "84",
          "name": "BottleneckDetector Active Bottleneck Management should update existing bottleneck",
          "location": {
            "start": {
              "column": 8,
              "line": 265
            }
          }
        },
        {
          "id": "85",
          "name": "BottleneckDetector Active Bottleneck Management should clear resolved bottlenecks",
          "location": {
            "start": {
              "column": 8,
              "line": 298
            }
          }
        },
        {
          "id": "86",
          "name": "BottleneckDetector Impact Description should generate impact description",
          "location": {
            "start": {
              "column": 8,
              "line": 321
            }
          }
        },
        {
          "id": "87",
          "name": "BottleneckDetector Impact Description should include urgency prefix for critical severity",
          "location": {
            "start": {
              "column": 8,
              "line": 336
            }
          }
        },
        {
          "id": "88",
          "name": "BottleneckDetector Edge Cases should handle empty metrics array",
          "location": {
            "start": {
              "column": 8,
              "line": 353
            }
          }
        },
        {
          "id": "89",
          "name": "BottleneckDetector Edge Cases should handle metrics with no thresholds",
          "location": {
            "start": {
              "column": 8,
              "line": 359
            }
          }
        },
        {
          "id": "90",
          "name": "BottleneckDetector Edge Cases should handle bottleneck history",
          "location": {
            "start": {
              "column": 8,
              "line": 374
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Unit tests for BottleneckDetector\n *\n * @author @darianrosebrook\n */\n\nimport { BottleneckDetector } from \"@/optimization/BottleneckDetector\";\nimport {\n  BottleneckSeverity,\n  MetricType,\n  type PerformanceMetric,\n} from \"@/types/optimization-types\";\nimport { beforeEach, describe, expect, it } from \"@jest/globals\";\n\ndescribe(\"BottleneckDetector\", () => {\n  let detector: BottleneckDetector;\n\n  beforeEach(() => {\n    detector = new BottleneckDetector();\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe(\"Bottleneck Detection\", () => {\n    it(\"should detect CPU bottleneck\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 90, // Above default threshold of 80\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test-component\",\n      };\n\n      const bottlenecks = await detector.detectBottlenecks([metric]);\n\n      expect(bottlenecks).toHaveLength(1);\n      expect(bottlenecks[0].metricType).toBe(MetricType.CPU);\n      expect(bottlenecks[0].component).toBe(\"test-component\");\n      expect(bottlenecks[0].currentValue).toBe(90);\n    });\n\n    it(\"should detect memory bottleneck\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.MEMORY,\n        value: 90, // Above default threshold of 85\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"memory-intensive-component\",\n      };\n\n      const bottlenecks = await detector.detectBottlenecks([metric]);\n\n      expect(bottlenecks).toHaveLength(1);\n      expect(bottlenecks[0].metricType).toBe(MetricType.MEMORY);\n      expect(bottlenecks[0].severity).toBeDefined();\n    });\n\n    it(\"should detect latency bottleneck\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.LATENCY,\n        value: 1500, // Above default threshold of 1000ms\n        unit: \"ms\",\n        timestamp: new Date(),\n        source: \"slow-api\",\n      };\n\n      const bottlenecks = await detector.detectBottlenecks([metric]);\n\n      expect(bottlenecks).toHaveLength(1);\n      expect(bottlenecks[0].metricType).toBe(MetricType.LATENCY);\n    });\n\n    it(\"should detect low throughput bottleneck\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.THROUGHPUT,\n        value: 50, // Below minimum threshold of 100\n        unit: \"req/s\",\n        timestamp: new Date(),\n        source: \"api-server\",\n      };\n\n      const bottlenecks = await detector.detectBottlenecks([metric]);\n\n      expect(bottlenecks).toHaveLength(1);\n      expect(bottlenecks[0].metricType).toBe(MetricType.THROUGHPUT);\n    });\n\n    it(\"should detect low cache hit rate\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.CACHE_HIT_RATE,\n        value: 50, // Below minimum threshold of 70\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"cache-layer\",\n      };\n\n      const bottlenecks = await detector.detectBottlenecks([metric]);\n\n      expect(bottlenecks).toHaveLength(1);\n      expect(bottlenecks[0].metricType).toBe(MetricType.CACHE_HIT_RATE);\n    });\n\n    it(\"should not detect bottleneck when below threshold\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 50, // Below threshold of 80\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test-component\",\n      };\n\n      const bottlenecks = await detector.detectBottlenecks([metric]);\n\n      expect(bottlenecks).toHaveLength(0);\n    });\n\n    it(\"should detect multiple bottlenecks\", async () => {\n      const metrics: PerformanceMetric[] = [\n        {\n          type: MetricType.CPU,\n          value: 90,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"component-1\",\n        },\n        {\n          type: MetricType.MEMORY,\n          value: 95,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"component-1\",\n        },\n      ];\n\n      const bottlenecks = await detector.detectBottlenecks(metrics);\n\n      expect(bottlenecks).toHaveLength(2);\n    });\n  });\n\n  describe(\"Severity Classification\", () => {\n    it(\"should classify critical severity for high deviation\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 99, // (99-60)/60 = 0.65 = 65% deviation (>= 0.5 threshold)\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"critical-component\",\n      };\n\n      // Override threshold to 60 for this test to achieve >50% deviation\n      const testDetector = new BottleneckDetector({\n        [MetricType.CPU]: 60,\n        [MetricType.MEMORY]: 80,\n        [MetricType.LATENCY]: 1000,\n      });\n\n      const bottlenecks = await testDetector.detectBottlenecks([metric]);\n\n      expect(bottlenecks[0].severity).toBe(BottleneckSeverity.CRITICAL);\n    });\n\n    it(\"should classify high severity for moderate deviation\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 94, // (94-70)/70 = 0.343 = 34.3% deviation (>= 0.3 threshold)\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"high-component\",\n      };\n\n      // Override threshold to 70 for this test to achieve >30% deviation\n      const testDetector = new BottleneckDetector({\n        [MetricType.CPU]: 70,\n        [MetricType.MEMORY]: 80,\n        [MetricType.LATENCY]: 1000,\n      });\n\n      const bottlenecks = await testDetector.detectBottlenecks([metric]);\n\n      expect(bottlenecks[0].severity).toBe(BottleneckSeverity.HIGH);\n    });\n\n    it(\"should increase severity with occurrence count\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 82, // Just above threshold\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test-component\",\n      };\n\n      // First occurrence - should be LOW severity\n      let bottlenecks = await detector.detectBottlenecks([metric]);\n      expect(bottlenecks[0].severity).toBe(BottleneckSeverity.LOW);\n\n      // Multiple more occurrences\n      for (let i = 0; i < 15; i++) {\n        bottlenecks = await detector.detectBottlenecks([metric]);\n      }\n\n      // After 10+ occurrences - should be CRITICAL\n      expect(bottlenecks[0].severity).toBe(BottleneckSeverity.CRITICAL);\n    });\n  });\n\n  describe(\"Threshold Management\", () => {\n    it(\"should use custom thresholds\", async () => {\n      const customDetector = new BottleneckDetector({\n        [MetricType.CPU]: 60,\n      });\n\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 70, // Above custom threshold of 60\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test\",\n      };\n\n      const bottlenecks = await customDetector.detectBottlenecks([metric]);\n\n      expect(bottlenecks).toHaveLength(1);\n      expect(bottlenecks[0].threshold).toBe(60);\n    });\n\n    it(\"should update thresholds\", async () => {\n      detector.updateThresholds({\n        [MetricType.CPU]: 90,\n      });\n\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 85, // Below new threshold of 90\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test\",\n      };\n\n      const bottlenecks = await detector.detectBottlenecks([metric]);\n\n      expect(bottlenecks).toHaveLength(0);\n    });\n  });\n\n  describe(\"Active Bottleneck Management\", () => {\n    it(\"should track active bottlenecks\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 90,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test-component\",\n      };\n\n      await detector.detectBottlenecks([metric]);\n\n      const activeBottlenecks = detector.getActiveBottlenecks();\n      expect(activeBottlenecks).toHaveLength(1);\n    });\n\n    it(\"should update existing bottleneck\", async () => {\n      const now = new Date();\n\n      // First detection\n      await detector.detectBottlenecks([\n        {\n          type: MetricType.CPU,\n          value: 85,\n          unit: \"%\",\n          timestamp: now,\n          source: \"test-component\",\n        },\n      ]);\n\n      const active1 = detector.getActiveBottlenecks();\n      expect(active1[0].occurrenceCount).toBe(1);\n\n      // Second detection - should update\n      await detector.detectBottlenecks([\n        {\n          type: MetricType.CPU,\n          value: 90,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"test-component\",\n        },\n      ]);\n\n      const active2 = detector.getActiveBottlenecks();\n      expect(active2[0].occurrenceCount).toBe(2);\n      expect(active2[0].currentValue).toBe(90);\n    });\n\n    it(\"should clear resolved bottlenecks\", async () => {\n      const oldTime = new Date(Date.now() - 10000);\n\n      await detector.detectBottlenecks([\n        {\n          type: MetricType.CPU,\n          value: 90,\n          unit: \"%\",\n          timestamp: oldTime,\n          source: \"test-component\",\n        },\n      ]);\n\n      expect(detector.getActiveBottlenecks()).toHaveLength(1);\n\n      const cutoff = new Date(Date.now() - 5000);\n      await detector.clearResolvedBottlenecks(cutoff);\n\n      expect(detector.getActiveBottlenecks()).toHaveLength(0);\n    });\n  });\n\n  describe(\"Impact Description\", () => {\n    it(\"should generate impact description\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 90,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test-component\",\n      };\n\n      const bottlenecks = await detector.detectBottlenecks([metric]);\n\n      expect(bottlenecks[0].impact).toContain(\"test-component\");\n      expect(bottlenecks[0].impact).toBeTruthy();\n    });\n\n    it(\"should include urgency prefix for critical severity\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 140, // Very high, will be CRITICAL\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"critical-component\",\n      };\n\n      const bottlenecks = await detector.detectBottlenecks([metric]);\n\n      expect(bottlenecks[0].severity).toBe(BottleneckSeverity.CRITICAL);\n      expect(bottlenecks[0].impact).toContain(\"URGENT\");\n    });\n  });\n\n  describe(\"Edge Cases\", () => {\n    it(\"should handle empty metrics array\", async () => {\n      const bottlenecks = await detector.detectBottlenecks([]);\n\n      expect(bottlenecks).toHaveLength(0);\n    });\n\n    it(\"should handle metrics with no thresholds\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.ERROR_RATE,\n        value: 100,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test\",\n      };\n\n      // ERROR_RATE has default threshold\n      const bottlenecks = await detector.detectBottlenecks([metric]);\n\n      expect(bottlenecks.length).toBeGreaterThanOrEqual(0);\n    });\n\n    it(\"should handle bottleneck history\", () => {\n      const history = detector.getBottleneckHistory(\"test-component\");\n\n      expect(history).toBeDefined();\n      expect(Array.isArray(history)).toBe(true);\n    });\n  });\n});\n"
    },
    "tests/unit/optimization/PerformanceMonitor.test.ts": {
      "tests": [
        {
          "id": "91",
          "name": "PerformanceMonitor Metric Recording should record performance metrics",
          "location": {
            "start": {
              "column": 8,
              "line": 33
            }
          }
        },
        {
          "id": "92",
          "name": "PerformanceMonitor Metric Recording should handle multiple metrics",
          "location": {
            "start": {
              "column": 8,
              "line": 47
            }
          }
        },
        {
          "id": "93",
          "name": "PerformanceMonitor Metric Recording should enforce circular buffer limit",
          "location": {
            "start": {
              "column": 8,
              "line": 79
            }
          }
        },
        {
          "id": "94",
          "name": "PerformanceMonitor Metric Retrieval should retrieve metrics by time window",
          "location": {
            "start": {
              "column": 8,
              "line": 101
            }
          }
        },
        {
          "id": "95",
          "name": "PerformanceMonitor Metric Retrieval should filter metrics by type",
          "location": {
            "start": {
              "column": 8,
              "line": 138
            }
          }
        },
        {
          "id": "96",
          "name": "PerformanceMonitor Metric Retrieval should retrieve latest N metrics",
          "location": {
            "start": {
              "column": 8,
              "line": 168
            }
          }
        },
        {
          "id": "97",
          "name": "PerformanceMonitor Metric Retrieval should filter latest metrics by type",
          "location": {
            "start": {
              "column": 8,
              "line": 187
            }
          }
        },
        {
          "id": "98",
          "name": "PerformanceMonitor Metric Cleanup should clear old metrics",
          "location": {
            "start": {
              "column": 8,
              "line": 221
            }
          }
        },
        {
          "id": "99",
          "name": "PerformanceMonitor Metric Cleanup should not clear recent metrics",
          "location": {
            "start": {
              "column": 8,
              "line": 252
            }
          }
        },
        {
          "id": "100",
          "name": "PerformanceMonitor Metric Cleanup should enable automatic cleanup",
          "location": {
            "start": {
              "column": 8,
              "line": 269
            }
          }
        },
        {
          "id": "101",
          "name": "PerformanceMonitor Configuration should return configuration",
          "location": {
            "start": {
              "column": 8,
              "line": 317
            }
          }
        },
        {
          "id": "102",
          "name": "PerformanceMonitor Configuration should update configuration",
          "location": {
            "start": {
              "column": 8,
              "line": 324
            }
          }
        },
        {
          "id": "103",
          "name": "PerformanceMonitor Lifecycle should start monitoring",
          "location": {
            "start": {
              "column": 8,
              "line": 338
            }
          }
        },
        {
          "id": "104",
          "name": "PerformanceMonitor Lifecycle should stop monitoring",
          "location": {
            "start": {
              "column": 8,
              "line": 343
            }
          }
        },
        {
          "id": "105",
          "name": "PerformanceMonitor Lifecycle should handle multiple start calls",
          "location": {
            "start": {
              "column": 8,
              "line": 349
            }
          }
        },
        {
          "id": "106",
          "name": "PerformanceMonitor Lifecycle should handle multiple stop calls",
          "location": {
            "start": {
              "column": 8,
              "line": 355
            }
          }
        },
        {
          "id": "107",
          "name": "PerformanceMonitor Edge Cases should handle empty time window",
          "location": {
            "start": {
              "column": 8,
              "line": 363
            }
          }
        },
        {
          "id": "108",
          "name": "PerformanceMonitor Edge Cases should handle request for more metrics than available",
          "location": {
            "start": {
              "column": 8,
              "line": 370
            }
          }
        },
        {
          "id": "109",
          "name": "PerformanceMonitor Edge Cases should handle concurrent metric recording",
          "location": {
            "start": {
              "column": 8,
              "line": 384
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Unit tests for PerformanceMonitor\n *\n * @author @darianrosebrook\n */\n\nimport { PerformanceMonitor } from \"@/optimization/PerformanceMonitor\";\nimport { MetricType, type PerformanceMetric } from \"@/types/optimization-types\";\nimport {\n  afterEach,\n  beforeEach,\n  describe,\n  expect,\n  it,\n  jest,\n} from \"@jest/globals\";\n\ndescribe(\"PerformanceMonitor\", () => {\n  let monitor: PerformanceMonitor;\n\n  beforeEach(() => {\n    monitor = new PerformanceMonitor();\n  });\n\n  afterEach(async () => {\n    await monitor.stop();\n    // Ensure real timers are restored after each test\n    jest.useRealTimers();\n  });\n\n  describe(\"Metric Recording\", () => {\n    it(\"should record performance metrics\", async () => {\n      const metric: PerformanceMetric = {\n        type: MetricType.CPU,\n        value: 75,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test-component\",\n      };\n\n      await monitor.recordMetric(metric);\n\n      expect(monitor.getMetricCount()).toBe(1);\n    });\n\n    it(\"should handle multiple metrics\", async () => {\n      const metrics: PerformanceMetric[] = [\n        {\n          type: MetricType.CPU,\n          value: 75,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"component-1\",\n        },\n        {\n          type: MetricType.MEMORY,\n          value: 80,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"component-1\",\n        },\n        {\n          type: MetricType.LATENCY,\n          value: 250,\n          unit: \"ms\",\n          timestamp: new Date(),\n          source: \"component-2\",\n        },\n      ];\n\n      for (const metric of metrics) {\n        await monitor.recordMetric(metric);\n      }\n\n      expect(monitor.getMetricCount()).toBe(3);\n    });\n\n    it(\"should enforce circular buffer limit\", async () => {\n      const smallMonitor = new PerformanceMonitor({ maxMetrics: 5 });\n\n      // Record 10 metrics (exceeds limit of 5)\n      for (let i = 0; i < 10; i++) {\n        await smallMonitor.recordMetric({\n          type: MetricType.CPU,\n          value: i,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"test\",\n        });\n      }\n\n      // Should only keep the last 5\n      expect(smallMonitor.getMetricCount()).toBe(5);\n\n      await smallMonitor.stop();\n    });\n  });\n\n  describe(\"Metric Retrieval\", () => {\n    it(\"should retrieve metrics by time window\", async () => {\n      const now = new Date();\n      const oneMinuteAgo = new Date(now.getTime() - 60000);\n      const twoMinutesAgo = new Date(now.getTime() - 120000);\n\n      await monitor.recordMetric({\n        type: MetricType.CPU,\n        value: 50,\n        unit: \"%\",\n        timestamp: twoMinutesAgo,\n        source: \"test\",\n      });\n\n      await monitor.recordMetric({\n        type: MetricType.CPU,\n        value: 75,\n        unit: \"%\",\n        timestamp: oneMinuteAgo,\n        source: \"test\",\n      });\n\n      await monitor.recordMetric({\n        type: MetricType.CPU,\n        value: 90,\n        unit: \"%\",\n        timestamp: now,\n        source: \"test\",\n      });\n\n      // Get metrics from last minute\n      const recentMetrics = await monitor.getMetrics(oneMinuteAgo, now);\n\n      expect(recentMetrics).toHaveLength(2);\n      expect(recentMetrics[0].value).toBe(75);\n      expect(recentMetrics[1].value).toBe(90);\n    });\n\n    it(\"should filter metrics by type\", async () => {\n      const now = new Date();\n\n      await monitor.recordMetric({\n        type: MetricType.CPU,\n        value: 75,\n        unit: \"%\",\n        timestamp: now,\n        source: \"test\",\n      });\n\n      await monitor.recordMetric({\n        type: MetricType.MEMORY,\n        value: 80,\n        unit: \"%\",\n        timestamp: now,\n        source: \"test\",\n      });\n\n      const oneHourAgo = new Date(now.getTime() - 3600000);\n      const cpuMetrics = await monitor.getMetrics(\n        oneHourAgo,\n        now,\n        MetricType.CPU\n      );\n\n      expect(cpuMetrics).toHaveLength(1);\n      expect(cpuMetrics[0].type).toBe(MetricType.CPU);\n    });\n\n    it(\"should retrieve latest N metrics\", async () => {\n      // Record 5 metrics\n      for (let i = 0; i < 5; i++) {\n        await monitor.recordMetric({\n          type: MetricType.CPU,\n          value: i * 10,\n          unit: \"%\",\n          timestamp: new Date(),\n          source: \"test\",\n        });\n      }\n\n      const latestThree = await monitor.getLatestMetrics(3);\n\n      expect(latestThree).toHaveLength(3);\n      expect(latestThree[0].value).toBe(20); // Last 3: indices 2, 3, 4\n      expect(latestThree[2].value).toBe(40);\n    });\n\n    it(\"should filter latest metrics by type\", async () => {\n      await monitor.recordMetric({\n        type: MetricType.CPU,\n        value: 50,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test\",\n      });\n\n      await monitor.recordMetric({\n        type: MetricType.MEMORY,\n        value: 60,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test\",\n      });\n\n      await monitor.recordMetric({\n        type: MetricType.CPU,\n        value: 70,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test\",\n      });\n\n      const latestCpu = await monitor.getLatestMetrics(2, MetricType.CPU);\n\n      expect(latestCpu).toHaveLength(2);\n      expect(latestCpu[0].value).toBe(50);\n      expect(latestCpu[1].value).toBe(70);\n    });\n  });\n\n  describe(\"Metric Cleanup\", () => {\n    it(\"should clear old metrics\", async () => {\n      const now = new Date();\n      const oneHourAgo = new Date(now.getTime() - 3600000);\n\n      await monitor.recordMetric({\n        type: MetricType.CPU,\n        value: 50,\n        unit: \"%\",\n        timestamp: oneHourAgo,\n        source: \"test\",\n      });\n\n      await monitor.recordMetric({\n        type: MetricType.CPU,\n        value: 75,\n        unit: \"%\",\n        timestamp: now,\n        source: \"test\",\n      });\n\n      expect(monitor.getMetricCount()).toBe(2);\n\n      const thirtyMinutesAgo = new Date(now.getTime() - 1800000);\n      await monitor.clearMetrics(thirtyMinutesAgo);\n\n      expect(monitor.getMetricCount()).toBe(1);\n\n      const remaining = await monitor.getLatestMetrics(10);\n      expect(remaining[0].value).toBe(75);\n    });\n\n    it(\"should not clear recent metrics\", async () => {\n      const now = new Date();\n\n      await monitor.recordMetric({\n        type: MetricType.CPU,\n        value: 75,\n        unit: \"%\",\n        timestamp: now,\n        source: \"test\",\n      });\n\n      const oneHourAgo = new Date(now.getTime() - 3600000);\n      await monitor.clearMetrics(oneHourAgo);\n\n      expect(monitor.getMetricCount()).toBe(1);\n    });\n\n    it(\"should enable automatic cleanup\", async () => {\n      // Test automatic cleanup configuration without testing the timer itself\n      // (Timer testing with async operations is complex and prone to flakiness)\n      const autoCleanMonitor = new PerformanceMonitor({\n        enableAutoCleanup: true,\n        cleanupIntervalMs: 1000,\n        autoCleanOlderThanMs: 5000,\n      });\n\n      await autoCleanMonitor.start();\n\n      const config = autoCleanMonitor.getConfig();\n      expect(config.enableAutoCleanup).toBe(true);\n      expect(config.cleanupIntervalMs).toBe(1000);\n      expect(config.autoCleanOlderThanMs).toBe(5000);\n\n      // Test manual cleanup works as expected\n      const oldTime = new Date(Date.now() - 10000);\n      await autoCleanMonitor.recordMetric({\n        type: MetricType.CPU,\n        value: 50,\n        unit: \"%\",\n        timestamp: oldTime,\n        source: \"test\",\n      });\n\n      await autoCleanMonitor.recordMetric({\n        type: MetricType.CPU,\n        value: 75,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test\",\n      });\n\n      expect(autoCleanMonitor.getMetricCount()).toBe(2);\n\n      // Manually trigger cleanup to test the cleanup logic\n      const cutoffTime = new Date(Date.now() - 5000);\n      await autoCleanMonitor.clearMetrics(cutoffTime);\n\n      // Old metric (>5s old) should be cleaned up, recent one remains\n      expect(autoCleanMonitor.getMetricCount()).toBe(1);\n\n      await autoCleanMonitor.stop();\n    });\n  });\n\n  describe(\"Configuration\", () => {\n    it(\"should return configuration\", () => {\n      const config = monitor.getConfig();\n\n      expect(config.maxMetrics).toBeGreaterThan(0);\n      expect(config.enableAutoCleanup).toBeDefined();\n    });\n\n    it(\"should update configuration\", () => {\n      monitor.updateConfig({\n        maxMetrics: 5000,\n        enableAutoCleanup: false,\n      });\n\n      const config = monitor.getConfig();\n\n      expect(config.maxMetrics).toBe(5000);\n      expect(config.enableAutoCleanup).toBe(false);\n    });\n  });\n\n  describe(\"Lifecycle\", () => {\n    it(\"should start monitoring\", async () => {\n      await monitor.start();\n      // Should not throw\n    });\n\n    it(\"should stop monitoring\", async () => {\n      await monitor.start();\n      await monitor.stop();\n      // Should not throw\n    });\n\n    it(\"should handle multiple start calls\", async () => {\n      await monitor.start();\n      await monitor.start(); // Should not throw\n      await monitor.stop();\n    });\n\n    it(\"should handle multiple stop calls\", async () => {\n      await monitor.start();\n      await monitor.stop();\n      await monitor.stop(); // Should not throw\n    });\n  });\n\n  describe(\"Edge Cases\", () => {\n    it(\"should handle empty time window\", async () => {\n      const now = new Date();\n      const metrics = await monitor.getMetrics(now, now);\n\n      expect(metrics).toHaveLength(0);\n    });\n\n    it(\"should handle request for more metrics than available\", async () => {\n      await monitor.recordMetric({\n        type: MetricType.CPU,\n        value: 75,\n        unit: \"%\",\n        timestamp: new Date(),\n        source: \"test\",\n      });\n\n      const latest = await monitor.getLatestMetrics(100);\n\n      expect(latest).toHaveLength(1);\n    });\n\n    it(\"should handle concurrent metric recording\", async () => {\n      const promises = [];\n\n      for (let i = 0; i < 10; i++) {\n        promises.push(\n          monitor.recordMetric({\n            type: MetricType.CPU,\n            value: i,\n            unit: \"%\",\n            timestamp: new Date(),\n            source: \"test\",\n          })\n        );\n      }\n\n      await Promise.all(promises);\n\n      expect(monitor.getMetricCount()).toBe(10);\n    }, 10000); // 10 second timeout for concurrent operations\n  });\n});\n"
    },
    "tests/unit/optimization/RuntimeOptimizer.test.ts": {
      "tests": [
        {
          "id": "110",
          "name": "RuntimeOptimizer Initialization should initialize optimizer",
          "location": {
            "start": {
              "column": 8,
              "line": 27
            }
          }
        },
        {
          "id": "111",
          "name": "RuntimeOptimizer Initialization should start monitoring",
          "location": {
            "start": {
              "column": 8,
              "line": 34
            }
          }
        },
        {
          "id": "112",
          "name": "RuntimeOptimizer Initialization should stop monitoring",
          "location": {
            "start": {
              "column": 8,
              "line": 42
            }
          }
        },
        {
          "id": "113",
          "name": "RuntimeOptimizer Configuration should get configuration",
          "location": {
            "start": {
              "column": 8,
              "line": 53
            }
          }
        },
        {
          "id": "114",
          "name": "RuntimeOptimizer Configuration should update configuration",
          "location": {
            "start": {
              "column": 8,
              "line": 60
            }
          }
        },
        {
          "id": "115",
          "name": "RuntimeOptimizer Analysis should perform analysis",
          "location": {
            "start": {
              "column": 8,
              "line": 73
            }
          }
        },
        {
          "id": "116",
          "name": "RuntimeOptimizer Analysis should track analysis history",
          "location": {
            "start": {
              "column": 8,
              "line": 86
            }
          }
        },
        {
          "id": "117",
          "name": "RuntimeOptimizer Health Status should report health status",
          "location": {
            "start": {
              "column": 8,
              "line": 98
            }
          }
        },
        {
          "id": "118",
          "name": "RuntimeOptimizer Cache Statistics should get cache statistics",
          "location": {
            "start": {
              "column": 8,
              "line": 108
            }
          }
        },
        {
          "id": "119",
          "name": "RuntimeOptimizer Performance Trends should get performance trends",
          "location": {
            "start": {
              "column": 8,
              "line": 118
            }
          }
        },
        {
          "id": "120",
          "name": "RuntimeOptimizer Edge Cases should handle disabled optimizer",
          "location": {
            "start": {
              "column": 8,
              "line": 128
            }
          }
        },
        {
          "id": "121",
          "name": "RuntimeOptimizer Edge Cases should handle multiple start calls",
          "location": {
            "start": {
              "column": 8,
              "line": 142
            }
          }
        },
        {
          "id": "122",
          "name": "RuntimeOptimizer Edge Cases should handle analysis without initialization",
          "location": {
            "start": {
              "column": 8,
              "line": 150
            }
          }
        }
      ],
      "source": "/**\n * @fileoverview Unit tests for RuntimeOptimizer\n *\n * @author @darianrosebrook\n */\n\nimport { RuntimeOptimizer } from \"@/optimization/RuntimeOptimizer\";\nimport { afterEach, beforeEach, describe, expect, it } from \"@jest/globals\";\n\ndescribe(\"RuntimeOptimizer\", () => {\n  let optimizer: RuntimeOptimizer;\n\n  beforeEach(() => {\n    optimizer = new RuntimeOptimizer({\n      enabled: true,\n      collectionIntervalMs: 1000,\n      analysisWindowMs: 5000,\n    });\n  });\n\n  afterEach(async () => {\n    await optimizer.stop();\n  });\n\n  describe(\"Initialization\", () => {\n    it(\"should initialize optimizer\", async () => {\n      await optimizer.initialize();\n\n      const status = optimizer.getHealthStatus();\n      expect(status).toBeDefined();\n    });\n\n    it(\"should start monitoring\", async () => {\n      await optimizer.initialize();\n      await optimizer.start();\n\n      const status = optimizer.getHealthStatus();\n      expect(status.isRunning).toBe(true);\n    });\n\n    it(\"should stop monitoring\", async () => {\n      await optimizer.initialize();\n      await optimizer.start();\n      await optimizer.stop();\n\n      const status = optimizer.getHealthStatus();\n      expect(status.isRunning).toBe(false);\n    });\n  });\n\n  describe(\"Configuration\", () => {\n    it(\"should get configuration\", () => {\n      const config = optimizer.getConfig();\n\n      expect(config.enabled).toBe(true);\n      expect(config.collectionIntervalMs).toBe(1000);\n    });\n\n    it(\"should update configuration\", () => {\n      optimizer.updateConfig({\n        collectionIntervalMs: 2000,\n        enableCacheOptimization: false,\n      });\n\n      const config = optimizer.getConfig();\n      expect(config.collectionIntervalMs).toBe(2000);\n      expect(config.enableCacheOptimization).toBe(false);\n    });\n  });\n\n  describe(\"Analysis\", () => {\n    it(\"should perform analysis\", async () => {\n      await optimizer.initialize();\n\n      const analysis = await optimizer.analyze();\n\n      expect(analysis).toBeDefined();\n      expect(analysis.timestamp).toBeInstanceOf(Date);\n      expect(analysis.bottlenecks).toBeDefined();\n      expect(analysis.recommendations).toBeDefined();\n      expect(analysis.healthScore).toBeGreaterThanOrEqual(0);\n      expect(analysis.healthScore).toBeLessThanOrEqual(100);\n    });\n\n    it(\"should track analysis history\", async () => {\n      await optimizer.initialize();\n\n      await optimizer.analyze();\n      await optimizer.analyze();\n\n      const history = optimizer.getAnalysisHistory(10);\n      expect(history.length).toBeGreaterThanOrEqual(2);\n    });\n  });\n\n  describe(\"Health Status\", () => {\n    it(\"should report health status\", () => {\n      const status = optimizer.getHealthStatus();\n\n      expect(status.isRunning).toBeDefined();\n      expect(status.metricsCollected).toBeGreaterThanOrEqual(0);\n      expect(status.bottlenecksDetected).toBeGreaterThanOrEqual(0);\n    });\n  });\n\n  describe(\"Cache Statistics\", () => {\n    it(\"should get cache statistics\", async () => {\n      await optimizer.initialize();\n\n      const stats = await optimizer.getCacheStatistics();\n\n      expect(Array.isArray(stats)).toBe(true);\n    });\n  });\n\n  describe(\"Performance Trends\", () => {\n    it(\"should get performance trends\", async () => {\n      await optimizer.initialize();\n\n      const trends = await optimizer.getPerformanceTrends();\n\n      expect(Array.isArray(trends)).toBe(true);\n    });\n  });\n\n  describe(\"Edge Cases\", () => {\n    it(\"should handle disabled optimizer\", async () => {\n      const disabledOptimizer = new RuntimeOptimizer({\n        enabled: false,\n      });\n\n      await disabledOptimizer.initialize();\n      await disabledOptimizer.start();\n\n      const status = disabledOptimizer.getHealthStatus();\n      expect(status.isRunning).toBe(false);\n\n      await disabledOptimizer.stop();\n    });\n\n    it(\"should handle multiple start calls\", async () => {\n      await optimizer.initialize();\n      await optimizer.start();\n      await optimizer.start(); // Should not throw\n\n      await optimizer.stop();\n    });\n\n    it(\"should handle analysis without initialization\", async () => {\n      const analysis = await optimizer.analyze();\n\n      expect(analysis).toBeDefined();\n    });\n  });\n});\n"
    }
  },
  "projectRoot": "/Users/darianrosebrook/Desktop/Projects/agent-agency/iterations/v2",
  "config": {
    "$schema": "./node_modules/@stryker-mutator/core/schema/stryker-schema.json",
    "_comment": "INFRA-004 Mutation Testing Configuration - Target: ≥30% mutation score for Tier 3 compliance",
    "packageManager": "npm",
    "reporters": [
      "html",
      "clear-text",
      "progress",
      "dashboard"
    ],
    "testRunner": "jest",
    "jest": {
      "enableFindRelatedTests": true,
      "projectType": "custom"
    },
    "coverageAnalysis": "perTest",
    "mutate": [
      "src/resources/AdaptiveResourceManager.ts",
      "src/resources/ResourceMonitor.ts",
      "src/resources/LoadBalancer.ts",
      "src/resources/ResourceAllocator.ts",
      "!src/**/*.test.ts",
      "!src/**/*.spec.ts",
      "!src/**/index.ts"
    ],
    "mutator": {
      "plugins": [
        "typescript"
      ],
      "excludedMutations": [
        "StringLiteral",
        "ArrayDeclaration"
      ]
    },
    "timeoutMS": 60000,
    "timeoutFactor": 2,
    "maxConcurrentTestRunners": 4,
    "thresholds": {
      "high": 50,
      "low": 30,
      "break": 25
    },
    "dashboard": {
      "reportType": "full",
      "baseUrl": "https://dashboard.stryker-mutator.io/api/reports"
    },
    "htmlReporter": {
      "fileName": "mutation-report.html"
    },
    "ignorePatterns": [
      "dist",
      "node_modules",
      "coverage",
      "**/*.d.ts",
      "**/*.js.map"
    ],
    "incremental": true,
    "incrementalFile": ".stryker-tmp/incremental.json",
    "allowConsoleColors": true,
    "checkers": [],
    "checkerNodeArgs": [],
    "commandRunner": {
      "command": "npm test"
    },
    "clearTextReporter": {
      "allowColor": true,
      "allowEmojis": false,
      "logTests": true,
      "maxTestsToLog": 3,
      "reportTests": true,
      "reportMutants": true,
      "reportScoreTable": true,
      "skipFull": false
    },
    "dryRunOnly": false,
    "eventReporter": {
      "baseDir": "reports/mutation/events"
    },
    "ignoreStatic": false,
    "force": false,
    "fileLogLevel": "off",
    "inPlace": false,
    "logLevel": "info",
    "maxTestRunnerReuse": 0,
    "plugins": [
      "@stryker-mutator/*"
    ],
    "appendPlugins": [],
    "jsonReporter": {
      "fileName": "reports/mutation/mutation.json"
    },
    "disableTypeChecks": true,
    "symlinkNodeModules": true,
    "tempDirName": ".stryker-tmp",
    "cleanTempDir": true,
    "testRunnerNodeArgs": [],
    "dryRunTimeoutMinutes": 5,
    "tsconfigFile": "tsconfig.json",
    "warnings": true,
    "disableBail": false,
    "allowEmpty": false,
    "ignorers": [],
    "concurrency": 4,
    "typescriptChecker": {
      "prioritizePerformanceOverAccuracy": true
    }
  },
  "framework": {
    "name": "StrykerJS",
    "version": "8.7.1",
    "branding": {
      "homepageUrl": "https://stryker-mutator.io",
      "imageUrl": "data:image/svg+xml;utf8,%3Csvg viewBox='0 0 1458 1458' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='2'%3E%3Cpath fill='none' d='M0 0h1458v1458H0z'/%3E%3CclipPath id='a'%3E%3Cpath d='M0 0h1458v1458H0z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M1458 729c0 402.655-326.345 729-729 729S0 1131.655 0 729C0 326.445 326.345 0 729 0s729 326.345 729 729' fill='%23e74c3c' fill-rule='nonzero'/%3E%3Cpath d='M778.349 1456.15L576.6 1254.401l233-105 85-78.668v-64.332l-257-257-44-187-50-208 251.806-82.793L1076.6 389.401l380.14 379.15c-19.681 367.728-311.914 663.049-678.391 687.599z' fill-opacity='.3'/%3E%3Cpath d='M753.4 329.503c41.79 0 74.579 7.83 97.925 25.444 23.571 18.015 41.69 43.956 55.167 77.097l11.662 28.679 165.733-58.183-14.137-32.13c-26.688-60.655-64.896-108.61-114.191-144.011-49.329-35.423-117.458-54.302-204.859-54.302-50.78 0-95.646 7.376-134.767 21.542-40.093 14.671-74.09 34.79-102.239 60.259-28.84 26.207-50.646 57.06-65.496 92.701-14.718 35.052-22.101 72.538-22.101 112.401 0 72.536 20.667 133.294 61.165 182.704 38.624 47.255 98.346 88.037 179.861 121.291 42.257 17.475 78.715 33.125 109.227 46.994 27.193 12.361 49.294 26.124 66.157 41.751 15.309 14.186 26.497 30.584 33.63 49.258 7.721 20.214 11.16 45.69 11.16 76.402 0 28.021-4.251 51.787-13.591 71.219-8.832 18.374-20.171 33.178-34.523 44.219-14.787 11.374-31.193 19.591-49.393 24.466-19.68 5.359-39.14 7.993-58.69 7.993-29.359 0-54.387-3.407-75.182-10.747-20.112-7.013-37.144-16.144-51.259-27.486-13.618-11.009-24.971-23.766-33.744-38.279-9.64-15.8-17.272-31.924-23.032-48.408l-10.965-31.376-161.669 60.585 10.734 30.124c10.191 28.601 24.197 56.228 42.059 82.748 18.208 27.144 41.322 51.369 69.525 72.745 27.695 21.075 60.904 38.218 99.481 51.041 37.777 12.664 82.004 19.159 132.552 19.159 49.998 0 95.818-8.321 137.611-24.622 42.228-16.471 78.436-38.992 108.835-67.291 30.719-28.597 54.631-62.103 71.834-100.642 17.263-38.56 25.923-79.392 25.923-122.248 0-54.339-8.368-100.37-24.208-138.32-16.29-38.759-38.252-71.661-65.948-98.797-26.965-26.418-58.269-48.835-93.858-67.175-33.655-17.241-69.196-33.11-106.593-47.533-35.934-13.429-65.822-26.601-89.948-39.525-22.153-11.868-40.009-24.21-53.547-37.309-11.429-11.13-19.83-23.678-24.718-37.664-5.413-15.49-7.98-33.423-7.98-53.577 0-40.883 11.293-71.522 37.086-90.539 28.443-20.825 64.985-30.658 109.311-30.658z' fill='%23f1c40f' fill-rule='nonzero'/%3E%3Cpath d='M720 0h18v113h-18zM1458 738v-18h-113v18h113zM720 1345h18v113h-18zM113 738v-18H0v18h113z'/%3E%3C/g%3E%3C/svg%3E"
    },
    "dependencies": {
      "@stryker-mutator/jest-runner": "8.7.1",
      "@stryker-mutator/typescript-checker": "8.7.1",
      "jest": "29.7.0",
      "typescript": "5.9.3",
      "ts-jest": "29.4.4"
    }
  }
}