openapi: 3.0.0
info:
  title: Agent Agency Benchmark Data API
  description: |
    API for accessing comprehensive performance benchmark data and analytics
    from the ARBITER-004 Performance Tracker system.
  version: 1.0.0
  contact:
    name: Agent Agency Team
    email: team@agent-agency.dev

servers:
  - url: https://api.agent-agency.dev/v2
    description: Production server
  - url: http://localhost:3000/v2
    description: Local development server

security:
  - bearerAuth: []

paths:
  /benchmark-data/profiles:
    get:
      summary: Get agent performance profiles
      description: Retrieve aggregated performance profiles for agents with trend analysis and benchmarking data.
      operationId: getPerformanceProfiles
      parameters:
        - name: agentId
          in: query
          description: Filter by specific agent ID
          schema:
            type: string
        - name: taskType
          in: query
          description: Filter by task type
          schema:
            type: string
        - name: window
          in: query
          description: Time window for aggregation (realtime, short, medium, long)
          schema:
            type: string
            enum: [realtime, short, medium, long]
            default: medium
        - name: limit
          in: query
          description: Maximum number of profiles to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Successful response with performance profiles
          content:
            application/json:
              schema:
                type: object
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/AgentPerformanceProfile'
                  totalCount:
                    type: integer
                    description: Total number of profiles available
                  queryTime:
                    type: string
                    format: date-time
                    description: When the query was executed
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /benchmark-data/anomalies:
    get:
      summary: Get performance anomalies
      description: Retrieve detected performance anomalies with severity levels and recommendations.
      operationId: getPerformanceAnomalies
      parameters:
        - name: agentId
          in: query
          description: Filter by specific agent ID
          schema:
            type: string
        - name: severity
          in: query
          description: Filter by anomaly severity
          schema:
            type: string
            enum: [low, medium, high, critical]
        - name: status
          in: query
          description: Filter by anomaly status
          schema:
            type: string
            enum: [active, resolved]
            default: active
        - name: limit
          in: query
          description: Maximum number of anomalies to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Successful response with anomalies
          content:
            application/json:
              schema:
                type: object
                properties:
                  anomalies:
                    type: array
                    items:
                      $ref: '#/components/schemas/PerformanceAnomaly'
                  totalCount:
                    type: integer
                    description: Total number of anomalies
                  activeCount:
                    type: integer
                    description: Number of active anomalies
                  resolvedCount:
                    type: integer
                    description: Number of resolved anomalies
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /benchmark-data/trends/{agentId}:
    get:
      summary: Get performance trend analysis
      description: Retrieve detailed trend analysis for a specific agent across all performance dimensions.
      operationId: getPerformanceTrends
      parameters:
        - name: agentId
          in: path
          required: true
          description: Agent identifier
          schema:
            type: string
      responses:
        '200':
          description: Successful response with trend analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendAnalysisResult'
        '404':
          description: Agent not found or insufficient data for analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /benchmark-data/datasets:
    get:
      summary: List available benchmark datasets
      description: Retrieve list of available benchmark datasets for model evaluation.
      operationId: listBenchmarkDatasets
      parameters:
        - name: taskType
          in: query
          description: Filter by task type
          schema:
            type: string
        - name: active
          in: query
          description: Filter by active status
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Successful response with benchmark datasets
          content:
            application/json:
              schema:
                type: object
                properties:
                  datasets:
                    type: array
                    items:
                      $ref: '#/components/schemas/BenchmarkDataset'
                  totalCount:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create new benchmark dataset
      description: Create a new benchmark dataset for model evaluation.
      operationId: createBenchmarkDataset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Unique dataset identifier
                name:
                  type: string
                  description: Human-readable dataset name
                taskType:
                  type: string
                  description: Task type this dataset evaluates
                testCaseCount:
                  type: integer
                  description: Number of test cases in the dataset
                baselineMetrics:
                  $ref: '#/components/schemas/PerformanceMetrics'
              required:
                - id
                - name
                - taskType
                - testCaseCount
      responses:
        '201':
          description: Dataset created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchmarkDataset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Dataset with this ID already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /benchmark-data/evaluations:
    post:
      summary: Run benchmark evaluation
      description: Evaluate an agent against a benchmark dataset.
      operationId: runBenchmarkEvaluation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agentId:
                  type: string
                  description: Agent to evaluate
                datasetId:
                  type: string
                  description: Dataset to use for evaluation
                evaluationConfig:
                  type: object
                  description: Additional evaluation configuration
                  properties:
                    timeoutMs:
                      type: integer
                      description: Timeout per test case
                      default: 30000
                    maxConcurrency:
                      type: integer
                      description: Maximum concurrent evaluations
                      default: 5
              required:
                - agentId
                - datasetId
      responses:
        '202':
          description: Evaluation started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  evaluationId:
                    type: string
                    description: Unique evaluation identifier
                  status:
                    type: string
                    enum: [queued, running]
                  estimatedDurationMinutes:
                    type: integer
                    description: Estimated completion time
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Agent or dataset not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /benchmark-data/evaluations/{evaluationId}:
    get:
      summary: Get benchmark evaluation results
      description: Retrieve results from a completed benchmark evaluation.
      operationId: getBenchmarkEvaluationResults
      parameters:
        - name: evaluationId
          in: path
          required: true
          description: Evaluation identifier
          schema:
            type: string
      responses:
        '200':
          description: Evaluation completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchmarkResult'
        '202':
          description: Evaluation still in progress
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [queued, running]
                  progress:
                    type: number
                    description: Completion percentage (0-1)
                  currentTestCase:
                    type: integer
                    description: Current test case being evaluated
                  totalTestCases:
                    type: integer
                    description: Total number of test cases
                  startedAt:
                    type: string
                    format: date-time
        '404':
          description: Evaluation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /benchmark-data/rl-training/batches:
    get:
      summary: Get RL training batches
      description: Retrieve available RL training data batches for model training.
      operationId: getRLTrainingBatches
      parameters:
        - name: agentId
          in: query
          description: Filter by specific agent
          schema:
            type: string
        - name: minQualityScore
          in: query
          description: Minimum quality score threshold
          schema:
            type: number
            minimum: 0
            maximum: 1
            default: 0.5
        - name: limit
          in: query
          description: Maximum number of batches to return
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
      responses:
        '200':
          description: Successful response with training batches
          content:
            application/json:
              schema:
                type: object
                properties:
                  batches:
                    type: array
                    items:
                      $ref: '#/components/schemas/RLTrainingBatch'
                  totalCount:
                    type: integer
                  dataQuality:
                    type: object
                    description: Aggregate quality metrics
                    properties:
                      averageQualityScore:
                        type: number
                      totalSamples:
                        type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /benchmark-data/analytics/summary:
    get:
      summary: Get performance analytics summary
      description: Retrieve high-level performance analytics and system health metrics.
      operationId: getPerformanceAnalyticsSummary
      parameters:
        - name: timeRange
          in: query
          description: Time range for analysis (1h, 24h, 7d, 30d)
          schema:
            type: string
            enum: ["1h", "24h", "7d", "30d"]
            default: "24h"
      responses:
        '200':
          description: Successful response with analytics summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  timeRange:
                    type: string
                  systemHealth:
                    type: object
                    properties:
                      overallScore:
                        type: number
                        description: Overall system health score (0-1)
                      activeAgents:
                        type: integer
                      activeAnomalies:
                        type: integer
                      criticalAnomalies:
                        type: integer
                  performanceMetrics:
                    type: object
                    properties:
                      averageLatencyMs:
                        type: number
                      successRate:
                        type: number
                      throughputTasksPerHour:
                        type: integer
                      topPerformingAgent:
                        type: string
                      worstPerformingAgent:
                        type: string
                  trends:
                    type: object
                    properties:
                      latencyTrend:
                        type: string
                        enum: [improving, declining, stable]
                      accuracyTrend:
                        type: string
                        enum: [improving, declining, stable]
                      anomalyTrend:
                        type: string
                        enum: [increasing, decreasing, stable]
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    AgentPerformanceProfile:
      type: object
      properties:
        agentId:
          type: string
          description: Agent identifier
        taskType:
          type: string
          description: Task type this profile applies to
        metrics:
          $ref: '#/components/schemas/PerformanceMetrics'
        sampleSize:
          type: integer
          description: Number of samples used for this profile
        confidence:
          type: number
          description: Confidence score for the profile (0-1)
        lastUpdated:
          type: string
          format: date-time
          description: When this profile was last updated
        trend:
          $ref: '#/components/schemas/PerformanceTrend'
      required:
        - agentId
        - taskType
        - metrics
        - sampleSize
        - confidence
        - lastUpdated
        - trend

    PerformanceMetrics:
      type: object
      properties:
        latency:
          $ref: '#/components/schemas/LatencyMetrics'
        accuracy:
          $ref: '#/components/schemas/AccuracyMetrics'
        resources:
          $ref: '#/components/schemas/ResourceMetrics'
        compliance:
          $ref: '#/components/schemas/ComplianceMetrics'
        cost:
          $ref: '#/components/schemas/CostMetrics'
        reliability:
          $ref: '#/components/schemas/ReliabilityMetrics'
      required:
        - latency
        - accuracy
        - resources
        - compliance
        - cost
        - reliability

    LatencyMetrics:
      type: object
      properties:
        averageMs:
          type: number
          description: Average response time in milliseconds
        p95Ms:
          type: number
          description: 95th percentile response time
        p99Ms:
          type: number
          description: 99th percentile response time
        minMs:
          type: number
          description: Minimum response time
        maxMs:
          type: number
          description: Maximum response time
      required:
        - averageMs
        - p95Ms
        - p99Ms
        - minMs
        - maxMs

    AccuracyMetrics:
      type: object
      properties:
        successRate:
          type: number
          minimum: 0
          maximum: 1
          description: Task completion success rate
        qualityScore:
          type: number
          minimum: 0
          maximum: 1
          description: Average quality score from evaluations
        violationRate:
          type: number
          minimum: 0
          maximum: 1
          description: Rate of constitutional violations
        evaluationScore:
          type: number
          minimum: 0
          maximum: 1
          description: Average evaluation score
      required:
        - successRate
        - qualityScore
        - violationRate
        - evaluationScore

    ResourceMetrics:
      type: object
      properties:
        cpuUtilizationPercent:
          type: number
          minimum: 0
          maximum: 100
          description: CPU utilization percentage
        memoryUtilizationPercent:
          type: number
          minimum: 0
          maximum: 100
          description: Memory utilization percentage
        networkIoKbps:
          type: number
          description: Network I/O in KB/s
        diskIoKbps:
          type: number
          description: Disk I/O in KB/s
      required:
        - cpuUtilizationPercent
        - memoryUtilizationPercent
        - networkIoKbps
        - diskIoKbps

    ComplianceMetrics:
      type: object
      properties:
        validationPassRate:
          type: number
          minimum: 0
          maximum: 1
          description: Rate of passing constitutional validations
        violationSeverityScore:
          type: number
          minimum: 0
          maximum: 1
          description: Average severity of violations
        clauseCitationRate:
          type: number
          minimum: 0
          maximum: 1
          description: Rate of CAWS clause citations
      required:
        - validationPassRate
        - violationSeverityScore
        - clauseCitationRate

    CostMetrics:
      type: object
      properties:
        costPerTask:
          type: number
          description: Cost per task in processing units
        efficiencyScore:
          type: number
          minimum: 0
          maximum: 1
          description: Efficiency score (output quality / resource cost)
        resourceWastePercent:
          type: number
          minimum: 0
          maximum: 100
          description: Resource waste percentage
      required:
        - costPerTask
        - efficiencyScore
        - resourceWastePercent

    ReliabilityMetrics:
      type: object
      properties:
        mtbfHours:
          type: number
          description: Mean time between failures in hours
        availabilityPercent:
          type: number
          minimum: 0
          maximum: 100
          description: Service availability percentage
        errorRatePercent:
          type: number
          minimum: 0
          maximum: 100
          description: Error rate percentage
        recoveryTimeMinutes:
          type: number
          description: Recovery time from failures in minutes
      required:
        - mtbfHours
        - availabilityPercent
        - errorRatePercent
        - recoveryTimeMinutes

    PerformanceTrend:
      type: object
      properties:
        direction:
          type: string
          enum: [improving, declining, stable]
          description: Trend direction
        magnitude:
          type: number
          description: Trend magnitude (-1 to 1)
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: Confidence in trend analysis
        timeWindowHours:
          type: number
          description: Time window for trend analysis in hours
      required:
        - direction
        - magnitude
        - confidence
        - timeWindowHours

    PerformanceAnomaly:
      type: object
      properties:
        id:
          type: string
          description: Anomaly identifier
        type:
          type: string
          enum: [latency_spike, accuracy_drop, error_rate_increase, resource_saturation]
          description: Type of anomaly detected
        severity:
          type: string
          enum: [low, medium, high, critical]
          description: Anomaly severity level
        agentId:
          type: string
          description: Affected agent (if applicable)
        detectedAt:
          type: string
          format: date-time
          description: When the anomaly was detected
        description:
          type: string
          description: Human-readable anomaly description
        impact:
          type: object
          properties:
            affectedTasksPerHour:
              type: integer
              description: Estimated tasks affected per hour
            performanceDegradationPercent:
              type: number
              description: Performance degradation percentage
            estimatedRecoveryTimeMinutes:
              type: integer
              description: Estimated time to recover
        recommendations:
          type: array
          items:
            type: string
          description: Recommended actions to resolve the anomaly
      required:
        - id
        - type
        - severity
        - detectedAt
        - description
        - impact
        - recommendations

    TrendAnalysisResult:
      type: object
      properties:
        agentId:
          type: string
        overallTrend:
          $ref: '#/components/schemas/PerformanceTrend'
        metricTrends:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PerformanceTrend'
        confidence:
          type: number
          minimum: 0
          maximum: 1
        analysisTimeRange:
          type: object
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
      required:
        - agentId
        - overallTrend
        - metricTrends
        - confidence
        - analysisTimeRange

    BenchmarkDataset:
      type: object
      properties:
        id:
          type: string
          description: Dataset identifier
        name:
          type: string
          description: Human-readable name
        taskType:
          type: string
          description: Task type this dataset evaluates
        testCaseCount:
          type: integer
          description: Number of test cases
        createdAt:
          type: string
          format: date-time
        version:
          type: string
          description: Dataset version
        baselineMetrics:
          $ref: '#/components/schemas/PerformanceMetrics'
      required:
        - id
        - name
        - taskType
        - testCaseCount
        - createdAt
        - version
        - baselineMetrics

    BenchmarkResult:
      type: object
      properties:
        id:
          type: string
          description: Evaluation run identifier
        agentId:
          type: string
          description: Agent that was evaluated
        datasetId:
          type: string
          description: Dataset used for evaluation
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        overallScore:
          type: number
          minimum: 0
          maximum: 1
          description: Overall performance score
        metrics:
          $ref: '#/components/schemas/PerformanceMetrics'
        testCaseResults:
          type: array
          items:
            $ref: '#/components/schemas/BenchmarkTestCaseResult'
        baselineComparison:
          $ref: '#/components/schemas/BaselineComparison'
      required:
        - id
        - agentId
        - datasetId
        - startedAt
        - completedAt
        - overallScore
        - metrics
        - testCaseResults
        - baselineComparison

    BenchmarkTestCaseResult:
      type: object
      properties:
        testCaseId:
          type: string
        passed:
          type: boolean
        score:
          type: number
          minimum: 0
          maximum: 1
        latencyMs:
          type: number
        qualityScore:
          type: number
          minimum: 0
          maximum: 1
        error:
          type: string
      required:
        - testCaseId
        - passed
        - score

    BaselineComparison:
      type: object
      properties:
        improvement:
          type: number
          description: Overall improvement over baseline (-1 to 1)
        significance:
          type: number
          description: Statistical significance of improvement
        improvedMetrics:
          type: array
          items:
            type: string
            enum: [latency, accuracy, resources, compliance, cost, reliability]
        regressedMetrics:
          type: array
          items:
            type: string
            enum: [latency, accuracy, resources, compliance, cost, reliability]
      required:
        - improvement
        - significance
        - improvedMetrics
        - regressedMetrics

    RLTrainingBatch:
      type: object
      properties:
        id:
          type: string
          description: Batch identifier
        agentId:
          type: string
          description: Agent this batch is for
        samples:
          type: array
          items:
            $ref: '#/components/schemas/RLTrainingSample'
        createdAt:
          type: string
          format: date-time
        qualityScore:
          type: number
          minimum: 0
          maximum: 1
          description: Data quality score for this batch
        anonymizationLevel:
          type: string
          enum: [basic, differential, secure]
      required:
        - id
        - agentId
        - samples
        - createdAt
        - qualityScore
        - anonymizationLevel

    RLTrainingSample:
      type: object
      properties:
        id:
          type: string
        agentId:
          type: string
        taskType:
          type: string
        state:
          type: object
          description: State representation
        action:
          type: object
          description: Action taken
        reward:
          type: number
        nextState:
          type: object
          description: Next state
        done:
          type: boolean
        timestamp:
          type: string
          format: date-time
        integrityHash:
          type: string
      required:
        - id
        - agentId
        - taskType
        - state
        - action
        - reward
        - nextState
        - done
        - timestamp
        - integrityHash

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error type or code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
      required:
        - error
        - message

  responses:
    BadRequest:
      description: Bad request - invalid parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: unauthorized
              message:
                type: string
                example: Bearer token required

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Bearer token authentication