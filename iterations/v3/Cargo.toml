[workspace]
resolver = "2"
members = [
    "council",
    "workers",
    "apple-silicon",
    "research",
    "mcp-integration",
    "provenance",
    "claim-extraction",
    "reflexive-learning",
    "model-benchmarking",
    "security-policy-enforcer",
    "minimal-diff-evaluator",
    "context-preservation-engine"
]

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Darian Rosebrook <darian@example.com>"]
license = "MIT"

[workspace.dependencies]
# Core async runtime
tokio = { version = "1.0", features = ["full"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"

# Database
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "chrono", "uuid"] }
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.0", features = ["v4", "serde"] }

# HTTP and web
reqwest = { version = "0.11", features = ["json", "stream"] }
axum = { version = "0.7", features = ["json", "ws"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace"] }

# Logging and observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-opentelemetry = "0.22"
opentelemetry = { version = "0.21", features = ["trace", "metrics"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Configuration
config = "0.14"
clap = { version = "4.0", features = ["derive"] }

# Apple Silicon specific
core-foundation = "0.9"
objc = "0.2"

# ML/AI integration
candle-core = "0.3"
candle-nn = "0.3"
candle-transformers = "0.3"

# Vector operations for embeddings
ndarray = "0.15"

# CAWS integration (using Node.js tools, not Rust crate)
# caws-core = { path = "../../apps/tools/caws" }

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 1
debug = true
