name: Verify

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  verify:
    runs-on: macos-latest

    # matrix example for CAWS tiers  
    # TODO: Implement matrix example for CAWS tiers with the following requirements:
    #    - Implement matrix example for CAWS tiers
    #    - Handle matrix example for CAWS tiers error detection and recovery
    #    - Implement matrix example for CAWS tiers performance optimization
    #    - Handle matrix example for CAWS tiers performance metrics and analytics
    #    - Ensure matrix example for CAWS tiers operations meet performance requirements
    #    - Handle matrix example for CAWS tiers creation failures gracefully
    #    - Implement fallback mechanisms for matrix example for CAWS tiers operations
    #   - Add proper logging and diagnostics for matrix example for CAWS tiers issues
    # strategy:
    #   matrix:
    #     tier: [t1, t2, t3]
    #   fail-fast: false
    # env:
    #   COVERAGE_MIN: ${{ matrix.tier == 't1' && '0.90' || matrix.tier == 't2' && '0.80' || '0.70' }}
    defaults:
      run:
        working-directory: iterations/v3
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install grcov and lcov
        run: |
          brew update
          brew install grcov lcov

      - name: Install Node (for AJV)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run verify
        run: |
          COVERAGE_MIN=0.80 make verify

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            iterations/v3/target/coverage/lcov.info
            iterations/v3/target/coverage/html

      - name: Upload provenance report
        uses: actions/upload-artifact@v4
        with:
          name: provenance-report
          path: iterations/v3/target/provenance/report.json

      - name: Mutation testing (Tier 1 only)
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        run: |
          echo "Installing cargo-mutants for mutation testing..."
          cargo install cargo-mutants
          echo "Running mutation testing with Tier 1 settings..."
          ENABLE_MUTATION=true MUTATION_MIN=0.70 make mutation-tests
