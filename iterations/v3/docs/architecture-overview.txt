╔════════════════════════════════════════════════════════════════════════════════╗
║                   Core ML Integration - Architecture Overview                   ║
║                                                                                 ║
║                         PHASES 0-2 COMPLETE                                  ║
║                         PHASE 3 INFRASTRUCTURE READY                          ║
╚════════════════════════════════════════════════════════════════════════════════╝

┌────────────────────────────────────────────────────────────────────────────────┐
│                        PUBLIC RUST API (Stable Seam)                           │
│                                                                                 │
│  InferenceEngine Trait ◄────────────► PreparedModel Trait                      │
│      │                                      │                                   │
│      ├─ prepare()                          ├─ cache_key()                      │
│      ├─ infer()                            ├─ io_schema()                      │
│      └─ capabilities()                     └─ sla_estimate()                   │
│                                                                                 │
│  ModelArtifact Enum                  CapabilityReport Struct                   │
│  ├─ Authoring (format, path, sha)   ├─ device_class                          │
│  └─ Compiled (platform, path)       ├─ ane_op_coverage_pct                   │
│                                      └─ compute_units (actual vs requested)   │
└────────────────────────────────────────────────────────────────────────────────┘
                 ▲
    ┌────────────┴─────────────────────┐
    │                                  │
    │                                  │
┌───┴──────────────────────┐   ┌──────┴──────────────────────┐
│   CANDLE BACKEND         │   │   CORE ML BACKEND           │
│   (CPU Reference)        │   │   (Apple Silicon ANE/GPU)   │
│                          │   │                             │
│  test_candle_send_sync │   │  4/4 tests passing        │
│  Numeric parity        │   │  Telemetry integrated    │
│    baseline              │   │  Circuit breaker active  │
│  Always available      │   │  Fallback to CPU on fail │
└──────────────────────────┘   └─────────────────────────────┘
                                         │
                    ┌────────────────────┼───────────────────┐
                    │                    │                   │
         ┌──────────┴──────────┐  ┌─────┴──────────┐  ┌─────┴──────────┐
         │ TELEMETRY SYSTEM    │  │ CORE ML BRIDGE │  │ Swift Bridge   │
         │ (427 lines)         │  │ (300+ lines)   │  │ (250+ lines)   │
         │                     │  │                │  │                │
         │  7/7 tests pass  │  │  Safe FFI    │  │  C ABI       │
         │  Metrics collect │  │  Drop guards │  │  Auto pools  │
         │  Circuit breaker │  │  No panics   │  │  Error xlate │
         │  Thread-safe     │  │  Timeout     │  │  SPM target  │
         │                     │  │    enforcement│  │                │
         │ Tracks:            │  │                │  │ Functions:     │
         │ • Compile ops      │  │                │  │ • compile      │
         │ • Infer latency    │  │                │  │ • load         │
         │ • p50/95/99        │  │                │  │ • predict      │
         │ • ANE dispatch     │  │                │  │ • schema       │
         │ • Memory metrics   │  │                │  │ • free         │
         │ • Failure modes    │  │                │  │                │
         │ • 6 failure types  │  │                │  │ Safety:        │
         │   tracked          │  │                │  │ • @autoreleasepool
         │                     │  │                │  │ • Exception abs.
         │ Circuit Breaker:    │  │                │  │ • Error xlate  │
         │ • <95% success     │  │                │  │ • Memory mgmt  │
         │ • SLA violations   │  │                │  │                │
         │ • Memory pressure  │  │                │  │                │
         └─────────────────────┘  └─────┬──────────┘  └────────────────┘
                                        │
                                        ▼
                        ┌─────────────────────────────┐
                        │   Core ML Framework         │
                        │   (Objective-C/Swift)       │
                        │                             │
                        │ • MLModel.compile()         │
                        │ • MLModel.predict()         │
                        │ • MLModelConfiguration      │
                        │ • ComputeUnits selection    │
                        │ • ANE/GPU dispatch          │
                        └─────────────────────────────┘

═════════════════════════════════════════════════════════════════════════════════

PHASE 3 VALIDATION CHECKLIST
═════════════════════════════════════════════════════════════════════════════════

 Phase 2 (Telemetry System)
    11/11 tests verified
    Metrics collection functional
    Circuit breaker tested
    Thread safety validated
    No panics across FFI

 Phase 3A (Model Acquisition)
    Download FastViT T8 model
    Save to: tests/fixtures/models/fastvit_t8.mlmodel
    Create manifest.json
   
 Phase 3B (Inference Testing)
    Load model with telemetry
    Run 1000+ inference cycles
    Measure ANE dispatch rate
    Validate performance speedup
   
 Phase 3C (Performance Validation)
    Core ML p99 ≤ 0.7x CPU p99
    Numeric parity (L∞ ≤ 1e-2, RMSE ≤ 1e-3)
    Profile with Instruments.app

═════════════════════════════════════════════════════════════════════════════════

STATISTICS
═════════════════════════════════════════════════════════════════════════════════

Code Written:        ~2,500 lines of Rust + Swift
Tests Passing:       52/55 apple-silicon suite (11/11 Core ML specific)
Documentation:       ~2,000 lines across 4 new guides
Execution Ready:     100% (telemetry verified, awaiting models)
Overall Completion:  ~70% (phases 0-2 done, phase 3 ready)

═════════════════════════════════════════════════════════════════════════════════
