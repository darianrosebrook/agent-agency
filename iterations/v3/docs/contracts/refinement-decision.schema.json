{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://agent-agency/v3/contracts/refinement-decision.schema.json",
  "title": "RefinementDecision",
  "description": "Council-directed refinement decision with targeted improvement focus",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Contract version for compatibility"
    },
    "task_id": {
      "type": "string",
      "format": "uuid",
      "description": "Task identifier"
    },
    "working_spec_id": {
      "type": "string",
      "pattern": "^[A-Z]+-[0-9]+$",
      "description": "Working spec identifier"
    },
    "iteration": {
      "type": "integer",
      "minimum": 1,
      "description": "Current iteration number"
    },
    "decision": {
      "type": "string",
      "enum": ["accept", "refine", "reject", "escalate"],
      "description": "Council's decision on current artifacts"
    },
    "confidence": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Council's confidence in the decision (0.0-1.0)"
    },
    "rationale": {
      "type": "string",
      "minLength": 1,
      "maxLength": 2000,
      "description": "Detailed reasoning for the decision"
    },
    "evidence": {
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": ["quality_report", "test_results", "code_review", "performance_metrics", "security_scan", "accessibility_audit"]
          },
          "description": {"type": "string"},
          "severity": {
            "type": "string",
            "enum": ["critical", "high", "medium", "low", "info"]
          },
          "supporting_data": {"type": "object", "additionalProperties": true}
        },
        "required": ["type", "description"]
      },
      "description": "Evidence supporting the decision"
    },
    "refinement_directive": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "focus_areas": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "unit_tests", "integration_tests", "e2e_tests", "code_coverage", "mutation_testing",
              "linting", "type_checking", "security", "performance", "accessibility",
              "error_handling", "documentation", "code_structure", "api_design", "data_validation"
            ]
          },
          "description": "Areas requiring focused improvement"
        },
        "priority_order": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Priority order for addressing focus areas"
        },
        "max_iterations": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5,
          "description": "Maximum additional iterations allowed"
        },
        "quality_targets": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "min_overall_score": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Minimum overall quality score required"
            },
            "required_gates": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Specific gates that must pass"
            },
            "blocking_issues": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Issues that must be resolved"
            }
          },
          "description": "Specific quality targets to achieve"
        },
        "constraints_adjustments": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "increase_budget": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "additional_files": {"type": "integer", "minimum": 0},
                "additional_loc": {"type": "integer", "minimum": 0}
              },
              "description": "Increase change budget if needed"
            },
            "extend_timeline": {
              "type": "integer",
              "minimum": 1,
              "maximum": 480,
              "description": "Extend maximum duration in minutes"
            },
            "adjust_scope": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "add_allowed_paths": {
                  "type": "array",
                  "items": {"type": "string"}
                },
                "remove_blocked_paths": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "description": "Adjust scope restrictions"
            }
          },
          "description": "Suggested constraint adjustments"
        },
        "specific_actions": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "action_type": {
                "type": "string",
                "enum": ["add_tests", "fix_linting", "improve_coverage", "address_security", "enhance_performance", "add_documentation", "refactor_code", "update_types", "add_error_handling", "validate_data"]
              },
              "target": {"type": "string"},
              "description": {"type": "string"},
              "priority": {
                "type": "string",
                "enum": ["critical", "high", "medium", "low"]
              },
              "estimated_effort": {
                "type": "string",
                "enum": ["trivial", "small", "medium", "large"]
              }
            },
            "required": ["action_type", "description"]
          },
          "description": "Specific actionable improvements"
        },
        "guidance": {
          "type": "string",
          "description": "General guidance for the refinement approach"
        }
      },
      "description": "Detailed refinement instructions (only present for 'refine' decisions)"
    },
    "council_verdict": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "quorum_achieved": {"type": "boolean"},
        "total_judges": {"type": "integer", "minimum": 1},
        "votes_for_decision": {"type": "integer", "minimum": 0},
        "dissenting_opinions": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "judge_id": {"type": "string"},
              "alternative_decision": {
                "type": "string",
                "enum": ["accept", "refine", "reject", "escalate"]
              },
              "rationale": {"type": "string"}
            },
            "required": ["judge_id", "alternative_decision", "rationale"]
          }
        },
        "judge_contributions": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "judge_id": {"type": "string"},
              "judge_type": {
                "type": "string",
                "enum": ["quality", "security", "performance", "usability", "compliance", "architecture"]
              },
              "decision": {
                "type": "string",
                "enum": ["accept", "refine", "reject", "escalate"]
              },
              "confidence": {"type": "number", "minimum": 0, "maximum": 1},
              "focus_recommendations": {
                "type": "array",
                "items": {"type": "string"}
              }
            },
            "required": ["judge_id", "judge_type", "decision", "confidence"]
          }
        }
      },
      "required": ["quorum_achieved", "total_judges"],
      "description": "Detailed council voting and consensus information"
    },
    "risk_assessment": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "current_risk_level": {
          "type": "string",
          "enum": ["low", "medium", "high", "critical"]
        },
        "risk_factors": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "factor": {"type": "string"},
              "severity": {
                "type": "string",
                "enum": ["low", "medium", "high", "critical"]
              },
              "description": {"type": "string"}
            },
            "required": ["factor", "severity", "description"]
          }
        },
        "mitigation_required": {"type": "boolean"},
        "escalation_recommended": {"type": "boolean"},
        "escalation_reason": {"type": "string"}
      },
      "description": "Risk assessment and mitigation recommendations"
    },
    "metadata": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "decided_at": {"type": "string", "format": "date-time"},
        "decision_duration_ms": {"type": "integer", "minimum": 0},
        "council_version": {"type": "string"},
        "model_versions": {
          "type": "object",
          "patternProperties": {
            "^.*$": {"type": "string"}
          }
        },
        "processing_metadata": {"type": "object", "additionalProperties": true}
      },
      "required": ["decided_at"],
      "description": "Decision metadata and processing information"
    }
  },
  "required": ["version", "task_id", "working_spec_id", "iteration", "decision", "confidence", "rationale", "council_verdict"],
  "allOf": [
    {
      "if": {
        "properties": {"decision": {"const": "refine"}}
      },
      "then": {
        "required": ["refinement_directive"]
      }
    },
    {
      "if": {
        "properties": {"decision": {"const": "reject"}}
      },
      "then": {
        "required": ["risk_assessment"]
      }
    }
  ]
}
