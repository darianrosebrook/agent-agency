--- mcp-integration/src/server.rs
+++ replace HttpServerHandle::shutdown -> Result<()> with Ok(())
@@ -23,29 +23,17 @@
 pub struct HttpServerHandle {
     join_handle: JoinHandle<()>,
     shutdown_tx: Option<oneshot::Sender<()>>,
 }
 
 impl HttpServerHandle {
     /// Gracefully shutdown the HTTP server.
     pub async fn shutdown(mut self) -> Result<()> {
-        info!("Shutting down HTTP server");
-
-        if let Some(tx) = self.shutdown_tx.take() {
-            // Ignore error if thread has already exited.
-            let _ = tx.send(());
-        }
-
-        self.join_handle
-            .await
-            .map_err(|err| anyhow!("HTTP server task failed: {}", err))?;
-
-        info!("HTTP server shutdown complete");
-        Ok(())
+        Ok(()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 fn unauthorized_http_response() -> Response<Body> {
     Response::builder()
         .status(StatusCode::UNAUTHORIZED)
         .body(Body::from("unauthorized"))
         .expect("response")
