--- mcp-integration/src/server.rs
+++ replace MCPServer::start_http_server -> Result<()> with Ok(())
@@ -514,39 +514,17 @@
     #[cfg(feature = "test-utils")]
     pub async fn register_tool_for_testing(&self, tool: MCPTool) -> Result<()> {
         info!("Registering tool for testing: {}", tool.name);
         self.tool_registry.register_tool(tool).await
     }
 
     /// Start HTTP server
     async fn start_http_server(&self) -> Result<()> {
-        if !self.config.server.enable_http {
-            return Ok(());
-        }
-
-        info!("Starting HTTP server on port {}", self.config.server.port);
-
-        let (ready, handle) = self.spawn_http_server().await?;
-
-        match timeout(Duration::from_secs(3), ready).await {
-            Ok(Ok(())) => {
-                let mut slot = self.http_handle.write().await;
-                *slot = Some(handle);
-                Ok(())
-            }
-            Ok(Err(_)) => {
-                handle.shutdown().await?;
-                bail!("HTTP server task ended before readiness");
-            }
-            Err(_) => {
-                handle.shutdown().await?;
-                bail!("HTTP server failed to become ready in time");
-            }
-        }
+        Ok(()) /* ~ changed by cargo-mutants ~ */
     }
 
     /// Start WebSocket server
     async fn start_websocket_server(&self) -> Result<()> {
         if !self.config.server.enable_websocket {
             return Ok(());
         }
 
