@import '@/styles/mixins.scss';

.agentGrid {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xl);
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
  gap: var(--spacing-md);
}

.summary {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
}

.summaryText {
  background-color: var(--color-bg-secondary);
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--radius-sm);
  border: 1px solid var(--color-border);
}

.agentsList {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.agentCard {
  @include card-base;
  @include card-hover;
  padding: var(--spacing-lg);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
  cursor: pointer;
  transition: all var(--transition-fast);
  border-left: 4px solid var(--color-gray-400);

  &.selected {
    box-shadow: var(--shadow-lg);
    transform: translateY(-2px);
    border-color: var(--color-primary-500);
  }

  &.active {
    border-left-color: var(--color-success);
  }

  &.idle {
    border-left-color: var(--color-warning);
  }

  &.error {
    border-left-color: var(--color-error);
  }

  &.maintenance {
    border-left-color: var(--color-gray-500);
  }

  &.unknown {
    border-left-color: var(--color-gray-400);
  }

  &:focus {
    outline: 2px solid var(--color-primary-500);
    outline-offset: 2px;
  }
}

.agentHeader {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  gap: var(--spacing-md);
}

.agentIdentity {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  flex: 1;
  min-width: 0;
}

.agentIcon {
  font-size: var(--font-size-2xl);
  flex-shrink: 0;
}

.agentInfo {
  flex: 1;
  min-width: 0;
}

.agentName {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  margin: 0 0 var(--spacing-xs) 0;
  word-break: break-word;
}

.agentType {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  text-transform: capitalize;
}

.agentStatus {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--radius-lg);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  text-transform: capitalize;
  flex-shrink: 0;

  .statusDot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: currentColor;
  }

  &.active {
    background-color: var(--color-success-50);
    color: var(--color-success-800);
  }

  &.idle {
    background-color: var(--color-warning-50);
    color: var(--color-warning-800);
  }

  &.error {
    background-color: var(--color-error-50);
    color: var(--color-error-800);
  }

  &.maintenance {
    background-color: var(--color-gray-50);
    color: var(--color-gray-700);
  }

  &.unknown {
    background-color: var(--color-gray-50);
    color: var(--color-gray-700);
  }
}

.agentMetrics {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.metricsRow {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: var(--spacing-md);
}

.agentStats {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: var(--spacing-md);
  padding-top: var(--spacing-md);
  border-top: 1px solid var(--color-border-light);
}

.stat {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
  text-align: center;
}

.statLabel {
  font-size: var(--font-size-xs);
  color: var(--color-text-secondary);
  font-weight: var(--font-weight-medium);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.statValue {
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-bold);
  color: var(--color-text-primary);
  font-family: var(--font-family-mono);
}

.errorSection {
  padding: var(--spacing-md);
  background-color: var(--color-error-50);
  border: 1px solid var(--color-error-200);
  border-radius: var(--radius-md);

  h4 {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--color-error-800);
    margin: 0 0 var(--spacing-sm) 0;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .errorMessage {
    font-size: var(--font-size-sm);
    color: var(--color-error-700);
    margin: 0;
    font-family: var(--font-family-mono);
    word-break: break-word;
  }
}

// Performance color classes
.excellent {
  border-left-color: var(--color-success);
}

.good {
  border-left-color: var(--color-success-600);
}

.fair {
  border-left-color: var(--color-warning);
}

.poor {
  border-left-color: var(--color-error);
}

// Loading and error states
.loading,
.error,
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: var(--spacing-3xl);
  color: var(--color-text-secondary);
}

.loading .loadingSpinner,
.error .loadingSpinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--color-gray-300);
  border-top: 3px solid var(--color-primary-600);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: var(--spacing-lg);
}

.loading p,
.error p {
  font-size: var(--font-size-base);
  margin-bottom: var(--spacing-xl);
}

.error {
  h3 {
    color: var(--color-error-800);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    margin-bottom: var(--spacing-md);
    margin-top: 0;
  }

  button {
    @include button-primary;
    font-size: var(--font-size-sm);
    padding: var(--spacing-md) var(--spacing-lg);
  }
}

.emptyState {
  .emptyIcon {
    font-size: var(--font-size-4xl);
    margin-bottom: var(--spacing-lg);
    opacity: 0.6;
  }

  h3 {
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-medium);
    margin-bottom: var(--spacing-sm);
    margin-top: 0;
  }

  p {
    font-size: var(--font-size-base);
    line-height: var(--line-height-relaxed);
    margin: 0 0 var(--spacing-xl) 0;
    max-width: 400px;
  }

  .emptyActions {
    .secondaryButton {
      @include button-secondary;
      opacity: 0.6;
      cursor: not-allowed;
    }
  }
}

// Responsive design
@include breakpoint(lg) {
  .metricsRow {
    grid-template-columns: repeat(auto-fit, minmax(130px, 1fr));
  }

  .agentStats {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  }
}

@include breakpoint(md) {
  .agentHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-sm);
  }

  .agentStatus {
    align-self: stretch;
    text-align: center;
  }

  .metricsRow {
    grid-template-columns: repeat(2, 1fr);
  }

  .agentStats {
    grid-template-columns: repeat(2, 1fr);
  }

  .agentCard {
    padding: var(--spacing-md);
  }
}

@include breakpoint(sm) {
  .header {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-sm);
  }

  .summary {
    align-self: stretch;
    text-align: center;
  }

  .agentCard {
    padding: var(--spacing-sm);
  }

  .agentMetrics {
    gap: var(--spacing-md);
  }

  .metricsRow {
    grid-template-columns: 1fr;
  }

  .agentStats {
    grid-template-columns: repeat(2, 1fr);
    gap: var(--spacing-sm);
  }

  .stat {
    gap: var(--spacing-xs);
  }

  .statLabel {
    font-size: var(--font-size-xs);
  }

  .statValue {
    font-size: var(--font-size-sm);
  }
}
