@import '@/styles/mixins.scss';

.coordinationMetrics {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xl);
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
  gap: var(--spacing-md);
}

.timestamp {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  font-family: var(--font-family-mono);
}

.metricsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--spacing-lg);
}

.taskCoordination,
.communicationMetrics {
  h3 {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text-primary);
    margin: 0 0 var(--spacing-lg) 0;
  }
}

.taskMetrics,
.commMetrics {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: var(--spacing-md);
}

.coordinationHealth {
  h3 {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text-primary);
    margin: 0 0 var(--spacing-lg) 0;
  }
}

.healthIndicators {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--spacing-lg);
}

.indicator {
  @include card-base;
  padding: var(--spacing-lg);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.indicatorLabel {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  flex: 1;
}

.indicatorIcon {
  font-size: var(--font-size-lg);
}

.indicatorValue {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-secondary);
  text-align: right;
}

// Loading and error states
.loading,
.error,
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: var(--spacing-3xl);
  color: var(--color-text-secondary);
}

.loading .loadingSpinner,
.error .loadingSpinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--color-gray-300);
  border-top: 3px solid var(--color-primary-600);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: var(--spacing-lg);
}

.loading p,
.error p {
  font-size: var(--font-size-base);
  margin-bottom: var(--spacing-xl);
}

.error {
  h3 {
    color: var(--color-error-800);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    margin-bottom: var(--spacing-md);
    margin-top: 0;
  }

  button {
    @include button-primary;
    font-size: var(--font-size-sm);
    padding: var(--spacing-md) var(--spacing-lg);
  }
}

.emptyState {
  .emptyIcon {
    font-size: var(--font-size-4xl);
    margin-bottom: var(--spacing-lg);
    opacity: 0.6;
  }

  h3 {
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-medium);
    margin-bottom: var(--spacing-sm);
    margin-top: 0;
  }

  p {
    font-size: var(--font-size-base);
    line-height: var(--line-height-relaxed);
    margin: 0 0 var(--spacing-xl) 0;
    max-width: 400px;
  }

  .emptyActions {
    .secondaryButton {
      @include button-secondary;
      opacity: 0.6;
      cursor: not-allowed;
    }
  }
}

// Responsive design
@include breakpoint(lg) {
  .metricsGrid {
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  }

  .taskMetrics,
  .commMetrics {
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  }

  .healthIndicators {
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  }
}

@include breakpoint(md) {
  .header {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-sm);
  }

  .timestamp {
    align-self: stretch;
    text-align: center;
  }

  .metricsGrid {
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  }

  .taskMetrics,
  .commMetrics {
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  }

  .healthIndicators {
    grid-template-columns: 1fr;
  }

  .indicator {
    padding: var(--spacing-md);
  }
}

@include breakpoint(sm) {
  .metricsGrid {
    grid-template-columns: repeat(2, 1fr);
  }

  .taskMetrics,
  .commMetrics {
    grid-template-columns: 1fr;
  }

  .healthIndicators {
    gap: var(--spacing-md);
  }

  .indicator {
    padding: var(--spacing-sm);
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-sm);
  }

  .indicatorLabel {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-xs);
  }

  .indicatorValue {
    text-align: left;
    align-self: flex-end;
  }
}
