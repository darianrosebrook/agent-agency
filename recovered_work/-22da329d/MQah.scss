// Task List Component Styles
.taskList {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.header {
  display: grid;
  grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr;
  gap: 1rem;
  padding: 1rem 1.5rem;
  background-color: var(--color-background);
  border-bottom: 1px solid var(--color-border);
  font-weight: 600;
  font-size: 0.875rem;
  color: var(--color-text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.025em;
}

.headerCell {
  display: flex;
  align-items: center;
}

.body {
  display: flex;
  flex-direction: column;
}

.taskRow {
  display: grid;
  grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr;
  gap: 1rem;
  padding: 1rem 1.5rem;
  border-bottom: 1px solid var(--color-border);
  transition: all 0.2s ease;

  &:hover {
    background-color: var(--color-background-secondary);
  }

  &:last-child {
    border-bottom: none;
  }
}

.taskCell,
.statusCell,
.phaseCell,
.priorityCell,
.dateCell,
.actionsCell {
  display: flex;
  align-items: center;
  min-height: 3rem;
}

.taskCell {
  align-items: flex-start;
  padding-top: 0.5rem;
}

.taskInfo {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  width: 100%;
}

.taskTitle {
  font-size: 1rem;
  font-weight: 600;
  color: var(--color-primary);
  text-decoration: none;
  line-height: 1.3;
  transition: color 0.2s ease;

  &:hover {
    color: var(--color-primary-dark);
    text-decoration: underline;
  }
}

.taskDescription {
  font-size: 0.875rem;
  color: var(--color-text-secondary);
  line-height: 1.4;
  margin: 0;
}

.taskMeta {
  display: flex;
  gap: 1rem;
  align-items: center;
  font-size: 0.75rem;
  color: var(--color-text-tertiary);
}

.taskId {
  font-family: var(--font-mono);
  background-color: var(--color-background);
  padding: 0.125rem 0.375rem;
  border-radius: 0.25rem;
  border: 1px solid var(--color-border);
}

.retryCount {
  color: var(--color-warning);
  font-weight: 500;
}

.status {
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.75rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.025em;

  &.success {
    background-color: var(--color-success-light);
    color: var(--color-success-dark);
  }

  &.primary {
    background-color: var(--color-primary-light);
    color: var(--color-primary-dark);
  }

  &.warning {
    background-color: var(--color-warning-light);
    color: var(--color-warning-dark);
  }

  &.secondary {
    background-color: var(--color-secondary-light);
    color: var(--color-secondary-dark);
  }

  &.error {
    background-color: var(--color-error-light);
    color: var(--color-error-dark);
  }

  &.neutral {
    background-color: var(--color-neutral-light);
    color: var(--color-neutral-dark);
  }
}

.phase {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  color: var(--color-text-primary);
  font-weight: 500;
}

.priority {
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.75rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.025em;

  &.critical {
    background-color: var(--color-error-light);
    color: var(--color-error-dark);
  }

  &.high {
    background-color: var(--color-warning-light);
    color: var(--color-warning-dark);
  }

  &.medium {
    background-color: var(--color-info-light);
    color: var(--color-info-dark);
  }

  &.low {
    background-color: var(--color-neutral-light);
    color: var(--color-neutral-dark);
  }
}

.date {
  font-size: 0.875rem;
  color: var(--color-text-secondary);
  font-family: var(--font-mono);
}

.actions {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.actionButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.375rem;
  border-radius: 0.25rem;
  font-size: 1rem;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover {
    background-color: var(--color-background-secondary);
    transform: scale(1.1);
  }

  &:active {
    transform: scale(0.95);
  }
}

.loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem 2rem;
  gap: 1rem;

  p {
    color: var(--color-text-secondary);
    font-size: 0.875rem;
  }
}

.spinner {
  width: 2rem;
  height: 2rem;
  border: 2px solid var(--color-border);
  border-top: 2px solid var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem 2rem;
  text-align: center;
  color: var(--color-text-secondary);
}

.emptyIcon {
  font-size: 3rem;
  margin-bottom: 1rem;
  opacity: 0.5;
}

.emptyState h3 {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--color-text-primary);
  margin: 0 0 0.5rem 0;
}

.emptyState p {
  margin: 0;
  font-size: 0.875rem;
}

// Responsive design
@media (max-width: 1024px) {
  .header,
  .taskRow {
    grid-template-columns: 2fr 1fr 1fr 1fr 1fr;
  }

  .headerCell:nth-child(3),
  .taskRow .phaseCell {
    display: none;
  }
}

@media (max-width: 768px) {
  .header,
  .taskRow {
    grid-template-columns: 1fr;
    gap: 0.5rem;
  }

  .headerCell {
    display: none;
  }

  .taskRow {
    padding: 1rem;
    border-radius: 0.5rem;
    margin-bottom: 0.5rem;
    background-color: var(--color-background);
    border: 1px solid var(--color-border);
  }

  .taskCell,
  .statusCell,
  .phaseCell,
  .priorityCell,
  .dateCell,
  .actionsCell {
    min-height: auto;
    padding: 0.25rem 0;
  }

  .taskCell {
    order: 1;
  }

  .statusCell {
    order: 2;
  }

  .phaseCell {
    order: 3;
  }

  .priorityCell {
    order: 4;
  }

  .dateCell {
    order: 5;
  }

  .actionsCell {
    order: 6;
    justify-content: flex-end;
  }

  .taskMeta {
    flex-direction: column;
    gap: 0.25rem;
    align-items: flex-start;
  }

  .actions {
    justify-content: flex-end;
  }
}

// Dark mode support
@media (prefers-color-scheme: dark) {
  .taskRow {
    &:hover {
      background-color: var(--color-background);
    }
  }

  .taskId {
    background-color: var(--color-background-secondary);
    border-color: var(--color-border-dark);
  }

  .actionButton {
    &:hover {
      background-color: var(--color-background);
    }
  }
}