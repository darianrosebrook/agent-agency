apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: agent-agency-postgres
  namespace: agent-agency
  labels:
    app: agent-agency-postgres
    component: database
spec:
  serviceName: agent-agency-postgres
  replicas: 1
  selector:
    matchLabels:
      app: agent-agency-postgres
  template:
    metadata:
      labels:
        app: agent-agency-postgres
        component: database
    spec:
      serviceAccountName: agent-agency-database
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          env:
            - name: POSTGRES_USER
              value: "agent_agency"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: agent-agency-secrets
                  key: database-password
            - name: POSTGRES_DB
              value: "agent_agency"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_INITDB_ARGS
              value: "--data-checksums"
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 2
              memory: 4Gi
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - agent_agency
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - agent_agency
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-init
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-init
          configMap:
            name: agent-agency-postgres-init
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
        labels:
          app: agent-agency-postgres
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi
        storageClassName: standard
