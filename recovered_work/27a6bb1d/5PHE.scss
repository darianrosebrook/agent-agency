@import '@/styles/variables';
@import '@/styles/mixins';

.filtersBar {
  @include card-base;
  margin-bottom: var(--spacing-lg);
  background-color: var(--color-bg-secondary);
}

.filtersHeader {
  @include flex-between;
  align-items: center;
  padding: var(--spacing-md);
  border-bottom: 1px solid var(--color-border-light);
}

.toggleButton {
  @include flex-center;
  gap: var(--spacing-sm);
  background: none;
  border: none;
  cursor: pointer;
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-primary);
  padding: var(--spacing-sm);
  border-radius: var(--radius-md);
  transition: background-color var(--transition-fast);

  &:hover {
    background-color: var(--color-bg-primary);
  }

  &:focus {
    outline: 2px solid var(--color-primary-500);
    outline-offset: 2px;
  }
}

.toggleIcon {
  font-size: var(--font-size-lg);
  font-weight: bold;
  color: var(--color-primary-600);
  width: 20px;
  text-align: center;
}

.activeCount {
  background-color: var(--color-primary-600);
  color: white;
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--radius-sm);
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-medium);
  font-family: var(--font-family-mono);
}

.clearButton {
  @include button-secondary;
  font-size: var(--font-size-sm);
  padding: var(--spacing-xs) var(--spacing-sm);
  background: none;
  border: 1px solid var(--color-error-300);
  color: var(--color-error-700);

  &:hover {
    background-color: var(--color-error-50);
    border-color: var(--color-error-400);
  }
}

.filtersContent {
  padding: var(--spacing-lg);
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--spacing-lg);
}

.filterGroup {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.filterLabel {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.filterOptions {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.checkboxLabel {
  @include flex-center;
  gap: var(--spacing-sm);
  cursor: pointer;
  padding: var(--spacing-xs);
  border-radius: var(--radius-sm);
  transition: background-color var(--transition-fast);

  &:hover {
    background-color: var(--color-bg-primary);
  }

  input[type="checkbox"] {
    width: 16px;
    height: 16px;
    accent-color: var(--color-primary-600);
    cursor: pointer;
  }
}

.checkboxText {
  font-size: var(--font-size-sm);
  color: var(--color-text-primary);
  user-select: none;
}

.textInput {
  @include input-base;
  width: 100%;
  font-size: var(--font-size-sm);
  padding: var(--spacing-sm) var(--spacing-md);
}

.dateInputs {
  @include flex-center;
  gap: var(--spacing-sm);
}

.dateInput {
  @include input-base;
  font-size: var(--font-size-sm);
  padding: var(--spacing-sm);
  flex: 1;
  min-width: 120px;
}

.dateSeparator {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  font-weight: var(--font-weight-medium);
}

// Responsive design
@include breakpoint(lg) {
  .filtersContent {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }
}

@include breakpoint(md) {
  .filtersContent {
    grid-template-columns: 1fr;
  }

  .filtersHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-sm);
  }

  .clearButton {
    align-self: stretch;
  }

  .dateInputs {
    flex-direction: column;
    align-items: stretch;
  }

  .dateSeparator {
    display: none;
  }
}

@include breakpoint(sm) {
  .filtersContent {
    padding: var(--spacing-md);
  }

  .filterOptions {
    gap: var(--spacing-xs);
  }
}
