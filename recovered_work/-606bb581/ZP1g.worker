# Agent Agency Worker Service Dockerfile
FROM rust:1.75-slim-bullseye AS builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy workspace configuration
COPY Cargo.toml Cargo.lock ./

# Copy workspace members
COPY orchestration/Cargo.toml ./orchestration/
COPY workers/Cargo.toml ./workers/
COPY self-prompting-agent/Cargo.toml ./self-prompting-agent/
COPY claim-extraction/Cargo.toml ./claim-extraction/
COPY file_ops/Cargo.toml ./file_ops/
COPY config/Cargo.toml ./config/
COPY database/Cargo.toml ./database/

# Create dummy main.rs files for dependencies
RUN mkdir -p orchestration/src workers/src self-prompting-agent/src \
    claim-extraction/src file_ops/src config/src database/src && \
    echo "fn main() {}" > orchestration/src/main.rs && \
    echo "fn main() {}" > workers/src/main.rs && \
    echo "fn main() {}" > self-prompting-agent/src/main.rs && \
    echo "fn main() {}" > claim-extraction/src/main.rs && \
    echo "fn main() {}" > file_ops/src/main.rs && \
    echo "fn main() {}" > config/src/main.rs && \
    echo "fn main() {}" > database/src/main.rs

# Build dependencies
RUN cargo build --release && rm -rf target/release/deps/agent_agency*

# Copy source code
COPY orchestration/src ./orchestration/src
COPY workers/src ./workers/src
COPY self-prompting-agent/src ./self-prompting-agent/src
COPY claim-extraction/src ./claim-extraction/src
COPY file_ops/src ./file_ops/src
COPY config/src ./config/src
COPY database/src ./database/src

# Build the worker service
RUN cargo build --release --bin agent-agency-worker

# Runtime stage
FROM debian:bullseye-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
RUN mkdir -p /app/workspace /app/logs
WORKDIR /app

# Copy binary from builder
COPY --from=builder /app/target/release/agent-agency-worker /app/agent-agency-worker

# Create non-root user
RUN useradd --create-home --shell /bin/bash agent && \
    chown -R agent:agent /app
USER agent

# Expose port for health checks
EXPOSE 9090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:9090/health || exit 1

# Run the application
CMD ["./agent-agency-worker"]
