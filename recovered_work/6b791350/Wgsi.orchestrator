# Agent Agency V3 - Orchestrator Dockerfile
# Multi-stage build for optimized production image

# Build stage
FROM rust:1.75-slim AS builder

# Install system dependencies for compilation
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libpq-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy workspace configuration
COPY Cargo.toml Cargo.lock ./

# Copy source code
COPY src ./src
COPY iterations/v3/orchestration ./iterations/v3/orchestration

# Build the application
RUN cargo build --release --bin agent-agency-orchestrator

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -r agent-agency && useradd -r -g agent-agency agent-agency

# Create directories
RUN mkdir -p /app/data /app/logs /app/config && \
    chown -R agent-agency:agent-agency /app

# Copy binary from builder stage
COPY --from=builder /app/target/release/agent-agency-orchestrator /app/

# Copy configuration templates
COPY deploy/docker/config/ /app/config/

# Set working directory
WORKDIR /app

# Switch to non-root user
USER agent-agency

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080

# Set environment variables
ENV RUST_LOG=info
ENV RUST_BACKTRACE=1

# Run the application
CMD ["./agent-agency-orchestrator"]
