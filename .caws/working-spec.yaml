id: AGENT-0005
title: "Add Frontier queue for spawned tasks"
risk_tier: 2
mode: feature
change_budget:
  max_files: 6
  max_loc: 350
blast_radius:
  modules: ["orchestration"]
  data_migration: false
operational_rollback_slo: "2m"
scope:
  in:
    - "iterations/v3/orchestration/src/frontier.rs"
    - "iterations/v3/orchestration/src/lib.rs"  # Add frontier module
    - "iterations/v3/orchestration/src/audited_orchestrator.rs"  # Integrate frontier
  out:
    - "iterations/v3/self-prompting-agent/"
    - "iterations/v3/database/"
    - "iterations/v3/interfaces/"
    - "iterations/v3/council/"
invariants:
  - "Spawned tasks are deduplicated by fingerprint to prevent redundant work"
  - "Rate limiting prevents task explosion from single parent"
  - "Scope envelopes ensure spawned tasks respect parent boundaries"
  - "Priority ordering ensures high-value tasks are processed first"
  - "Frontier state is maintained across orchestrator operations"
acceptance:
  - id: "A1"
    given: "Two identical tasks with same fingerprint"
    when: "both added to frontier"
    then: "only one task is queued, duplicate is rejected"
  - id: "A2"
    given: "Parent task exceeds spawn rate limit"
    when: "attempting to add new task"
    then: "task is rejected with rate limit error"
  - id: "A3"
    given: "Task outside parent scope envelope"
    when: "added to frontier"
    then: "task is filtered out or rejected"
  - id: "A4"
    given: "Frontier with multiple tasks of different priorities"
    when: "pop() is called repeatedly"
    then: "tasks are returned in priority order"
  - id: "A5"
    given: "Frontier reaches maximum capacity"
    when: "new task is added"
    then: "lowest priority task is evicted or addition is rejected"
contracts:
  - type: "rust-api"
    path: "iterations/v3/orchestration/src/frontier.rs"
    endpoints:
      - "Frontier::push()"
      - "Frontier::pop()"
      - "Frontier::contains_fingerprint()"
      - "Frontier::check_rate_limit()"
    schemas:
      - name: "Frontier"
        fields: ["queue: PriorityQueue<TaskEntry>", "fingerprints: HashSet<String>", "rate_limits: HashMap<String, usize>", "max_size: usize"]
      - name: "TaskEntry"
        fields: ["task: Task", "fingerprint: String", "parent_id: String", "priority: f64", "timestamp: DateTime<Utc>"]
non_functional:
  perf:
    push_operation_ms: 5
    pop_operation_ms: 10
    fingerprint_check_ms: 2
  security:
    - "scope-envelope-enforcement"
    - "rate-limit-prevention"
  reliability:
    - "duplicate-prevention"
    - "priority-ordering"