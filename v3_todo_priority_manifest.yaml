schema_version: 1.0
generated_at: "2025-10-22T18:34:25.545265"
generator: GPT-5 Thinking
priority_policy:
  P0: Critical-path for first working end-to-end inference and orchestration; blocks demo viability.
  P1: High-impact for durability/observability/correctness; required for repeatable runs & verification.
  P2: Important but can be stubbed; improves robustness, scale, and model quality.
  P3: Nice-to-have, enrichment, or migration cleanup; defer until core is stable.
phase_policy:
  Phase 1: Runtime Viability — reach an E2E inference loop with minimal orchestration + worker execution.
  Phase 2: Persistence & Observability — durable recovery, WAL replay, metrics, and alerting hooks.
  Phase 3: Cognitive Enablement — claim extraction/verification capable of deterministic validation.
  Phase 4: Enrichment & Expansion — multimodal, ingestors, external knowledge, and tool ecosystem.
entries:
  -
    id: P0-APPLE-ASYNC-COREML
    crate: apple-silicon
    file: iterations/v3/apple-silicon/src/async_inference.rs
    lines:
      - 787
      - 916
    title: Core ML async inference + safe wrapper
    description: Replace placeholder async inference with Core ML integration and use a safe CoreMLModel wrapper instead of raw FFI.
    priority: P0
    phase: Phase 1
    milestone: E2E inference MVP
    dependencies:
      - P0-CANDLE-ONNX
      - P0-WORKERS-EXECUTOR
    acceptance:
      - Given a small ONNX/CoreML model, a request through the orchestrator executes inference via Core ML and returns logits/tensors.
      - Unit tests assert deterministic shape/dtype and non-empty output; error paths return typed Result.
    labels:
      - coreml
      - ffi
      - safety
  -
    id: P0-CANDLE-ONNX
    crate: apple-silicon
    file: iterations/v3/apple-silicon/src/candle_backend.rs
    lines:
      - 341
      - 520
      - 543
      - 577
      - 702
      - 708
      - 714
      - 720
      - 726
      - 738
      - 744
      - 750
      - 756
      - 763
      - 769
      - 1399
      - 1413
      - 1526
      - 1533
      - 1540
      - 1547
      - 1554
      - 1561
    title: Candle backend ONNX metadata + inference
    description: Implement ONNX protobuf parsing/metadata, device selection, sync/async loading, dtype/shape handling, and PreparedModel-based inference.
    priority: P0
    phase: Phase 1
    milestone: Parity & fallback
    dependencies:
      - P0-APPLE-ASYNC-COREML
    acceptance:
      - Load .onnx/.safetensors and run CPU inference in Candle; numeric parity tests: Linf<1e-5, RMSE<1e-6 (FP32).
      - Device selection honors Apple Silicon (CPU/GPU) flags; PreparedModel trait passes all unit tests.
    labels:
      - onnx
      - candle
      - parity
      - device-selection
  -
    id: P0-WORKERS-EXECUTOR
    crate: workers
    file: iterations/v3/workers/src/executor.rs
    lines:
      - 70
      - 82
      - 407
      - 412
      - 425
      - 1003
    title: Worker registry + execution path
    description: Implement registry, circuit breaker, retry logic, simulated→real HTTP execution, and service discovery.
    priority: P0
    phase: Phase 1
    milestone: E2E inference MVP
    dependencies:
      - P0-APPLE-ASYNC-COREML
      - P0-CANDLE-ONNX
      - P0-ORCH-AUDIT
    acceptance:
      - Orchestrator dispatches a task to a worker via HTTP; success/failure metrics recorded.
      - Circuit breaker trips on repeated failures; retries exponential backoff; golden tests pass.
    labels:
      - execution
      - resilience
      - http
  -
    id: P0-ORCH-AUDIT
    crate: orchestration
    file: iterations/v3/orchestration/src/audit_trail.rs
    lines:
      - 464
    title: Persistent audit log storage
    description: Persist audit events for orchestrated tasks to enable provenance and deterministic replays.
    priority: P0
    phase: Phase 1
    milestone: Traceability baseline
    dependencies:

    acceptance:
      - Audit events persisted with monotonic ordering and idempotent writes.
      - Replay tool can reconstruct a task’s state transitions from the audit log.
    labels:
      - audit
      - provenance
      - replay
  -
    id: P0-ORCH-RECOVERY-TRACKING
    crate: orchestration
    file: iterations/v3/orchestration/src/audited_orchestrator.rs
    lines:
      - 446
    title: Error-recovery success tracking
    description: Track outcomes of error recovery to close the loop for resilience metrics and re-triage.
    priority: P0
    phase: Phase 1
    milestone: Resilience loop
    dependencies:
      - P0-ORCH-AUDIT
    acceptance:
      - Recovery events are correlated to root failures; SLO impact is computed.
      - Unit tests cover success, partial, and failed recovery paths.
    labels:
      - resilience
      - telemetry
  -
    id: P0-HOTSWAP-LB
    crate: model-hotswap
    file: iterations/v3/model-hotswap/src/load_balancer.rs
    lines:
      - 219
      - 230
    title: Model selection & intelligent routing
    description: Replace random selection with a deterministic, telemetry-aware load balancer for model routing.
    priority: P0
    phase: Phase 1
    milestone: E2E inference MVP
    dependencies:
      - P0-WORKERS-EXECUTOR
    acceptance:
      - Routing decisions use health, latency p50/p95, and compatibility flags.
      - A/B traffic split validated by integration test; failover routes to healthy model.
    labels:
      - routing
      - telemetry
      - compatibility
  -
    id: P0-RECOVERY-CLI
    crate: recovery
    file: iterations/v3/recovery/src/bin/recov.rs
    lines:
      - 266
      - 284
      - 305
      - 328
      - 342
      - 362
      - 379
      - 396
    title: "CAS recovery CLI: track, checkpoint, restore, GC"
    description: "End-to-end content-addressable recovery workflow: file tracking, checkpoints, restore planning/execution, packing, GC, integrity, stats."
    priority: P0
    phase: Phase 2
    milestone: Durable recovery
    dependencies:
      - P0-ORCH-AUDIT
    acceptance:
      - Create checkpoint; mutate working set; restore brings workspace back to checkpoint byte-for-byte.
      - Pack/GC reduce object store size with no missing referenced objects (integrity verified).
    labels:
      - cas
      - wal
      - gc
  -
    id: P0-DB-WAL-REPLAY
    crate: database
    file: iterations/v3/database/src/backup_recovery.rs
    lines:
      - 448
      - 458
      - 530
    title: WAL replay & RTO estimation
    description: Implement WAL application, point-in-time recovery, and RTO estimation for operational readiness.
    priority: P0
    phase: Phase 2
    milestone: Durable recovery
    dependencies:
      - P0-RECOVERY-CLI
    acceptance:
      - Given base snapshot + WAL, database state is restored to target timestamp with verification queries passing.
      - RTO estimate computed for last 24h under synthetic load; acceptance threshold documented.
    labels:
      - wal
      - pitre
      - rto
  -
    id: P1-API-ALERT-RTO
    crate: api-server
    file: iterations/v3/api-server/src/main.rs
    lines:
      - 931
    title: AlertManager wired to RTO/RPO monitor
    description: Pass a real RTO/RPO monitor into AlertManager to enable actionable alerts.
    priority: P1
    phase: Phase 2
    milestone: Ops visibility
    dependencies:
      - P0-DB-WAL-REPLAY
    acceptance:
      - Alerts include computed RTO/RPO and escalation hints; e2e test simulates breach and verifies notification path.
    labels:
      - alerting
      - slo
  -
    id: P1-OBS-REDIS-CACHE
    crate: observability
    file: iterations/v3/observability/src/analytics_dashboard.rs
    lines:
      - 1079
      - 1102
      - 1874
      - 1992
      - 2613
      - 2640
      - 2664
      - 2810
    title: Prod Redis + metrics + ONNX metadata + model caching
    description: Replace in-memory cache with Redis, integrate StatsD, track CPU util with history, extract ONNX metadata, add LRU model caching, and swap sim inference for real.
    priority: P1
    phase: Phase 2
    milestone: Ops visibility
    dependencies:
      - P0-APPLE-ASYNC-COREML
      - P0-CANDLE-ONNX
    acceptance:
      - Dashboard renders live metrics from Redis-backed store; historical CPU line is populated.
      - ONNX metadata view loads within 200ms p95; LRU cache hit-rate > 80% under replay.
    labels:
      - redis
      - statsd
      - onnx
      - lru
  -
    id: P1-IFACE-PROVENANCE-SLO
    crate: interfaces
    file: iterations/v3/interfaces/api.rs
    lines:
      - 985
      - 1149
      - 1180
      - 1209
      - 1242
      - 1277
    title: Provenance tracking + SLO/alert lifecycle
    description: Implement task provenance APIs and SLO measurement, status, alerting, and acknowledgement lifecycle.
    priority: P1
    phase: Phase 2
    milestone: Ops visibility
    dependencies:
      - P0-ORCH-AUDIT
      - P1-API-ALERT-RTO
    acceptance:
      - Provenance endpoint returns auditable lineage; SLO endpoints report status and next-breach ETA.
      - Alerts can be acknowledged/cleared with audit trail entries.
    labels:
      - api
      - slo
      - provenance
  -
    id: P1-CLAIMS-PROVENANCE
    crate: claim-extraction
    file: iterations/v3/claim-extraction/src/evidence.rs
    lines:
      - 1969
      - 2496
      - 2664
      - 2677
    title: Provenance parsing + leak/version/license checks
    description: Comprehensive provenance parsing and basic operational hygiene (leak detection, version & license checks).
    priority: P1
    phase: Phase 3
    milestone: Cognitive verification
    dependencies:
      - P0-RECOVERY-CLI
    acceptance:
      - Given input artifacts, provenance graph nodes/edges are extracted and validated; license and version mismatches flagged.
      - Leak detection integration produces zero false positives on golden set.
    labels:
      - provenance
      - compliance
  -
    id: P1-CLAIMS-MULTIMODAL
    crate: claim-extraction
    file: iterations/v3/claim-extraction/src/multi_modal_verification.rs
    lines:
      - 2053
      - 2061
      - 2069
      - 2093
      - 2825
      - 2986
      - 2991
      - 2996
      - 3163
      - 3168
      - 3173
      - 3178
      - 3183
      - 3367
    title: Claim extraction across docs/code/stats with correlation
    description: Extract API/usage/architecture/statistical claims; implement code/regex parsing and correlation across modalities.
    priority: P1
    phase: Phase 3
    milestone: Cognitive verification
    dependencies:
      - P1-CLAIMS-PROVENANCE
    acceptance:
      - For a multi-doc corpus, produces typed claims with sources/spans; correlation links logically consistent pairs.
      - Golden claims set (>50) matches expected precision/recall thresholds (≥0.8/≥0.7).
    labels:
      - nlp
      - code-parsing
      - correlation
  -
    id: P1-COUNCIL-TIEBREAK
    crate: council
    file: iterations/v3/council/src/coordinator.rs
    lines:
      - 136
    title: CAWS tie-breaking rules
    description: Implement deterministic tie-breaks under CAWS policy for conflicting council decisions.
    priority: P1
    phase: Phase 3
    milestone: Cognitive verification
    dependencies:
      - P1-CLAIMS-MULTIMODAL
    acceptance:
      - Conflicts resolve identically across runs; audit trail records justification and inputs.
    labels:
      - policy
      - determinism
  -
    id: P1-MEM-GC
    crate: memory
    file: iterations/v3/memory/src/lib.rs
    lines:
      - 249
      - 259
      - 270
      - 365
    title: GC integration and object pool synchronization
    description: Replace mock GC with real integration; ensure object pool wait/sync semantics are correct.
    priority: P1
    phase: Phase 2
    milestone: Durability
    dependencies:
      - P0-RECOVERY-CLI
    acceptance:
      - GC can reclaim unreachable objects without impacting active sessions; soak test shows no leaks.
      - Object pool contention test demonstrates bounded wait and no deadlocks.
    labels:
      - gc
      - synchronization
  -
    id: P1-CPE-MULTITENANT-CACHE
    crate: context-preservation-engine
    file: iterations/v3/context-preservation-engine/src/multi_tenant.rs
    lines:
      - 2103
    title: Thread-safe shared cache with TTL
    description: Introduce a sharded, thread-safe cache with TTL management for cross-session context reuse.
    priority: P1
    phase: Phase 3
    milestone: Cognitive verification
    dependencies:
      - P1-MEM-GC
    acceptance:
      - Concurrency tests pass under >64 threads; TTL expiry clears entries deterministically; hit-rate tracked.
    labels:
      - cache
      - ttl
      - concurrency
  -
    id: P1-API-DASHBOARD-GLUE
    crate: apps/web-dashboard
    file: iterations/v3/apps/web-dashboard/src/app/api/proxy/[...path]/route.ts
    lines:
      - 73
    title: V3 backend proxy config
    description: Implement proxy to API-server to enable real-time dashboard interactions.
    priority: P1
    phase: Phase 2
    milestone: Ops visibility
    dependencies:
      - P1-OBS-REDIS-CACHE
      - P1-IFACE-PROVENANCE-SLO
    acceptance:
      - Dashboard widgets fetch live data via proxy with CORS/session handling; p95 proxy latency < 50ms.
    labels:
      - proxy
      - dashboard
  -
    id: P2-IFACE-SLO-TELEMETRY
    crate: interfaces
    pattern: "iterations/v3/interfaces/api.rs:#(.*)"
    priority: P2
    phase: Phase 2
    scope: Remaining SLO endpoints & alert lifecycle details
    acceptance:
      - OpenAPI contract stabilized; all endpoint conformance tests pass.
  -
    id: P2-OBS-CPU-HISTORY
    crate: observability
    pattern: iterations/v3/observability/src/**/*.rs
    priority: P2
    phase: Phase 2
    scope: Historical CPU/util tracking, StatsD variants, non-Linux collectors
    acceptance:
      - Collectors return non-empty results on macOS/Linux; golden time-series test stable.
  -
    id: P2-HOTSWAP-VERSION-COMPAT
    crate: model-hotswap
    pattern: iterations/v3/model-hotswap/src/**/*.rs
    priority: P2
    phase: Phase 1
    scope: Version/compat checks and rollback manager
    acceptance:
      - Version gate prevents incompatible deploys; rollback e2e test passes.
  -
    id: P3-INGESTORS-VISION-VIDEO
    crate: ingestors|enrichers
    pattern: iterations/v3/(ingestors|enrichers)/src/**/*.rs
    priority: P3
    phase: Phase 4
    scope: Vision/AV bridges, SVG/GraphML completeness
    acceptance:
      - Sample images/videos produce entities; SVG/GraphML round-trip tests pass.
  -
    id: P3-KNOWLEDGE-EXTERNAL
    crate: knowledge-ingestor
    pattern: iterations/v3/knowledge-ingestor/src/**/*.rs
    priority: P3
    phase: Phase 4
    scope: Wikidata and WordNet integrations
    acceptance:
      - Queries resolved to entity graphs with provenance; rate limits respected.
  -
    id: P3-MCP-MIGRATION-CLEANUP
    crate: mcp-integration|self-prompting-agent|orchestration
    pattern: iterations/v3/**/caws_*.rs
    priority: P3
    phase: Phase 4
    scope: Remove post-migration stubs and TODOs
    acceptance:
      - No remaining 'Remove after migration complete' markers in CI scan.